// $ANTLR 3.4

	package org.emftext.language.xpath2.resource.xpath2.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xpath2Parser extends Xpath2ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "COMMENT_CONTENTS", "DECIMAL_LITERAL", "DOUBLE_LITERAL", "INTEGER_LITERAL", "LINEBREAK", "NCNAME", "STRING_LITERAL", "TEXT", "WHITESPACE", "'!='", "'$'", "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'..'", "'/'", "'//'", "':'", "'::'", "'<'", "'<<'", "'<='", "'='", "'>'", "'>='", "'>>'", "'?'", "'@'", "'['", "']'", "'ancestor'", "'ancestor-or-self'", "'and'", "'as'", "'attribute'", "'cast'", "'castable'", "'child'", "'comment'", "'descendant'", "'descendant-or-self'", "'div'", "'document-node'", "'element'", "'else'", "'empty-sequence'", "'eq'", "'every'", "'except'", "'following'", "'following-sibling'", "'for'", "'ge'", "'gt'", "'idiv'", "'if'", "'in'", "'instance'", "'intersect'", "'is'", "'item'", "'le'", "'lt'", "'mod'", "'namespace'", "'ne'", "'node'", "'of'", "'or'", "'parent'", "'preceding'", "'preceding-sibling'", "'processing-instruction'", "'return'", "'satisfies'", "'schema-attribute'", "'schema-element'", "'self'", "'some'", "'text'", "'then'", "'to'", "'treat'", "'union'", "'|'"
    };

    public static final int EOF=-1;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__90=90;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int COMMENT_CONTENTS=4;
    public static final int DECIMAL_LITERAL=5;
    public static final int DOUBLE_LITERAL=6;
    public static final int INTEGER_LITERAL=7;
    public static final int LINEBREAK=8;
    public static final int NCNAME=9;
    public static final int STRING_LITERAL=10;
    public static final int TEXT=11;
    public static final int WHITESPACE=12;

    // delegates
    public Xpath2ANTLRParserBase[] getDelegates() {
        return new Xpath2ANTLRParserBase[] {};
    }

    // delegators


    public Xpath2Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xpath2Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(229 + 1);
         

    }

    public String[] getTokenNames() { return Xpath2Parser.tokenNames; }
    public String getGrammarFileName() { return "Xpath2.g"; }


    	private org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolverFactory tokenResolverFactory = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> expectedElements = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new org.emftext.language.xpath2.resource.xpath2.IXpath2Problem() {
    					public org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemSeverity getSeverity() {
    						return org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemSeverity.ERROR;
    					}
    					public org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemType getType() {
    						return org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<org.emftext.language.xpath2.resource.xpath2.IXpath2QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement terminal = org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2FollowSetProvider.TERMINALS[terminalID];
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[] containmentFeatures = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2FollowSetProvider.LINKS[ids[i]];
    		}
    		org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace containmentTrace = new org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElement = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public org.emftext.language.xpath2.resource.xpath2.IXpath2TextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xpath2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xpath2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xpath2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xpath2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new org.emftext.language.xpath2.resource.xpath2.util.Xpath2RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xpath2Parser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xpath2Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xpath2Lexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Expr.class) {
    				return parse_org_emftext_language_xpath2_Expr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ForExpr.class) {
    				return parse_org_emftext_language_xpath2_ForExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QuantifiedExpr.class) {
    				return parse_org_emftext_language_xpath2_QuantifiedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Iterator.class) {
    				return parse_org_emftext_language_xpath2_Iterator();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IfExpr.class) {
    				return parse_org_emftext_language_xpath2_IfExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.OrExpr.class) {
    				return parse_org_emftext_language_xpath2_OrExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AndExpr.class) {
    				return parse_org_emftext_language_xpath2_AndExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ComparisonExpr.class) {
    				return parse_org_emftext_language_xpath2_ComparisonExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.RangeExpr.class) {
    				return parse_org_emftext_language_xpath2_RangeExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralComp.class) {
    				return parse_org_emftext_language_xpath2_GeneralComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ValueComp.class) {
    				return parse_org_emftext_language_xpath2_ValueComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NodeComp.class) {
    				return parse_org_emftext_language_xpath2_NodeComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AdditiveExpr.class) {
    				return parse_org_emftext_language_xpath2_AdditiveExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.MultiplicativeExpr.class) {
    				return parse_org_emftext_language_xpath2_MultiplicativeExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.UnionExpr.class) {
    				return parse_org_emftext_language_xpath2_UnionExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IntersectExceptExpr.class) {
    				return parse_org_emftext_language_xpath2_IntersectExceptExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.InstanceofExpr.class) {
    				return parse_org_emftext_language_xpath2_InstanceofExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.TreatExpr.class) {
    				return parse_org_emftext_language_xpath2_TreatExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.CastableExpr.class) {
    				return parse_org_emftext_language_xpath2_CastableExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.CastExpr.class) {
    				return parse_org_emftext_language_xpath2_CastExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.UnaryExpr.class) {
    				return parse_org_emftext_language_xpath2_UnaryExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ChildStepExpr.class) {
    				return parse_org_emftext_language_xpath2_ChildStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DescOrSelfStepExpr.class) {
    				return parse_org_emftext_language_xpath2_DescOrSelfStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.RootStepExpr.class) {
    				return parse_org_emftext_language_xpath2_RootStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SelfStepExpr.class) {
    				return parse_org_emftext_language_xpath2_SelfStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AxisStep.class) {
    				return parse_org_emftext_language_xpath2_AxisStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralForwardStep.class) {
    				return parse_org_emftext_language_xpath2_GeneralForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AbbrevForwardStep.class) {
    				return parse_org_emftext_language_xpath2_AbbrevForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralReverseStep.class) {
    				return parse_org_emftext_language_xpath2_GeneralReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AbbrevReverseStep.class) {
    				return parse_org_emftext_language_xpath2_AbbrevReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NodeKindTest.class) {
    				return parse_org_emftext_language_xpath2_NodeKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QNameTest.class) {
    				return parse_org_emftext_language_xpath2_QNameTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyWildcard.class) {
    				return parse_org_emftext_language_xpath2_AnyWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.LocalNameWildcard.class) {
    				return parse_org_emftext_language_xpath2_LocalNameWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NamespaceWildcard.class) {
    				return parse_org_emftext_language_xpath2_NamespaceWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.FilterExpr.class) {
    				return parse_org_emftext_language_xpath2_FilterExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Predicate.class) {
    				return parse_org_emftext_language_xpath2_Predicate();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.VarRef.class) {
    				return parse_org_emftext_language_xpath2_VarRef();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.VarName.class) {
    				return parse_org_emftext_language_xpath2_VarName();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ParenthesizedExpr.class) {
    				return parse_org_emftext_language_xpath2_ParenthesizedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ContextItemExpr.class) {
    				return parse_org_emftext_language_xpath2_ContextItemExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.FunctionCall.class) {
    				return parse_org_emftext_language_xpath2_FunctionCall();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SingleType.class) {
    				return parse_org_emftext_language_xpath2_SingleType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.EmptySequenceType.class) {
    				return parse_org_emftext_language_xpath2_EmptySequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ItemSequenceType.class) {
    				return parse_org_emftext_language_xpath2_ItemSequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ItemKindTest.class) {
    				return parse_org_emftext_language_xpath2_ItemKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyItemType.class) {
    				return parse_org_emftext_language_xpath2_AnyItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AtomicItemType.class) {
    				return parse_org_emftext_language_xpath2_AtomicItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AtomicType.class) {
    				return parse_org_emftext_language_xpath2_AtomicType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyKindTest.class) {
    				return parse_org_emftext_language_xpath2_AnyKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DocumentTest.class) {
    				return parse_org_emftext_language_xpath2_DocumentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.TextTest.class) {
    				return parse_org_emftext_language_xpath2_TextTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.CommentTest.class) {
    				return parse_org_emftext_language_xpath2_CommentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.PITest.class) {
    				return parse_org_emftext_language_xpath2_PITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NCNamePITest.class) {
    				return parse_org_emftext_language_xpath2_NCNamePITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.StringLiteralPITest.class) {
    				return parse_org_emftext_language_xpath2_StringLiteralPITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AttributeTest.class) {
    				return parse_org_emftext_language_xpath2_AttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.WildcardAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_WildcardAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NameAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_NameAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SchemaAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_SchemaAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ElementTest.class) {
    				return parse_org_emftext_language_xpath2_ElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.WildcardElementTest.class) {
    				return parse_org_emftext_language_xpath2_WildcardElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NameElementTest.class) {
    				return parse_org_emftext_language_xpath2_NameElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SchemaElementTest.class) {
    				return parse_org_emftext_language_xpath2_SchemaElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IntegerLiteral.class) {
    				return parse_org_emftext_language_xpath2_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DecimalLiteral.class) {
    				return parse_org_emftext_language_xpath2_DecimalLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DoubleLiteral.class) {
    				return parse_org_emftext_language_xpath2_DoubleLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.StringLiteral.class) {
    				return parse_org_emftext_language_xpath2_StringLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QName.class) {
    				return parse_org_emftext_language_xpath2_QName();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.PathExpr.class) {
    				return parse_org_emftext_language_xpath2_PathExpr();
    			}
    		}
    		throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.emftext.language.xpath2.resource.xpath2.IXpath2Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public org.emftext.language.xpath2.resource.xpath2.IXpath2ParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>>();
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ParseResult parseResult = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		org.emftext.language.xpath2.resource.xpath2.IXpath2ParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    		java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> newFollowSet = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 229;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.emftext.language.xpath2.resource.xpath2.util.Xpath2Pair<org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.emftext.language.xpath2.resource.xpath2.util.Xpath2Pair<org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[]> newFollowerPair : newFollowers) {
    							org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace containmentTrace = new org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace(null, newFollowerPair.getRight());
    							org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal newFollowTerminal = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xpath2.g:706:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_emftext_language_xpath2_Expr ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        org.emftext.language.xpath2.Expr c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xpath2.g:707:2: ( (c0= parse_org_emftext_language_xpath2_Expr ) EOF )
            // Xpath2.g:708:2: (c0= parse_org_emftext_language_xpath2_Expr ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[0]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[3]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[5]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[6]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[7]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[8]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[9]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[10]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[12]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[14]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[15]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[16]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[17]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[18]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[19]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[20]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[21]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xpath2.g:734:2: (c0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:735:3: c0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_start82);
            c0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_org_emftext_language_xpath2_Expr"
    // Xpath2.g:743:1: parse_org_emftext_language_xpath2_Expr returns [org.emftext.language.xpath2.Expr element = null] : (a0_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ;
    public final org.emftext.language.xpath2.Expr parse_org_emftext_language_xpath2_Expr() throws RecognitionException {
        org.emftext.language.xpath2.Expr element =  null;

        int parse_org_emftext_language_xpath2_Expr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.ExprSingle a0_0 =null;

        org.emftext.language.xpath2.ExprSingle a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xpath2.g:746:2: ( (a0_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* )
            // Xpath2.g:747:2: (a0_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
            {
            // Xpath2.g:747:2: (a0_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:748:3: a0_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr119);
            a0_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[22]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[23]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[24]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[25]);
            	}

            // Xpath2.g:776:2: ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==19) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // Xpath2.g:777:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            	    {
            	    // Xpath2.g:777:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            	    // Xpath2.g:778:4: a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
            	    {
            	    a1=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_Expr146); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[26]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[27]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[28]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[29]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[30]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[31]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[32]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[33]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[34]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[35]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[36]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[37]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[38]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[39]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[40]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[41]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[42]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[43]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[44]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[45]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[46]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[47]);
            	    			}

            	    // Xpath2.g:813:4: (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
            	    // Xpath2.g:814:5: a2_0= parse_org_emftext_language_xpath2_ExprSingle
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr172);
            	    a2_0=parse_org_emftext_language_xpath2_ExprSingle();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_1, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[48]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[49]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[50]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[51]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[52]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[53]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[54]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[55]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_emftext_language_xpath2_Expr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Expr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ForExpr"
    // Xpath2.g:854:1: parse_org_emftext_language_xpath2_ForExpr returns [org.emftext.language.xpath2.ForExpr element = null] : a0= 'for' (a1_0= parse_org_emftext_language_xpath2_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.ForExpr parse_org_emftext_language_xpath2_ForExpr() throws RecognitionException {
        org.emftext.language.xpath2.ForExpr element =  null;

        int parse_org_emftext_language_xpath2_ForExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.emftext.language.xpath2.Iterator a1_0 =null;

        org.emftext.language.xpath2.Iterator a3_0 =null;

        org.emftext.language.xpath2.ExprSingle a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xpath2.g:857:2: (a0= 'for' (a1_0= parse_org_emftext_language_xpath2_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:858:2: a0= 'for' (a1_0= parse_org_emftext_language_xpath2_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            a0=(Token)match(input,59,FOLLOW_59_in_parse_org_emftext_language_xpath2_ForExpr228); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[56]);
            	}

            // Xpath2.g:872:2: (a1_0= parse_org_emftext_language_xpath2_Iterator )
            // Xpath2.g:873:3: a1_0= parse_org_emftext_language_xpath2_Iterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr246);
            a1_0=parse_org_emftext_language_xpath2_Iterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[57]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[58]);
            	}

            // Xpath2.g:899:2: ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==19) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // Xpath2.g:900:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    {
            	    // Xpath2.g:900:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    // Xpath2.g:901:4: a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator )
            	    {
            	    a2=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_ForExpr273); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[59]);
            	    			}

            	    // Xpath2.g:915:4: (a3_0= parse_org_emftext_language_xpath2_Iterator )
            	    // Xpath2.g:916:5: a3_0= parse_org_emftext_language_xpath2_Iterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr299);
            	    a3_0=parse_org_emftext_language_xpath2_Iterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3_0 != null) {
            	    						if (a3_0 != null) {
            	    							Object value = a3_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_2_0_0_1, a3_0, true);
            	    						copyLocalizationInfos(a3_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[60]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[61]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[62]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[63]);
            	}

            a4=(Token)match(input,81,FOLLOW_81_in_parse_org_emftext_language_xpath2_ForExpr340); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[64]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[65]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[66]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[67]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[68]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[69]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[70]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[71]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[72]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[73]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[74]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[75]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[76]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[77]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[78]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[79]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[80]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[81]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[82]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[83]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[84]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[85]);
            	}

            // Xpath2.g:985:2: (a5_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:986:3: a5_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_ForExpr358);
            a5_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a5_0 != null) {
            				if (a5_0 != null) {
            					Object value = a5_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__RETURN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_4, a5_0, true);
            				copyLocalizationInfos(a5_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[86]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[87]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[88]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[89]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[90]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[91]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_emftext_language_xpath2_ForExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ForExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_QuantifiedExpr"
    // Xpath2.g:1018:1: parse_org_emftext_language_xpath2_QuantifiedExpr returns [org.emftext.language.xpath2.QuantifiedExpr element = null] : ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.QuantifiedExpr parse_org_emftext_language_xpath2_QuantifiedExpr() throws RecognitionException {
        org.emftext.language.xpath2.QuantifiedExpr element =  null;

        int parse_org_emftext_language_xpath2_QuantifiedExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a5=null;
        Token a7=null;
        org.emftext.language.xpath2.Iterator a4_0 =null;

        org.emftext.language.xpath2.Iterator a6_0 =null;

        org.emftext.language.xpath2.ExprSingle a8_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xpath2.g:1021:2: ( ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:1022:2: ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            // Xpath2.g:1022:2: ( (a0= 'some' |a1= 'every' ) )
            // Xpath2.g:1023:3: (a0= 'some' |a1= 'every' )
            {
            // Xpath2.g:1023:3: (a0= 'some' |a1= 'every' )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==86) ) {
                alt3=1;
            }
            else if ( (LA3_0==55) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // Xpath2.g:1024:4: a0= 'some'
                    {
                    a0=(Token)match(input,86,FOLLOW_86_in_parse_org_emftext_language_xpath2_QuantifiedExpr400); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath2.QuantifierKind.SOME_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1037:8: a1= 'every'
                    {
                    a1=(Token)match(input,55,FOLLOW_55_in_parse_org_emftext_language_xpath2_QuantifiedExpr415); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath2.QuantifierKind.EVERY_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[92]);
            	}

            // Xpath2.g:1057:2: (a4_0= parse_org_emftext_language_xpath2_Iterator )
            // Xpath2.g:1058:3: a4_0= parse_org_emftext_language_xpath2_Iterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr440);
            a4_0=parse_org_emftext_language_xpath2_Iterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_1, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[93]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[94]);
            	}

            // Xpath2.g:1084:2: ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==19) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xpath2.g:1085:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    {
            	    // Xpath2.g:1085:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    // Xpath2.g:1086:4: a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator )
            	    {
            	    a5=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_QuantifiedExpr467); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[95]);
            	    			}

            	    // Xpath2.g:1100:4: (a6_0= parse_org_emftext_language_xpath2_Iterator )
            	    // Xpath2.g:1101:5: a6_0= parse_org_emftext_language_xpath2_Iterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr493);
            	    a6_0=parse_org_emftext_language_xpath2_Iterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a6_0 != null) {
            	    						if (a6_0 != null) {
            	    							Object value = a6_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_2_0_0_1, a6_0, true);
            	    						copyLocalizationInfos(a6_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[96]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[97]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[98]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[99]);
            	}

            a7=(Token)match(input,82,FOLLOW_82_in_parse_org_emftext_language_xpath2_QuantifiedExpr534); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[100]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[101]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[102]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[103]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[104]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[105]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[106]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[108]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[109]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[110]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[111]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[112]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[113]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[114]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[115]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[116]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[117]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[118]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[119]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[120]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[121]);
            	}

            // Xpath2.g:1170:2: (a8_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1171:3: a8_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_QuantifiedExpr552);
            a8_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            				startIncompleteElement(element);
            			}
            			if (a8_0 != null) {
            				if (a8_0 != null) {
            					Object value = a8_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__SATISFIES), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_4, a8_0, true);
            				copyLocalizationInfos(a8_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[122]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[124]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[127]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_emftext_language_xpath2_QuantifiedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QuantifiedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_Iterator"
    // Xpath2.g:1203:1: parse_org_emftext_language_xpath2_Iterator returns [org.emftext.language.xpath2.Iterator element = null] : a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName ) a2= 'in' (a3_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.Iterator parse_org_emftext_language_xpath2_Iterator() throws RecognitionException {
        org.emftext.language.xpath2.Iterator element =  null;

        int parse_org_emftext_language_xpath2_Iterator_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.VarName a1_0 =null;

        org.emftext.language.xpath2.ExprSingle a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xpath2.g:1206:2: (a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName ) a2= 'in' (a3_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:1207:2: a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName ) a2= 'in' (a3_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            a0=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_Iterator585); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[129]);
            	}

            // Xpath2.g:1222:2: (a1_0= parse_org_emftext_language_xpath2_VarName )
            // Xpath2.g:1223:3: a1_0= parse_org_emftext_language_xpath2_VarName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_Iterator603);
            a1_0=parse_org_emftext_language_xpath2_VarName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__VAR_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[130]);
            	}

            a2=(Token)match(input,64,FOLLOW_64_in_parse_org_emftext_language_xpath2_Iterator621); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[131]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[132]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[133]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[134]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[135]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[136]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[137]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[138]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[139]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[140]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[141]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[142]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[143]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[144]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[145]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[146]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[147]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[148]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[149]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[152]);
            	}

            // Xpath2.g:1283:2: (a3_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1284:3: a3_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Iterator639);
            a3_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__LIST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[153]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[156]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_emftext_language_xpath2_Iterator_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Iterator"



    // $ANTLR start "parse_org_emftext_language_xpath2_IfExpr"
    // Xpath2.g:1314:1: parse_org_emftext_language_xpath2_IfExpr returns [org.emftext.language.xpath2.IfExpr element = null] : a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.IfExpr parse_org_emftext_language_xpath2_IfExpr() throws RecognitionException {
        org.emftext.language.xpath2.IfExpr element =  null;

        int parse_org_emftext_language_xpath2_IfExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath2.Expr a2_0 =null;

        org.emftext.language.xpath2.ExprSingle a5_0 =null;

        org.emftext.language.xpath2.ExprSingle a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xpath2.g:1317:2: (a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:1318:2: a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            a0=(Token)match(input,63,FOLLOW_63_in_parse_org_emftext_language_xpath2_IfExpr672); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[157]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_IfExpr686); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[159]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[160]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[161]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[162]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[163]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[165]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[166]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[167]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[168]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[169]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[170]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[171]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[172]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[173]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[174]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[175]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[176]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[177]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[178]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[179]);
            	}

            // Xpath2.g:1367:2: (a2_0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:1368:3: a2_0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_IfExpr704);
            a2_0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[180]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_IfExpr722); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[181]);
            	}

            a4=(Token)match(input,88,FOLLOW_88_in_parse_org_emftext_language_xpath2_IfExpr736); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[182]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[183]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[184]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[185]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[187]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[188]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[189]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[190]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[191]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[192]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[194]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[195]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[196]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[197]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[199]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[200]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[201]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[202]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[203]);
            	}

            // Xpath2.g:1442:2: (a5_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1443:3: a5_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr754);
            a5_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            				startIncompleteElement(element);
            			}
            			if (a5_0 != null) {
            				if (a5_0 != null) {
            					Object value = a5_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__THEN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_5, a5_0, true);
            				copyLocalizationInfos(a5_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[204]);
            	}

            a6=(Token)match(input,52,FOLLOW_52_in_parse_org_emftext_language_xpath2_IfExpr772); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[205]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[206]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[207]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[208]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[209]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[210]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[211]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[212]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[213]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[214]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[215]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[216]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[217]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[218]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[219]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[220]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[221]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[222]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[223]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[224]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[225]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[226]);
            	}

            // Xpath2.g:1503:2: (a7_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1504:3: a7_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr790);
            a7_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__ELSE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_7, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[227]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[228]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[229]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[230]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[231]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[232]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_emftext_language_xpath2_IfExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IfExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_OrExpr"
    // Xpath2.g:1536:1: parse_org_emftext_language_xpath2_OrExpr returns [org.emftext.language.xpath2.OrExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )* ;
    public final org.emftext.language.xpath2.OrExpr parse_org_emftext_language_xpath2_OrExpr() throws RecognitionException {
        org.emftext.language.xpath2.OrExpr element =  null;

        int parse_org_emftext_language_xpath2_OrExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AndExpr a0_0 =null;

        org.emftext.language.xpath2.AndExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xpath2.g:1539:2: ( (a0_0= parse_org_emftext_language_xpath2_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )* )
            // Xpath2.g:1540:2: (a0_0= parse_org_emftext_language_xpath2_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )*
            {
            // Xpath2.g:1540:2: (a0_0= parse_org_emftext_language_xpath2_AndExpr )
            // Xpath2.g:1541:3: a0_0= parse_org_emftext_language_xpath2_AndExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr827);
            a0_0=parse_org_emftext_language_xpath2_AndExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.OR_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[233]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[234]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[235]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[236]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[237]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[238]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[239]);
            	}

            // Xpath2.g:1572:2: ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==76) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // Xpath2.g:1573:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) )
            	    {
            	    // Xpath2.g:1573:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) )
            	    // Xpath2.g:1574:4: a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr )
            	    {
            	    a1=(Token)match(input,76,FOLLOW_76_in_parse_org_emftext_language_xpath2_OrExpr854); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[240]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[241]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[242]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[243]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[244]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[245]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[246]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[247]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[248]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[249]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[250]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[251]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[252]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[253]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[254]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[255]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[256]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[257]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[258]);
            	    			}

            	    // Xpath2.g:1606:4: (a2_0= parse_org_emftext_language_xpath2_AndExpr )
            	    // Xpath2.g:1607:5: a2_0= parse_org_emftext_language_xpath2_AndExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr880);
            	    a2_0=parse_org_emftext_language_xpath2_AndExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.OR_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_1_0_0_1, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[259]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[260]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[261]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[262]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[263]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[264]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[265]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[266]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[267]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[268]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[269]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[270]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[271]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[272]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_emftext_language_xpath2_OrExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_OrExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_AndExpr"
    // Xpath2.g:1653:1: parse_org_emftext_language_xpath2_AndExpr returns [org.emftext.language.xpath2.AndExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )* ;
    public final org.emftext.language.xpath2.AndExpr parse_org_emftext_language_xpath2_AndExpr() throws RecognitionException {
        org.emftext.language.xpath2.AndExpr element =  null;

        int parse_org_emftext_language_xpath2_AndExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.ComparisonExpr a0_0 =null;

        org.emftext.language.xpath2.ComparisonExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xpath2.g:1656:2: ( (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )* )
            // Xpath2.g:1657:2: (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )*
            {
            // Xpath2.g:1657:2: (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr )
            // Xpath2.g:1658:3: a0_0= parse_org_emftext_language_xpath2_ComparisonExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr940);
            a0_0=parse_org_emftext_language_xpath2_ComparisonExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AND_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[273]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[274]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[275]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[276]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[277]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[278]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[279]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[280]);
            	}

            // Xpath2.g:1690:2: ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==40) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // Xpath2.g:1691:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) )
            	    {
            	    // Xpath2.g:1691:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) )
            	    // Xpath2.g:1692:4: a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr )
            	    {
            	    a1=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath2_AndExpr967); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[281]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[282]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[283]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[284]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[285]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[286]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[287]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[288]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[289]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[290]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[291]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[292]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[293]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[294]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[295]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[296]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[297]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[298]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[299]);
            	    			}

            	    // Xpath2.g:1724:4: (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr )
            	    // Xpath2.g:1725:5: a2_0= parse_org_emftext_language_xpath2_ComparisonExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr993);
            	    a2_0=parse_org_emftext_language_xpath2_ComparisonExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AND_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_1_0_0_1, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[300]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[301]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[302]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[303]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[304]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[305]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[306]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[307]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[308]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[309]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[310]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[311]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[312]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[313]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[314]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[315]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_emftext_language_xpath2_AndExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AndExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ComparisonExpr"
    // Xpath2.g:1773:1: parse_org_emftext_language_xpath2_ComparisonExpr returns [org.emftext.language.xpath2.ComparisonExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )? ;
    public final org.emftext.language.xpath2.ComparisonExpr parse_org_emftext_language_xpath2_ComparisonExpr() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr element =  null;

        int parse_org_emftext_language_xpath2_ComparisonExpr_StartIndex = input.index();

        org.emftext.language.xpath2.RangeExpr a0_0 =null;

        org.emftext.language.xpath2.Comp a1_0 =null;

        org.emftext.language.xpath2.RangeExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xpath2.g:1776:2: ( (a0_0= parse_org_emftext_language_xpath2_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )? )
            // Xpath2.g:1777:2: (a0_0= parse_org_emftext_language_xpath2_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )?
            {
            // Xpath2.g:1777:2: (a0_0= parse_org_emftext_language_xpath2_RangeExpr )
            // Xpath2.g:1778:3: a0_0= parse_org_emftext_language_xpath2_RangeExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1053);
            a0_0=parse_org_emftext_language_xpath2_RangeExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__LEFT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[316]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[317]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[318]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[319]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[320]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[321]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[322]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[323]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[324]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[325]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[326]);
            	}

            // Xpath2.g:1813:2: ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==13||(LA7_0 >= 27 && LA7_0 <= 33)||LA7_0==54||(LA7_0 >= 60 && LA7_0 <= 61)||LA7_0==67||(LA7_0 >= 69 && LA7_0 <= 70)||LA7_0==73) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // Xpath2.g:1814:3: ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) )
                    {
                    // Xpath2.g:1814:3: ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) )
                    // Xpath2.g:1815:4: (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr )
                    {
                    // Xpath2.g:1815:4: (a1_0= parse_org_emftext_language_xpath2_Comp )
                    // Xpath2.g:1816:5: a1_0= parse_org_emftext_language_xpath2_Comp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Comp_in_parse_org_emftext_language_xpath2_ComparisonExpr1086);
                    a1_0=parse_org_emftext_language_xpath2_Comp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__OPERATOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[327]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[328]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[329]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[330]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[331]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[332]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[333]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[334]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[335]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[336]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[337]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[338]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[339]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[340]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[341]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[342]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[343]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[344]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[345]);
                    			}

                    // Xpath2.g:1859:4: (a2_0= parse_org_emftext_language_xpath2_RangeExpr )
                    // Xpath2.g:1860:5: a2_0= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1120);
                    a2_0=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__RIGHT), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[346]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[347]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[348]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[349]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[350]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[351]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[352]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[353]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[354]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[355]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[356]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[357]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[358]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[359]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[360]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[361]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_emftext_language_xpath2_ComparisonExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ComparisonExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_RangeExpr"
    // Xpath2.g:1908:1: parse_org_emftext_language_xpath2_RangeExpr returns [org.emftext.language.xpath2.RangeExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )? ;
    public final org.emftext.language.xpath2.RangeExpr parse_org_emftext_language_xpath2_RangeExpr() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr element =  null;

        int parse_org_emftext_language_xpath2_RangeExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AdditiveExpr a0_0 =null;

        org.emftext.language.xpath2.AdditiveExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xpath2.g:1911:2: ( (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )? )
            // Xpath2.g:1912:2: (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )?
            {
            // Xpath2.g:1912:2: (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr )
            // Xpath2.g:1913:3: a0_0= parse_org_emftext_language_xpath2_AdditiveExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1180);
            a0_0=parse_org_emftext_language_xpath2_AdditiveExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.RANGE_EXPR__FROM), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[362]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[363]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[364]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[365]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[366]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[367]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[368]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[369]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[370]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[371]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[372]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[373]);
            	}

            // Xpath2.g:1949:2: ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==89) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // Xpath2.g:1950:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) )
                    {
                    // Xpath2.g:1950:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) )
                    // Xpath2.g:1951:4: a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr )
                    {
                    a1=(Token)match(input,89,FOLLOW_89_in_parse_org_emftext_language_xpath2_RangeExpr1207); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[374]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[375]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[376]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[377]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[378]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[379]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[380]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[381]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[382]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[383]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[384]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[385]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[386]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[387]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[388]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[389]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[390]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[391]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[392]);
                    			}

                    // Xpath2.g:1983:4: (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr )
                    // Xpath2.g:1984:5: a2_0= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1233);
                    a2_0=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.RANGE_EXPR__TO), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[393]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[394]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[395]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[396]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[397]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[398]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[399]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[400]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[401]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[402]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[403]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[404]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[405]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[406]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[407]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[408]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[409]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[410]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[413]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[414]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_emftext_language_xpath2_RangeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_RangeExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralComp"
    // Xpath2.g:2038:1: parse_org_emftext_language_xpath2_GeneralComp returns [org.emftext.language.xpath2.GeneralComp element = null] : ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) ;
    public final org.emftext.language.xpath2.GeneralComp parse_org_emftext_language_xpath2_GeneralComp() throws RecognitionException {
        org.emftext.language.xpath2.GeneralComp element =  null;

        int parse_org_emftext_language_xpath2_GeneralComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xpath2.g:2041:2: ( ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) )
            // Xpath2.g:2042:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            {
            // Xpath2.g:2042:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xpath2.g:2043:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xpath2.g:2043:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt9=6;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt9=1;
                }
                break;
            case 13:
                {
                alt9=2;
                }
                break;
            case 27:
                {
                alt9=3;
                }
                break;
            case 29:
                {
                alt9=4;
                }
                break;
            case 31:
                {
                alt9=5;
                }
                break;
            case 32:
                {
                alt9=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;

            }

            switch (alt9) {
                case 1 :
                    // Xpath2.g:2044:4: a0= '='
                    {
                    a0=(Token)match(input,30,FOLLOW_30_in_parse_org_emftext_language_xpath2_GeneralComp1298); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2057:8: a1= '!='
                    {
                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_GeneralComp1313); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2070:8: a2= '<'
                    {
                    a2=(Token)match(input,27,FOLLOW_27_in_parse_org_emftext_language_xpath2_GeneralComp1328); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:2083:8: a3= '<='
                    {
                    a3=(Token)match(input,29,FOLLOW_29_in_parse_org_emftext_language_xpath2_GeneralComp1343); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:2096:8: a4= '>'
                    {
                    a4=(Token)match(input,31,FOLLOW_31_in_parse_org_emftext_language_xpath2_GeneralComp1358); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:2109:8: a5= '>='
                    {
                    a5=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath2_GeneralComp1373); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[415]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[416]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[417]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[418]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[419]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[420]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[426]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[428]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[429]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[430]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[431]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[432]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[433]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_emftext_language_xpath2_GeneralComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_ValueComp"
    // Xpath2.g:2149:1: parse_org_emftext_language_xpath2_ValueComp returns [org.emftext.language.xpath2.ValueComp element = null] : ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) ;
    public final org.emftext.language.xpath2.ValueComp parse_org_emftext_language_xpath2_ValueComp() throws RecognitionException {
        org.emftext.language.xpath2.ValueComp element =  null;

        int parse_org_emftext_language_xpath2_ValueComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xpath2.g:2152:2: ( ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) )
            // Xpath2.g:2153:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            {
            // Xpath2.g:2153:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            // Xpath2.g:2154:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            {
            // Xpath2.g:2154:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            int alt10=6;
            switch ( input.LA(1) ) {
            case 54:
                {
                alt10=1;
                }
                break;
            case 73:
                {
                alt10=2;
                }
                break;
            case 70:
                {
                alt10=3;
                }
                break;
            case 69:
                {
                alt10=4;
                }
                break;
            case 61:
                {
                alt10=5;
                }
                break;
            case 60:
                {
                alt10=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;

            }

            switch (alt10) {
                case 1 :
                    // Xpath2.g:2155:4: a0= 'eq'
                    {
                    a0=(Token)match(input,54,FOLLOW_54_in_parse_org_emftext_language_xpath2_ValueComp1418); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2168:8: a1= 'ne'
                    {
                    a1=(Token)match(input,73,FOLLOW_73_in_parse_org_emftext_language_xpath2_ValueComp1433); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2181:8: a2= 'lt'
                    {
                    a2=(Token)match(input,70,FOLLOW_70_in_parse_org_emftext_language_xpath2_ValueComp1448); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:2194:8: a3= 'le'
                    {
                    a3=(Token)match(input,69,FOLLOW_69_in_parse_org_emftext_language_xpath2_ValueComp1463); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:2207:8: a4= 'gt'
                    {
                    a4=(Token)match(input,61,FOLLOW_61_in_parse_org_emftext_language_xpath2_ValueComp1478); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:2220:8: a5= 'ge'
                    {
                    a5=(Token)match(input,60,FOLLOW_60_in_parse_org_emftext_language_xpath2_ValueComp1493); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[434]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[435]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[436]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[437]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[438]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[439]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[443]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[452]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_emftext_language_xpath2_ValueComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ValueComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeComp"
    // Xpath2.g:2260:1: parse_org_emftext_language_xpath2_NodeComp returns [org.emftext.language.xpath2.NodeComp element = null] : ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) ;
    public final org.emftext.language.xpath2.NodeComp parse_org_emftext_language_xpath2_NodeComp() throws RecognitionException {
        org.emftext.language.xpath2.NodeComp element =  null;

        int parse_org_emftext_language_xpath2_NodeComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xpath2.g:2263:2: ( ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) )
            // Xpath2.g:2264:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            {
            // Xpath2.g:2264:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            // Xpath2.g:2265:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            {
            // Xpath2.g:2265:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            int alt11=3;
            switch ( input.LA(1) ) {
            case 67:
                {
                alt11=1;
                }
                break;
            case 28:
                {
                alt11=2;
                }
                break;
            case 33:
                {
                alt11=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;

            }

            switch (alt11) {
                case 1 :
                    // Xpath2.g:2266:4: a0= 'is'
                    {
                    a0=(Token)match(input,67,FOLLOW_67_in_parse_org_emftext_language_xpath2_NodeComp1538); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.IS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2279:8: a1= '<<'
                    {
                    a1=(Token)match(input,28,FOLLOW_28_in_parse_org_emftext_language_xpath2_NodeComp1553); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.PRECEDES_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2292:8: a2= '>>'
                    {
                    a2=(Token)match(input,33,FOLLOW_33_in_parse_org_emftext_language_xpath2_NodeComp1568); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.FOLLOWS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[456]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[457]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[458]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[459]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[460]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[461]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[462]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[463]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[464]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[465]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[466]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[467]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[468]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[469]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[470]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[471]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_emftext_language_xpath2_NodeComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_AdditiveExpr"
    // Xpath2.g:2332:1: parse_org_emftext_language_xpath2_AdditiveExpr returns [org.emftext.language.xpath2.AdditiveExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )* ;
    public final org.emftext.language.xpath2.AdditiveExpr parse_org_emftext_language_xpath2_AdditiveExpr() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr element =  null;

        int parse_org_emftext_language_xpath2_AdditiveExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.MultiplicativeExpr a0_0 =null;

        org.emftext.language.xpath2.MultiplicativeExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xpath2.g:2335:2: ( (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )* )
            // Xpath2.g:2336:2: (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )*
            {
            // Xpath2.g:2336:2: (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr )
            // Xpath2.g:2337:3: a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr1608);
            a0_0=parse_org_emftext_language_xpath2_MultiplicativeExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[472]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[473]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[474]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[475]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[476]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[477]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[478]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[479]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[480]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[481]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[482]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[483]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[484]);
            	}

            // Xpath2.g:2374:2: ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==18||LA13_0==20) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // Xpath2.g:2375:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) )
            	    {
            	    // Xpath2.g:2375:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) )
            	    // Xpath2.g:2376:4: ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr )
            	    {
            	    // Xpath2.g:2376:4: ( (a1= '+' |a2= '-' ) )
            	    // Xpath2.g:2377:5: (a1= '+' |a2= '-' )
            	    {
            	    // Xpath2.g:2377:5: (a1= '+' |a2= '-' )
            	    int alt12=2;
            	    int LA12_0 = input.LA(1);

            	    if ( (LA12_0==18) ) {
            	        alt12=1;
            	    }
            	    else if ( (LA12_0==20) ) {
            	        alt12=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 12, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt12) {
            	        case 1 :
            	            // Xpath2.g:2378:6: a1= '+'
            	            {
            	            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath2_AdditiveExpr1648); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath2.AdditiveOpKind.ADDITION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:2391:12: a2= '-'
            	            {
            	            a2=(Token)match(input,20,FOLLOW_20_in_parse_org_emftext_language_xpath2_AdditiveExpr1667); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath2.AdditiveOpKind.SUBTRACTION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[485]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[486]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[487]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[488]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[489]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[490]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[491]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[492]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[493]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[494]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[495]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[496]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[497]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[498]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[499]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[500]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[501]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[502]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[503]);
            	    			}

            	    // Xpath2.g:2429:4: (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr )
            	    // Xpath2.g:2430:5: a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr1704);
            	    a5_0=parse_org_emftext_language_xpath2_MultiplicativeExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_1_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[504]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[505]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[506]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[507]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[508]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[509]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[510]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[511]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[512]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[513]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[514]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[515]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[516]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[517]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[518]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[519]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[520]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[521]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[522]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[523]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[524]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[525]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[526]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[527]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[528]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[529]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_emftext_language_xpath2_AdditiveExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AdditiveExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_MultiplicativeExpr"
    // Xpath2.g:2488:1: parse_org_emftext_language_xpath2_MultiplicativeExpr returns [org.emftext.language.xpath2.MultiplicativeExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )* ;
    public final org.emftext.language.xpath2.MultiplicativeExpr parse_org_emftext_language_xpath2_MultiplicativeExpr() throws RecognitionException {
        org.emftext.language.xpath2.MultiplicativeExpr element =  null;

        int parse_org_emftext_language_xpath2_MultiplicativeExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        org.emftext.language.xpath2.UnionExpr a0_0 =null;

        org.emftext.language.xpath2.UnionExpr a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xpath2.g:2491:2: ( (a0_0= parse_org_emftext_language_xpath2_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )* )
            // Xpath2.g:2492:2: (a0_0= parse_org_emftext_language_xpath2_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )*
            {
            // Xpath2.g:2492:2: (a0_0= parse_org_emftext_language_xpath2_UnionExpr )
            // Xpath2.g:2493:3: a0_0= parse_org_emftext_language_xpath2_UnionExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1764);
            a0_0=parse_org_emftext_language_xpath2_UnionExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[530]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[531]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[532]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[533]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[534]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[535]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[536]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[537]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[538]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[539]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[540]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[541]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[542]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[543]);
            	}

            // Xpath2.g:2531:2: ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==17||LA15_0==49||LA15_0==62||LA15_0==71) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // Xpath2.g:2532:3: ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) )
            	    {
            	    // Xpath2.g:2532:3: ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) )
            	    // Xpath2.g:2533:4: ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr )
            	    {
            	    // Xpath2.g:2533:4: ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) )
            	    // Xpath2.g:2534:5: (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' )
            	    {
            	    // Xpath2.g:2534:5: (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' )
            	    int alt14=4;
            	    switch ( input.LA(1) ) {
            	    case 17:
            	        {
            	        alt14=1;
            	        }
            	        break;
            	    case 49:
            	        {
            	        alt14=2;
            	        }
            	        break;
            	    case 62:
            	        {
            	        alt14=3;
            	        }
            	        break;
            	    case 71:
            	        {
            	        alt14=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 14, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt14) {
            	        case 1 :
            	            // Xpath2.g:2535:6: a1= '*'
            	            {
            	            a1=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1804); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.MULTIPLICATION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:2548:12: a2= 'div'
            	            {
            	            a2=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1823); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.DIV_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xpath2.g:2561:12: a3= 'idiv'
            	            {
            	            a3=(Token)match(input,62,FOLLOW_62_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1842); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.IDIV_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 4 :
            	            // Xpath2.g:2574:12: a4= 'mod'
            	            {
            	            a4=(Token)match(input,71,FOLLOW_71_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1861); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.MOD_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[544]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[545]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[546]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[547]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[548]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[549]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[550]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[551]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[552]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[553]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[554]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[555]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[556]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[557]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[558]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[559]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[560]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[561]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[562]);
            	    			}

            	    // Xpath2.g:2612:4: (a7_0= parse_org_emftext_language_xpath2_UnionExpr )
            	    // Xpath2.g:2613:5: a7_0= parse_org_emftext_language_xpath2_UnionExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1898);
            	    a7_0=parse_org_emftext_language_xpath2_UnionExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a7_0 != null) {
            	    						if (a7_0 != null) {
            	    							Object value = a7_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_1, a7_0, true);
            	    						copyLocalizationInfos(a7_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[563]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[564]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[565]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[566]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[567]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[568]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[569]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[570]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[571]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[572]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[573]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[574]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[575]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[576]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[577]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[578]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[579]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[580]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[581]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[582]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[583]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[584]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[585]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[586]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[587]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[588]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[589]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[590]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_emftext_language_xpath2_MultiplicativeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_MultiplicativeExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_UnionExpr"
    // Xpath2.g:2673:1: parse_org_emftext_language_xpath2_UnionExpr returns [org.emftext.language.xpath2.UnionExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )* ;
    public final org.emftext.language.xpath2.UnionExpr parse_org_emftext_language_xpath2_UnionExpr() throws RecognitionException {
        org.emftext.language.xpath2.UnionExpr element =  null;

        int parse_org_emftext_language_xpath2_UnionExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.IntersectExceptExpr a0_0 =null;

        org.emftext.language.xpath2.IntersectExceptExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xpath2.g:2676:2: ( (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )* )
            // Xpath2.g:2677:2: (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )*
            {
            // Xpath2.g:2677:2: (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr )
            // Xpath2.g:2678:3: a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr1958);
            a0_0=parse_org_emftext_language_xpath2_IntersectExceptExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[591]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[592]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[593]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[594]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[595]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[596]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[597]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[598]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[599]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[600]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[601]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[602]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[603]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[604]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[605]);
            	}

            // Xpath2.g:2717:2: ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( ((LA17_0 >= 91 && LA17_0 <= 92)) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // Xpath2.g:2718:3: ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) )
            	    {
            	    // Xpath2.g:2718:3: ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) )
            	    // Xpath2.g:2719:4: ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr )
            	    {
            	    // Xpath2.g:2719:4: ( (a1= 'union' |a2= '|' ) )
            	    // Xpath2.g:2720:5: (a1= 'union' |a2= '|' )
            	    {
            	    // Xpath2.g:2720:5: (a1= 'union' |a2= '|' )
            	    int alt16=2;
            	    int LA16_0 = input.LA(1);

            	    if ( (LA16_0==91) ) {
            	        alt16=1;
            	    }
            	    else if ( (LA16_0==92) ) {
            	        alt16=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 16, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt16) {
            	        case 1 :
            	            // Xpath2.g:2721:6: a1= 'union'
            	            {
            	            a1=(Token)match(input,91,FOLLOW_91_in_parse_org_emftext_language_xpath2_UnionExpr1998); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionOp().getEEnumLiteral(org.emftext.language.xpath2.UnionOp.UNION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERATION, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:2734:12: a2= '|'
            	            {
            	            a2=(Token)match(input,92,FOLLOW_92_in_parse_org_emftext_language_xpath2_UnionExpr2017); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionOp().getEEnumLiteral(org.emftext.language.xpath2.UnionOp.VERTICAL_BAR_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERATION, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[606]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[607]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[608]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[609]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[610]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[611]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[612]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[613]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[614]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[615]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[616]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[617]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[618]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[619]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[620]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[621]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[622]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[623]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[624]);
            	    			}

            	    // Xpath2.g:2772:4: (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr )
            	    // Xpath2.g:2773:5: a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr2054);
            	    a5_0=parse_org_emftext_language_xpath2_IntersectExceptExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_1_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[625]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[626]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[627]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[628]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[629]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[630]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[631]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[632]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[633]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[634]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[635]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[636]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[637]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[638]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[639]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[641]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[642]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[643]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[644]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[645]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[646]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[647]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[648]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[649]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[650]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[651]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[652]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[653]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[654]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_emftext_language_xpath2_UnionExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_UnionExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_IntersectExceptExpr"
    // Xpath2.g:2835:1: parse_org_emftext_language_xpath2_IntersectExceptExpr returns [org.emftext.language.xpath2.IntersectExceptExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )* ;
    public final org.emftext.language.xpath2.IntersectExceptExpr parse_org_emftext_language_xpath2_IntersectExceptExpr() throws RecognitionException {
        org.emftext.language.xpath2.IntersectExceptExpr element =  null;

        int parse_org_emftext_language_xpath2_IntersectExceptExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.InstanceofExpr a0_0 =null;

        org.emftext.language.xpath2.InstanceofExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xpath2.g:2838:2: ( (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )* )
            // Xpath2.g:2839:2: (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )*
            {
            // Xpath2.g:2839:2: (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr )
            // Xpath2.g:2840:3: a0_0= parse_org_emftext_language_xpath2_InstanceofExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2114);
            a0_0=parse_org_emftext_language_xpath2_InstanceofExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[655]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[656]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[657]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[658]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[659]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[660]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[661]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[662]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[663]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[664]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[665]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[666]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[667]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[668]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[669]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[670]);
            	}

            // Xpath2.g:2880:2: ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==56||LA19_0==66) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // Xpath2.g:2881:3: ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) )
            	    {
            	    // Xpath2.g:2881:3: ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) )
            	    // Xpath2.g:2882:4: ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr )
            	    {
            	    // Xpath2.g:2882:4: ( (a1= 'intersect' |a2= 'except' ) )
            	    // Xpath2.g:2883:5: (a1= 'intersect' |a2= 'except' )
            	    {
            	    // Xpath2.g:2883:5: (a1= 'intersect' |a2= 'except' )
            	    int alt18=2;
            	    int LA18_0 = input.LA(1);

            	    if ( (LA18_0==66) ) {
            	        alt18=1;
            	    }
            	    else if ( (LA18_0==56) ) {
            	        alt18=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 18, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt18) {
            	        case 1 :
            	            // Xpath2.g:2884:6: a1= 'intersect'
            	            {
            	            a1=(Token)match(input,66,FOLLOW_66_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2154); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptOpKind().getEEnumLiteral(org.emftext.language.xpath2.IntersectExceptOpKind.INTERSECT_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:2897:12: a2= 'except'
            	            {
            	            a2=(Token)match(input,56,FOLLOW_56_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2173); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptOpKind().getEEnumLiteral(org.emftext.language.xpath2.IntersectExceptOpKind.EXCEPT_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[671]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[672]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[673]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[674]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[675]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[676]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[677]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[678]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[679]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[680]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[681]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[682]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[683]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[684]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[685]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[686]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[687]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[688]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[689]);
            	    			}

            	    // Xpath2.g:2935:4: (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr )
            	    // Xpath2.g:2936:5: a5_0= parse_org_emftext_language_xpath2_InstanceofExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2210);
            	    a5_0=parse_org_emftext_language_xpath2_InstanceofExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_1_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[690]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[691]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[692]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[693]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[694]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[695]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[696]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[697]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[698]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[699]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[700]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[701]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[702]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[703]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[704]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[705]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[706]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[707]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[708]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[709]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[710]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[711]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[712]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[713]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[714]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[715]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[716]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[717]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[718]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[719]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[720]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[721]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_emftext_language_xpath2_IntersectExceptExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IntersectExceptExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_InstanceofExpr"
    // Xpath2.g:3000:1: parse_org_emftext_language_xpath2_InstanceofExpr returns [org.emftext.language.xpath2.InstanceofExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? ;
    public final org.emftext.language.xpath2.InstanceofExpr parse_org_emftext_language_xpath2_InstanceofExpr() throws RecognitionException {
        org.emftext.language.xpath2.InstanceofExpr element =  null;

        int parse_org_emftext_language_xpath2_InstanceofExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.TreatExpr a0_0 =null;

        org.emftext.language.xpath2.SequenceType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xpath2.g:3003:2: ( (a0_0= parse_org_emftext_language_xpath2_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? )
            // Xpath2.g:3004:2: (a0_0= parse_org_emftext_language_xpath2_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            {
            // Xpath2.g:3004:2: (a0_0= parse_org_emftext_language_xpath2_TreatExpr )
            // Xpath2.g:3005:3: a0_0= parse_org_emftext_language_xpath2_TreatExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_InstanceofExpr2270);
            a0_0=parse_org_emftext_language_xpath2_TreatExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INSTANCEOF_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[722]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[723]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[726]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[736]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[737]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[738]);
            	}

            // Xpath2.g:3046:2: ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==65) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // Xpath2.g:3047:3: (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    {
                    // Xpath2.g:3047:3: (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    // Xpath2.g:3048:4: a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    {
                    a1=(Token)match(input,65,FOLLOW_65_in_parse_org_emftext_language_xpath2_InstanceofExpr2297); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[739]);
                    			}

                    a2=(Token)match(input,75,FOLLOW_75_in_parse_org_emftext_language_xpath2_InstanceofExpr2317); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[740]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[741]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[742]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[743]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[744]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[745]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[746]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[747]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[748]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[749]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[750]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[751]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[752]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[753]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[754]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[755]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[756]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[757]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[758]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[759]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[760]);
                    			}

                    // Xpath2.g:3096:4: (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    // Xpath2.g:3097:5: a3_0= parse_org_emftext_language_xpath2_SequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_InstanceofExpr2343);
                    a3_0=parse_org_emftext_language_xpath2_SequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INSTANCEOF_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_1_0_0_2, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[761]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[762]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[763]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[764]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[765]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[766]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[767]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[768]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[769]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[770]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[771]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[772]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[773]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[774]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[775]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[776]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[780]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[782]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[783]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[784]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[785]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[786]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[787]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[788]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[789]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[790]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[791]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[792]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_emftext_language_xpath2_InstanceofExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_InstanceofExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_TreatExpr"
    // Xpath2.g:3161:1: parse_org_emftext_language_xpath2_TreatExpr returns [org.emftext.language.xpath2.TreatExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? ;
    public final org.emftext.language.xpath2.TreatExpr parse_org_emftext_language_xpath2_TreatExpr() throws RecognitionException {
        org.emftext.language.xpath2.TreatExpr element =  null;

        int parse_org_emftext_language_xpath2_TreatExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.CastableExpr a0_0 =null;

        org.emftext.language.xpath2.SequenceType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xpath2.g:3164:2: ( (a0_0= parse_org_emftext_language_xpath2_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? )
            // Xpath2.g:3165:2: (a0_0= parse_org_emftext_language_xpath2_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            {
            // Xpath2.g:3165:2: (a0_0= parse_org_emftext_language_xpath2_CastableExpr )
            // Xpath2.g:3166:3: a0_0= parse_org_emftext_language_xpath2_CastableExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_TreatExpr2403);
            a0_0=parse_org_emftext_language_xpath2_CastableExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.TREAT_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[793]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[794]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[795]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[796]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[797]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[798]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[799]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[800]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[801]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[802]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[803]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[804]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[805]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[806]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[807]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[808]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[809]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[810]);
            	}

            // Xpath2.g:3208:2: ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==90) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // Xpath2.g:3209:3: (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    {
                    // Xpath2.g:3209:3: (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    // Xpath2.g:3210:4: a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    {
                    a1=(Token)match(input,90,FOLLOW_90_in_parse_org_emftext_language_xpath2_TreatExpr2430); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[811]);
                    			}

                    a2=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_TreatExpr2450); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[812]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[813]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[814]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[815]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[816]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[817]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[818]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[819]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[820]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[821]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[822]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[823]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[824]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[825]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[826]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[827]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[828]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[829]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[830]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[831]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[832]);
                    			}

                    // Xpath2.g:3258:4: (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    // Xpath2.g:3259:5: a3_0= parse_org_emftext_language_xpath2_SequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_TreatExpr2476);
                    a3_0=parse_org_emftext_language_xpath2_SequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.TREAT_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_1_0_0_2, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[833]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[834]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[835]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[836]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[837]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[838]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[839]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[840]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[841]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[842]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[843]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[844]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[845]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[846]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[847]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[848]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[849]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[853]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[854]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[855]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[856]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[863]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[864]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[865]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[866]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_emftext_language_xpath2_TreatExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_TreatExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_CastableExpr"
    // Xpath2.g:3325:1: parse_org_emftext_language_xpath2_CastableExpr returns [org.emftext.language.xpath2.CastableExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? ;
    public final org.emftext.language.xpath2.CastableExpr parse_org_emftext_language_xpath2_CastableExpr() throws RecognitionException {
        org.emftext.language.xpath2.CastableExpr element =  null;

        int parse_org_emftext_language_xpath2_CastableExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.CastExpr a0_0 =null;

        org.emftext.language.xpath2.SingleType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xpath2.g:3328:2: ( (a0_0= parse_org_emftext_language_xpath2_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? )
            // Xpath2.g:3329:2: (a0_0= parse_org_emftext_language_xpath2_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            {
            // Xpath2.g:3329:2: (a0_0= parse_org_emftext_language_xpath2_CastExpr )
            // Xpath2.g:3330:3: a0_0= parse_org_emftext_language_xpath2_CastExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_CastableExpr2536);
            a0_0=parse_org_emftext_language_xpath2_CastExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CASTABLE_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[868]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[869]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[870]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[871]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[872]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[873]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[874]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[875]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[876]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[879]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[880]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[884]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[885]);
            	}

            // Xpath2.g:3373:2: ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==44) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // Xpath2.g:3374:3: (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    {
                    // Xpath2.g:3374:3: (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    // Xpath2.g:3375:4: a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    {
                    a1=(Token)match(input,44,FOLLOW_44_in_parse_org_emftext_language_xpath2_CastableExpr2563); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[886]);
                    			}

                    a2=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_CastableExpr2583); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastableExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[887]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastableExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[888]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastableExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[889]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastableExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[890]);
                    			}

                    // Xpath2.g:3406:4: (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    // Xpath2.g:3407:5: a3_0= parse_org_emftext_language_xpath2_SingleType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastableExpr2609);
                    a3_0=parse_org_emftext_language_xpath2_SingleType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CASTABLE_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_1_0_0_2, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[891]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[892]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[893]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[894]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[895]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[896]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[897]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[898]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[899]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[900]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[901]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[902]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[903]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[904]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[905]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[906]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[907]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[908]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[911]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[912]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[913]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[914]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[915]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[916]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[917]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[919]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[920]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[922]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[923]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[924]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[925]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[926]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_emftext_language_xpath2_CastableExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_CastableExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_CastExpr"
    // Xpath2.g:3475:1: parse_org_emftext_language_xpath2_CastExpr returns [org.emftext.language.xpath2.CastExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? ;
    public final org.emftext.language.xpath2.CastExpr parse_org_emftext_language_xpath2_CastExpr() throws RecognitionException {
        org.emftext.language.xpath2.CastExpr element =  null;

        int parse_org_emftext_language_xpath2_CastExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.UnaryExpr a0_0 =null;

        org.emftext.language.xpath2.SingleType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xpath2.g:3478:2: ( (a0_0= parse_org_emftext_language_xpath2_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? )
            // Xpath2.g:3479:2: (a0_0= parse_org_emftext_language_xpath2_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            {
            // Xpath2.g:3479:2: (a0_0= parse_org_emftext_language_xpath2_UnaryExpr )
            // Xpath2.g:3480:3: a0_0= parse_org_emftext_language_xpath2_UnaryExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_CastExpr2669);
            a0_0=parse_org_emftext_language_xpath2_UnaryExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CAST_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[927]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[935]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[937]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[938]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[939]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[943]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[945]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[946]);
            	}

            // Xpath2.g:3524:2: ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==43) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // Xpath2.g:3525:3: (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    {
                    // Xpath2.g:3525:3: (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    // Xpath2.g:3526:4: a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    {
                    a1=(Token)match(input,43,FOLLOW_43_in_parse_org_emftext_language_xpath2_CastExpr2696); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[947]);
                    			}

                    a2=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_CastExpr2716); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[948]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[949]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[950]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[951]);
                    			}

                    // Xpath2.g:3557:4: (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    // Xpath2.g:3558:5: a3_0= parse_org_emftext_language_xpath2_SingleType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastExpr2742);
                    a3_0=parse_org_emftext_language_xpath2_SingleType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CAST_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_1_0_0_2, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[952]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[953]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[954]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[955]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[956]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[957]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[958]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[959]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[960]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[961]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[962]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[963]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[964]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[965]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[966]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[967]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[968]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[969]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[970]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[975]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[976]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[982]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[984]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[985]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[986]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[987]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[988]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[989]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_emftext_language_xpath2_CastExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_CastExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_UnaryExpr"
    // Xpath2.g:3628:1: parse_org_emftext_language_xpath2_UnaryExpr returns [org.emftext.language.xpath2.UnaryExpr element = null] : ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath2_ValueExpr ) ;
    public final org.emftext.language.xpath2.UnaryExpr parse_org_emftext_language_xpath2_UnaryExpr() throws RecognitionException {
        org.emftext.language.xpath2.UnaryExpr element =  null;

        int parse_org_emftext_language_xpath2_UnaryExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        org.emftext.language.xpath2.ValueExpr a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xpath2.g:3631:2: ( ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath2_ValueExpr ) )
            // Xpath2.g:3632:2: ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath2_ValueExpr )
            {
            // Xpath2.g:3632:2: ( ( (a0= '+' |a1= '-' ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==18||LA25_0==20) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // Xpath2.g:3633:3: ( (a0= '+' |a1= '-' ) )
            	    {
            	    // Xpath2.g:3633:3: ( (a0= '+' |a1= '-' ) )
            	    // Xpath2.g:3634:4: (a0= '+' |a1= '-' )
            	    {
            	    // Xpath2.g:3634:4: (a0= '+' |a1= '-' )
            	    int alt24=2;
            	    int LA24_0 = input.LA(1);

            	    if ( (LA24_0==18) ) {
            	        alt24=1;
            	    }
            	    else if ( (LA24_0==20) ) {
            	        alt24=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 24, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt24) {
            	        case 1 :
            	            // Xpath2.g:3635:5: a0= '+'
            	            {
            	            a0=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath2_UnaryExpr2813); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnaryExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_0, null, true);
            	            					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	            					// set value of enumeration attribute
            	            					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryOp().getEEnumLiteral(org.emftext.language.xpath2.UnaryOp.PLUS_VALUE).getInstance();
            	            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNARY_EXPR__OPERATOR, value);
            	            					completedElement(value, false);
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:3648:10: a1= '-'
            	            {
            	            a1=(Token)match(input,20,FOLLOW_20_in_parse_org_emftext_language_xpath2_UnaryExpr2830); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnaryExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_0, null, true);
            	            					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            					// set value of enumeration attribute
            	            					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryOp().getEEnumLiteral(org.emftext.language.xpath2.UnaryOp.MINUS_VALUE).getInstance();
            	            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNARY_EXPR__OPERATOR, value);
            	            					completedElement(value, false);
            	            				}

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[990]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[991]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[992]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[993]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[994]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[995]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[996]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[997]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[998]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[999]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1000]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1001]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1002]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1003]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1004]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1005]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1006]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1007]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1008]);
            	}

            // Xpath2.g:3687:2: (a4_0= parse_org_emftext_language_xpath2_ValueExpr )
            // Xpath2.g:3688:3: a4_0= parse_org_emftext_language_xpath2_ValueExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ValueExpr_in_parse_org_emftext_language_xpath2_UnaryExpr2863);
            a4_0=parse_org_emftext_language_xpath2_ValueExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnaryExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.UNARY_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_1, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1009]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1010]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1011]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1012]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1013]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1014]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1015]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1016]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1017]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1018]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1019]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1020]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1021]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1022]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1023]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1024]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1025]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1026]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1027]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1028]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_emftext_language_xpath2_UnaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_UnaryExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ChildStepExpr"
    // Xpath2.g:3734:1: parse_org_emftext_language_xpath2_ChildStepExpr returns [org.emftext.language.xpath2.ChildStepExpr element = null] : a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) ;
    public final org.emftext.language.xpath2.ChildStepExpr parse_org_emftext_language_xpath2_ChildStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.ChildStepExpr element =  null;

        int parse_org_emftext_language_xpath2_ChildStepExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xpath2.g:3737:2: (a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) )
            // Xpath2.g:3738:2: a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath2_ChildStepExpr2896); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createChildStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_21_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1029]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1030]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1031]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1033]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1034]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1043]);
            	}

            // Xpath2.g:3766:2: (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            // Xpath2.g:3767:3: a1_0= parse_org_emftext_language_xpath2_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_ChildStepExpr2914);
            a1_0=parse_org_emftext_language_xpath2_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createChildStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CHILD_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_21_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1044]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1045]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1046]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1047]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1048]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1049]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1050]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1051]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1052]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1053]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1054]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1055]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1056]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1057]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1058]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1059]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1060]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1061]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1062]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1063]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1064]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1065]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_emftext_language_xpath2_ChildStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ChildStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_DescOrSelfStepExpr"
    // Xpath2.g:3815:1: parse_org_emftext_language_xpath2_DescOrSelfStepExpr returns [org.emftext.language.xpath2.DescOrSelfStepExpr element = null] : a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) ;
    public final org.emftext.language.xpath2.DescOrSelfStepExpr parse_org_emftext_language_xpath2_DescOrSelfStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.DescOrSelfStepExpr element =  null;

        int parse_org_emftext_language_xpath2_DescOrSelfStepExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xpath2.g:3818:2: (a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) )
            // Xpath2.g:3819:2: a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr2947); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDescOrSelfStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1066]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1067]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1068]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1069]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1070]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1071]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1072]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1073]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1074]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1075]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1076]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1077]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1078]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1079]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1080]);
            	}

            // Xpath2.g:3847:2: (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            // Xpath2.g:3848:3: a1_0= parse_org_emftext_language_xpath2_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr2965);
            a1_0=parse_org_emftext_language_xpath2_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDescOrSelfStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DESC_OR_SELF_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1081]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1082]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1083]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1084]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1085]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1086]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1087]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1088]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1089]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1090]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1091]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1092]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1093]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1094]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1095]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1096]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1097]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1098]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1099]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1100]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1101]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1102]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_emftext_language_xpath2_DescOrSelfStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DescOrSelfStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_RootStepExpr"
    // Xpath2.g:3896:1: parse_org_emftext_language_xpath2_RootStepExpr returns [org.emftext.language.xpath2.RootStepExpr element = null] : a0= '/' ;
    public final org.emftext.language.xpath2.RootStepExpr parse_org_emftext_language_xpath2_RootStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.RootStepExpr element =  null;

        int parse_org_emftext_language_xpath2_RootStepExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xpath2.g:3899:2: (a0= '/' )
            // Xpath2.g:3900:2: a0= '/'
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath2_RootStepExpr2998); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRootStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_23_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1103]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1104]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1105]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1106]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1107]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1108]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1109]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1110]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1111]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1112]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1113]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1114]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1115]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1116]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1117]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1124]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_emftext_language_xpath2_RootStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_RootStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_SelfStepExpr"
    // Xpath2.g:3937:1: parse_org_emftext_language_xpath2_SelfStepExpr returns [org.emftext.language.xpath2.SelfStepExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild ) ;
    public final org.emftext.language.xpath2.SelfStepExpr parse_org_emftext_language_xpath2_SelfStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.SelfStepExpr element =  null;

        int parse_org_emftext_language_xpath2_SelfStepExpr_StartIndex = input.index();

        org.emftext.language.xpath2.SelfStepExprChild a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xpath2.g:3940:2: ( (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild ) )
            // Xpath2.g:3941:2: (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild )
            {
            // Xpath2.g:3941:2: (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild )
            // Xpath2.g:3942:3: a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExprChild_in_parse_org_emftext_language_xpath2_SelfStepExpr3031);
            a0_0=parse_org_emftext_language_xpath2_SelfStepExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSelfStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SELF_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_24_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1126]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1127]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1128]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1129]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1130]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1131]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1132]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1133]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1134]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1135]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1136]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1137]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1138]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1139]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1140]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1141]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1142]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1143]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1144]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1145]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1146]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_emftext_language_xpath2_SelfStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SelfStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_AxisStep"
    // Xpath2.g:3990:1: parse_org_emftext_language_xpath2_AxisStep returns [org.emftext.language.xpath2.AxisStep element = null] : (a0_0= parse_org_emftext_language_xpath2_DirectionalStep ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.AxisStep parse_org_emftext_language_xpath2_AxisStep() throws RecognitionException {
        org.emftext.language.xpath2.AxisStep element =  null;

        int parse_org_emftext_language_xpath2_AxisStep_StartIndex = input.index();

        org.emftext.language.xpath2.DirectionalStep a0_0 =null;

        org.emftext.language.xpath2.Predicate a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xpath2.g:3993:2: ( (a0_0= parse_org_emftext_language_xpath2_DirectionalStep ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:3994:2: (a0_0= parse_org_emftext_language_xpath2_DirectionalStep ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:3994:2: (a0_0= parse_org_emftext_language_xpath2_DirectionalStep )
            // Xpath2.g:3995:3: a0_0= parse_org_emftext_language_xpath2_DirectionalStep
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DirectionalStep_in_parse_org_emftext_language_xpath2_AxisStep3068);
            a0_0=parse_org_emftext_language_xpath2_DirectionalStep();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAxisStep();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.AXIS_STEP__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1147]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1148]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1149]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1150]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1151]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1152]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1153]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1154]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1155]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1156]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1157]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1158]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1159]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1160]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1161]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1162]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1163]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1164]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1165]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1166]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1167]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1168]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1169]);
            	}

            // Xpath2.g:4042:2: ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==36) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // Xpath2.g:4043:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:4043:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:4044:4: a1_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AxisStep3095);
            	    a1_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAxisStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AXIS_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1170]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1171]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1172]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1173]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1174]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1175]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1176]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1177]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1178]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1179]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1180]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1181]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1182]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1183]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1184]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1185]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1186]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1187]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1188]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1189]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1190]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1191]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1192]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_emftext_language_xpath2_AxisStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AxisStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralForwardStep"
    // Xpath2.g:4094:1: parse_org_emftext_language_xpath2_GeneralForwardStep returns [org.emftext.language.xpath2.GeneralForwardStep element = null] : ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath2_NodeTest ) ;
    public final org.emftext.language.xpath2.GeneralForwardStep parse_org_emftext_language_xpath2_GeneralForwardStep() throws RecognitionException {
        org.emftext.language.xpath2.GeneralForwardStep element =  null;

        int parse_org_emftext_language_xpath2_GeneralForwardStep_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a10=null;
        org.emftext.language.xpath2.NodeTest a11_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xpath2.g:4097:2: ( ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath2_NodeTest ) )
            // Xpath2.g:4098:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath2_NodeTest )
            {
            // Xpath2.g:4098:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) )
            // Xpath2.g:4099:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            {
            // Xpath2.g:4099:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            int alt27=8;
            switch ( input.LA(1) ) {
            case 45:
                {
                alt27=1;
                }
                break;
            case 47:
                {
                alt27=2;
                }
                break;
            case 42:
                {
                alt27=3;
                }
                break;
            case 85:
                {
                alt27=4;
                }
                break;
            case 48:
                {
                alt27=5;
                }
                break;
            case 58:
                {
                alt27=6;
                }
                break;
            case 57:
                {
                alt27=7;
                }
                break;
            case 72:
                {
                alt27=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;

            }

            switch (alt27) {
                case 1 :
                    // Xpath2.g:4100:4: a0= 'child'
                    {
                    a0=(Token)match(input,45,FOLLOW_45_in_parse_org_emftext_language_xpath2_GeneralForwardStep3145); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.CHILD_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:4113:8: a1= 'descendant'
                    {
                    a1=(Token)match(input,47,FOLLOW_47_in_parse_org_emftext_language_xpath2_GeneralForwardStep3160); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.DESCENDANT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:4126:8: a2= 'attribute'
                    {
                    a2=(Token)match(input,42,FOLLOW_42_in_parse_org_emftext_language_xpath2_GeneralForwardStep3175); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.ATTRIBUTE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:4139:8: a3= 'self'
                    {
                    a3=(Token)match(input,85,FOLLOW_85_in_parse_org_emftext_language_xpath2_GeneralForwardStep3190); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:4152:8: a4= 'descendant-or-self'
                    {
                    a4=(Token)match(input,48,FOLLOW_48_in_parse_org_emftext_language_xpath2_GeneralForwardStep3205); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.DESCENDANT_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:4165:8: a5= 'following-sibling'
                    {
                    a5=(Token)match(input,58,FOLLOW_58_in_parse_org_emftext_language_xpath2_GeneralForwardStep3220); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.FOLLOWING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 7 :
                    // Xpath2.g:4178:8: a6= 'following'
                    {
                    a6=(Token)match(input,57,FOLLOW_57_in_parse_org_emftext_language_xpath2_GeneralForwardStep3235); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.FOLLOWING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 8 :
                    // Xpath2.g:4191:8: a7= 'namespace'
                    {
                    a7=(Token)match(input,72,FOLLOW_72_in_parse_org_emftext_language_xpath2_GeneralForwardStep3250); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.NAMESPACE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1193]);
            	}

            a10=(Token)match(input,26,FOLLOW_26_in_parse_org_emftext_language_xpath2_GeneralForwardStep3271); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1194]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1195]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1196]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1197]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1198]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1199]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1200]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1201]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1202]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1203]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1204]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1205]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1206]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1207]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1208]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1209]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1210]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1211]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1212]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1213]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1214]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1215]);
            	}

            // Xpath2.g:4246:2: (a11_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:4247:3: a11_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralForwardStep3289);
            a11_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
            				startIncompleteElement(element);
            			}
            			if (a11_0 != null) {
            				if (a11_0 != null) {
            					Object value = a11_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_2, a11_0, true);
            				copyLocalizationInfos(a11_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1216]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1217]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1218]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1219]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1220]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1221]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1222]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1223]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1224]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1225]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1226]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1227]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1228]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1229]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1230]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1231]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1232]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1233]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1234]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1235]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1236]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1237]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1238]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_emftext_language_xpath2_GeneralForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_AbbrevForwardStep"
    // Xpath2.g:4296:1: parse_org_emftext_language_xpath2_AbbrevForwardStep returns [org.emftext.language.xpath2.AbbrevForwardStep element = null] : ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest ) ;
    public final org.emftext.language.xpath2.AbbrevForwardStep parse_org_emftext_language_xpath2_AbbrevForwardStep() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevForwardStep element =  null;

        int parse_org_emftext_language_xpath2_AbbrevForwardStep_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.NodeTest a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xpath2.g:4299:2: ( ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest ) )
            // Xpath2.g:4300:2: ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest )
            {
            // Xpath2.g:4300:2: ( (a0= '@' )? )
            // Xpath2.g:4301:3: (a0= '@' )?
            {
            // Xpath2.g:4301:3: (a0= '@' )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==35) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // Xpath2.g:4302:4: a0= '@'
                    {
                    a0=(Token)match(input,35,FOLLOW_35_in_parse_org_emftext_language_xpath2_AbbrevForwardStep3331); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevForwardStep();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__KIND), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_27_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevForwardStepKind.ATTRIBUTE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1239]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1240]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1241]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1242]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1243]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1244]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1245]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1246]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1247]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1248]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1249]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1250]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1251]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1252]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1253]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1254]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1255]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1256]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1257]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1258]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1259]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1260]);
            	}

            // Xpath2.g:4345:2: (a3_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:4346:3: a3_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_AbbrevForwardStep3356);
            a3_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevForwardStep();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__KIND), value);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_27_0_0_1, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1261]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1262]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1263]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1264]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1265]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1266]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1267]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1268]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1269]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1270]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1271]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1272]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1273]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1274]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1275]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1276]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1277]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1278]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1279]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1280]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1281]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1282]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1283]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_emftext_language_xpath2_AbbrevForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AbbrevForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralReverseStep"
    // Xpath2.g:4398:1: parse_org_emftext_language_xpath2_GeneralReverseStep returns [org.emftext.language.xpath2.GeneralReverseStep element = null] : ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath2_NodeTest ) ;
    public final org.emftext.language.xpath2.GeneralReverseStep parse_org_emftext_language_xpath2_GeneralReverseStep() throws RecognitionException {
        org.emftext.language.xpath2.GeneralReverseStep element =  null;

        int parse_org_emftext_language_xpath2_GeneralReverseStep_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a7=null;
        org.emftext.language.xpath2.NodeTest a8_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xpath2.g:4401:2: ( ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath2_NodeTest ) )
            // Xpath2.g:4402:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath2_NodeTest )
            {
            // Xpath2.g:4402:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) )
            // Xpath2.g:4403:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            {
            // Xpath2.g:4403:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            int alt29=5;
            switch ( input.LA(1) ) {
            case 77:
                {
                alt29=1;
                }
                break;
            case 38:
                {
                alt29=2;
                }
                break;
            case 79:
                {
                alt29=3;
                }
                break;
            case 78:
                {
                alt29=4;
                }
                break;
            case 39:
                {
                alt29=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;

            }

            switch (alt29) {
                case 1 :
                    // Xpath2.g:4404:4: a0= 'parent'
                    {
                    a0=(Token)match(input,77,FOLLOW_77_in_parse_org_emftext_language_xpath2_GeneralReverseStep3398); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PARENT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:4417:8: a1= 'ancestor'
                    {
                    a1=(Token)match(input,38,FOLLOW_38_in_parse_org_emftext_language_xpath2_GeneralReverseStep3413); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.ANCESTOR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:4430:8: a2= 'preceding-sibling'
                    {
                    a2=(Token)match(input,79,FOLLOW_79_in_parse_org_emftext_language_xpath2_GeneralReverseStep3428); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PRECEDING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:4443:8: a3= 'preceding'
                    {
                    a3=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath2_GeneralReverseStep3443); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PRECEDING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:4456:8: a4= 'ancestor-or-self'
                    {
                    a4=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath2_GeneralReverseStep3458); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.ANCESTOR_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1284]);
            	}

            a7=(Token)match(input,26,FOLLOW_26_in_parse_org_emftext_language_xpath2_GeneralReverseStep3479); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1285]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1286]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1287]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1288]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1289]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1290]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1291]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1292]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1293]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1294]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1295]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1296]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1297]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1298]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1299]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1300]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1301]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1302]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1303]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1304]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1305]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1306]);
            	}

            // Xpath2.g:4511:2: (a8_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:4512:3: a8_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralReverseStep3497);
            a8_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
            				startIncompleteElement(element);
            			}
            			if (a8_0 != null) {
            				if (a8_0 != null) {
            					Object value = a8_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_2, a8_0, true);
            				copyLocalizationInfos(a8_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1307]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1308]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1309]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1310]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1311]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1312]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1313]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1314]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1315]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1316]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1317]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1318]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1319]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1320]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1321]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1322]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1323]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1324]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1325]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1326]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1327]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1328]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1329]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_emftext_language_xpath2_GeneralReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_AbbrevReverseStep"
    // Xpath2.g:4561:1: parse_org_emftext_language_xpath2_AbbrevReverseStep returns [org.emftext.language.xpath2.AbbrevReverseStep element = null] : ( (a0= '..' ) ) ;
    public final org.emftext.language.xpath2.AbbrevReverseStep parse_org_emftext_language_xpath2_AbbrevReverseStep() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevReverseStep element =  null;

        int parse_org_emftext_language_xpath2_AbbrevReverseStep_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xpath2.g:4564:2: ( ( (a0= '..' ) ) )
            // Xpath2.g:4565:2: ( (a0= '..' ) )
            {
            // Xpath2.g:4565:2: ( (a0= '..' ) )
            // Xpath2.g:4566:3: (a0= '..' )
            {
            // Xpath2.g:4566:3: (a0= '..' )
            // Xpath2.g:4567:4: a0= '..'
            {
            a0=(Token)match(input,22,FOLLOW_22_in_parse_org_emftext_language_xpath2_AbbrevReverseStep3539); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            				if (element == null) {
            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevReverseStep();
            					startIncompleteElement(element);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_29_0_0_0, null, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            				// set value of enumeration attribute
            				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevReverseStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevReverseStepKind.PARENT_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_REVERSE_STEP__KIND), value);
            				completedElement(value, false);
            			}

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1330]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1331]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1332]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1333]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1334]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1335]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1336]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1337]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1338]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1339]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1340]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1341]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1342]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1343]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1344]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1345]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1346]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1347]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1348]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1349]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1350]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1351]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1352]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_emftext_language_xpath2_AbbrevReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AbbrevReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeKindTest"
    // Xpath2.g:4611:1: parse_org_emftext_language_xpath2_NodeKindTest returns [org.emftext.language.xpath2.NodeKindTest element = null] : (a0_0= parse_org_emftext_language_xpath2_KindTest ) ;
    public final org.emftext.language.xpath2.NodeKindTest parse_org_emftext_language_xpath2_NodeKindTest() throws RecognitionException {
        org.emftext.language.xpath2.NodeKindTest element =  null;

        int parse_org_emftext_language_xpath2_NodeKindTest_StartIndex = input.index();

        org.emftext.language.xpath2.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xpath2.g:4614:2: ( (a0_0= parse_org_emftext_language_xpath2_KindTest ) )
            // Xpath2.g:4615:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            {
            // Xpath2.g:4615:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            // Xpath2.g:4616:3: a0_0= parse_org_emftext_language_xpath2_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_NodeKindTest3579);
            a0_0=parse_org_emftext_language_xpath2_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1353]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1354]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1355]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1356]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1357]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1358]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1359]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1360]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1361]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1362]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1363]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1364]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1365]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1366]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1367]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1368]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1369]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1370]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1371]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1372]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1373]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1374]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1375]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_emftext_language_xpath2_NodeKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_QNameTest"
    // Xpath2.g:4665:1: parse_org_emftext_language_xpath2_QNameTest returns [org.emftext.language.xpath2.QNameTest element = null] : (a0_0= parse_org_emftext_language_xpath2_QName ) ;
    public final org.emftext.language.xpath2.QNameTest parse_org_emftext_language_xpath2_QNameTest() throws RecognitionException {
        org.emftext.language.xpath2.QNameTest element =  null;

        int parse_org_emftext_language_xpath2_QNameTest_StartIndex = input.index();

        org.emftext.language.xpath2.QName a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xpath2.g:4668:2: ( (a0_0= parse_org_emftext_language_xpath2_QName ) )
            // Xpath2.g:4669:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            {
            // Xpath2.g:4669:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:4670:3: a0_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_QNameTest3616);
            a0_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQNameTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_31_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1376]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1377]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1378]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1379]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1380]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1381]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1382]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1383]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1384]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1385]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1386]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1387]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1388]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1389]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1390]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1391]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1392]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1393]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1394]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1395]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1396]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1397]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1398]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_emftext_language_xpath2_QNameTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QNameTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyWildcard"
    // Xpath2.g:4719:1: parse_org_emftext_language_xpath2_AnyWildcard returns [org.emftext.language.xpath2.AnyWildcard element = null] : a0= '*' ;
    public final org.emftext.language.xpath2.AnyWildcard parse_org_emftext_language_xpath2_AnyWildcard() throws RecognitionException {
        org.emftext.language.xpath2.AnyWildcard element =  null;

        int parse_org_emftext_language_xpath2_AnyWildcard_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xpath2.g:4722:2: (a0= '*' )
            // Xpath2.g:4723:2: a0= '*'
            {
            a0=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_AnyWildcard3649); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_32_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1399]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1400]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1401]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1402]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1403]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1404]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1405]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1406]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1407]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1408]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1409]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1410]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1411]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1412]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1413]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1414]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1415]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1416]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1417]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1418]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1419]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1420]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1421]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_emftext_language_xpath2_AnyWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_LocalNameWildcard"
    // Xpath2.g:4761:1: parse_org_emftext_language_xpath2_LocalNameWildcard returns [org.emftext.language.xpath2.LocalNameWildcard element = null] : (a0= TEXT ) a1= ':' a2= '*' ;
    public final org.emftext.language.xpath2.LocalNameWildcard parse_org_emftext_language_xpath2_LocalNameWildcard() throws RecognitionException {
        org.emftext.language.xpath2.LocalNameWildcard element =  null;

        int parse_org_emftext_language_xpath2_LocalNameWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xpath2.g:4764:2: ( (a0= TEXT ) a1= ':' a2= '*' )
            // Xpath2.g:4765:2: (a0= TEXT ) a1= ':' a2= '*'
            {
            // Xpath2.g:4765:2: (a0= TEXT )
            // Xpath2.g:4766:3: a0= TEXT
            {
            a0=(Token)match(input,TEXT,FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_LocalNameWildcard3682); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TEXT");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.LOCAL_NAME_WILDCARD__NAMESPACE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.LOCAL_NAME_WILDCARD__NAMESPACE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_33_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1422]);
            	}

            a1=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_LocalNameWildcard3703); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_33_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1423]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_LocalNameWildcard3717); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_33_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1424]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1425]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1426]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1427]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1428]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1429]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1430]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1431]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1432]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1433]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1434]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1435]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1436]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1437]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1438]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1439]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1440]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1441]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1442]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1443]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1444]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1445]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1446]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_emftext_language_xpath2_LocalNameWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_LocalNameWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_NamespaceWildcard"
    // Xpath2.g:4853:1: parse_org_emftext_language_xpath2_NamespaceWildcard returns [org.emftext.language.xpath2.NamespaceWildcard element = null] : a0= '*' a1= ':' (a2= TEXT ) ;
    public final org.emftext.language.xpath2.NamespaceWildcard parse_org_emftext_language_xpath2_NamespaceWildcard() throws RecognitionException {
        org.emftext.language.xpath2.NamespaceWildcard element =  null;

        int parse_org_emftext_language_xpath2_NamespaceWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xpath2.g:4856:2: (a0= '*' a1= ':' (a2= TEXT ) )
            // Xpath2.g:4857:2: a0= '*' a1= ':' (a2= TEXT )
            {
            a0=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_NamespaceWildcard3746); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_34_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1447]);
            	}

            a1=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_NamespaceWildcard3760); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_34_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1448]);
            	}

            // Xpath2.g:4885:2: (a2= TEXT )
            // Xpath2.g:4886:3: a2= TEXT
            {
            a2=(Token)match(input,TEXT,FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_NamespaceWildcard3778); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TEXT");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAMESPACE_WILDCARD__LOCAL_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAMESPACE_WILDCARD__LOCAL_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_34_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1449]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1450]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1451]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1452]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1453]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1454]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1455]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1456]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1457]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1458]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1459]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1460]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1461]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1462]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1463]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1464]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1465]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1466]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1467]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1468]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1469]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1470]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1471]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_emftext_language_xpath2_NamespaceWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NamespaceWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_FilterExpr"
    // Xpath2.g:4945:1: parse_org_emftext_language_xpath2_FilterExpr returns [org.emftext.language.xpath2.FilterExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.FilterExpr parse_org_emftext_language_xpath2_FilterExpr() throws RecognitionException {
        org.emftext.language.xpath2.FilterExpr element =  null;

        int parse_org_emftext_language_xpath2_FilterExpr_StartIndex = input.index();

        org.emftext.language.xpath2.PrimaryExpr a0_0 =null;

        org.emftext.language.xpath2.Predicate a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xpath2.g:4948:2: ( (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:4949:2: (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:4949:2: (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr )
            // Xpath2.g:4950:3: a0_0= parse_org_emftext_language_xpath2_PrimaryExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PrimaryExpr_in_parse_org_emftext_language_xpath2_FilterExpr3818);
            a0_0=parse_org_emftext_language_xpath2_PrimaryExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFilterExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FILTER_EXPR__PRIMARY_EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1472]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1473]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1474]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1475]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1476]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1477]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1478]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1479]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1480]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1481]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1482]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1483]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1484]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1485]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1486]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1487]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1488]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1489]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1490]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1491]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1492]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1493]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1494]);
            	}

            // Xpath2.g:4997:2: ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==36) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // Xpath2.g:4998:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:4998:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:4999:4: a1_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_FilterExpr3845);
            	    a1_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFilterExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FILTER_EXPR__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1495]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1496]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1497]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1498]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1499]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1500]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1501]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1502]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1503]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1504]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1505]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1506]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1507]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1508]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1509]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1510]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1511]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1512]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1513]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1514]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1515]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1516]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1517]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_emftext_language_xpath2_FilterExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_FilterExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_Predicate"
    // Xpath2.g:5049:1: parse_org_emftext_language_xpath2_Predicate returns [org.emftext.language.xpath2.Predicate element = null] : a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']' ;
    public final org.emftext.language.xpath2.Predicate parse_org_emftext_language_xpath2_Predicate() throws RecognitionException {
        org.emftext.language.xpath2.Predicate element =  null;

        int parse_org_emftext_language_xpath2_Predicate_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xpath2.g:5052:2: (a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']' )
            // Xpath2.g:5053:2: a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']'
            {
            a0=(Token)match(input,36,FOLLOW_36_in_parse_org_emftext_language_xpath2_Predicate3886); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_36_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1518]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1519]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1520]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1521]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1522]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1523]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1524]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1525]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1526]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1527]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1528]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1529]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1530]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1531]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1532]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1533]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1534]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1535]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1536]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1537]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1538]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1539]);
            	}

            // Xpath2.g:5088:2: (a1_0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:5089:3: a1_0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_Predicate3904);
            a1_0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.PREDICATE__EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_36_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1540]);
            	}

            a2=(Token)match(input,37,FOLLOW_37_in_parse_org_emftext_language_xpath2_Predicate3922); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_36_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1541]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1542]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1543]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1544]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1545]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1546]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1547]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1548]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1549]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1550]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1551]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1552]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1553]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1554]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1555]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1556]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1557]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1558]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1559]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1560]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1561]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1562]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1563]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_emftext_language_xpath2_Predicate_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Predicate"



    // $ANTLR start "parse_org_emftext_language_xpath2_VarRef"
    // Xpath2.g:5152:1: parse_org_emftext_language_xpath2_VarRef returns [org.emftext.language.xpath2.VarRef element = null] : a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName ) ;
    public final org.emftext.language.xpath2.VarRef parse_org_emftext_language_xpath2_VarRef() throws RecognitionException {
        org.emftext.language.xpath2.VarRef element =  null;

        int parse_org_emftext_language_xpath2_VarRef_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.VarName a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xpath2.g:5155:2: (a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName ) )
            // Xpath2.g:5156:2: a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName )
            {
            a0=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_VarRef3951); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarRef();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getVarRef(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1564]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getVarRef(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1565]);
            	}

            // Xpath2.g:5171:2: (a1_0= parse_org_emftext_language_xpath2_VarName )
            // Xpath2.g:5172:3: a1_0= parse_org_emftext_language_xpath2_VarName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_VarRef3969);
            a1_0=parse_org_emftext_language_xpath2_VarName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarRef();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_REF__VAR_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1566]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1567]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1568]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1569]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1570]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1571]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1572]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1573]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1574]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1575]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1576]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1577]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1578]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1579]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1580]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1581]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1582]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1583]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1584]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1585]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1586]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1587]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1588]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_emftext_language_xpath2_VarRef_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_VarRef"



    // $ANTLR start "parse_org_emftext_language_xpath2_VarName"
    // Xpath2.g:5221:1: parse_org_emftext_language_xpath2_VarName returns [org.emftext.language.xpath2.VarName element = null] : ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME ) ;
    public final org.emftext.language.xpath2.VarName parse_org_emftext_language_xpath2_VarName() throws RecognitionException {
        org.emftext.language.xpath2.VarName element =  null;

        int parse_org_emftext_language_xpath2_VarName_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xpath2.g:5224:2: ( ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME ) )
            // Xpath2.g:5225:2: ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME )
            {
            // Xpath2.g:5225:2: ( ( (a0= NCNAME ) a1= ':' ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==NCNAME) ) {
                int LA31_1 = input.LA(2);

                if ( (LA31_1==25) ) {
                    alt31=1;
                }
            }
            switch (alt31) {
                case 1 :
                    // Xpath2.g:5226:3: ( (a0= NCNAME ) a1= ':' )
                    {
                    // Xpath2.g:5226:3: ( (a0= NCNAME ) a1= ':' )
                    // Xpath2.g:5227:4: (a0= NCNAME ) a1= ':'
                    {
                    // Xpath2.g:5227:4: (a0= NCNAME )
                    // Xpath2.g:5228:5: a0= NCNAME
                    {
                    a0=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_VarName4017); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarName();
                    						startIncompleteElement(element);
                    					}
                    					if (a0 != null) {
                    						org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    						tokenResolver.setOptions(getOptions());
                    						org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_NAME__PREFIX), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    						}
                    						java.lang.String resolved = (java.lang.String) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_NAME__PREFIX), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_0_0_0_0, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1589]);
                    			}

                    a1=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_VarName4050); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarName();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_0_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1590]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1591]);
            	}

            // Xpath2.g:5284:2: (a2= NCNAME )
            // Xpath2.g:5285:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_VarName4087); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarName();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_NAME__LOCAL_PART), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_NAME__LOCAL_PART), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1592]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1593]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1594]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1595]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1596]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1597]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1598]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1599]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1600]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1601]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1602]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1603]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1604]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1605]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1606]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1607]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1608]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1609]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1610]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1611]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1612]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1613]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1614]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1615]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1616]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1617]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1618]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1619]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1620]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1621]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1622]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1623]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1624]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1625]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1626]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_emftext_language_xpath2_VarName_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_VarName"



    // $ANTLR start "parse_org_emftext_language_xpath2_ParenthesizedExpr"
    // Xpath2.g:5356:1: parse_org_emftext_language_xpath2_ParenthesizedExpr returns [org.emftext.language.xpath2.ParenthesizedExpr element = null] : a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')' ;
    public final org.emftext.language.xpath2.ParenthesizedExpr parse_org_emftext_language_xpath2_ParenthesizedExpr() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr element =  null;

        int parse_org_emftext_language_xpath2_ParenthesizedExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xpath2.g:5359:2: (a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')' )
            // Xpath2.g:5360:2: a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_ParenthesizedExpr4123); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1627]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1628]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1629]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1630]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1631]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1632]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1633]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1634]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1635]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1636]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1637]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1638]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1639]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1640]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1641]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1642]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1643]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1644]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1645]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1646]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1647]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1648]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1649]);
            	}

            // Xpath2.g:5396:2: ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0 >= DECIMAL_LITERAL && LA32_0 <= INTEGER_LITERAL)||(LA32_0 >= NCNAME && LA32_0 <= TEXT)||(LA32_0 >= 14 && LA32_0 <= 15)||(LA32_0 >= 17 && LA32_0 <= 18)||(LA32_0 >= 20 && LA32_0 <= 24)||LA32_0==35||(LA32_0 >= 38 && LA32_0 <= 39)||LA32_0==42||(LA32_0 >= 45 && LA32_0 <= 48)||(LA32_0 >= 50 && LA32_0 <= 51)||LA32_0==55||(LA32_0 >= 57 && LA32_0 <= 59)||LA32_0==63||LA32_0==72||LA32_0==74||(LA32_0 >= 77 && LA32_0 <= 80)||(LA32_0 >= 83 && LA32_0 <= 87)) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // Xpath2.g:5397:3: (a1_0= parse_org_emftext_language_xpath2_Expr )
                    {
                    // Xpath2.g:5397:3: (a1_0= parse_org_emftext_language_xpath2_Expr )
                    // Xpath2.g:5398:4: a1_0= parse_org_emftext_language_xpath2_Expr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_ParenthesizedExpr4146);
                    a1_0=parse_org_emftext_language_xpath2_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
                    					startIncompleteElement(element);
                    				}
                    				if (a1_0 != null) {
                    					if (a1_0 != null) {
                    						Object value = a1_0;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.PARENTHESIZED_EXPR__EXPR), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_1, a1_0, true);
                    					copyLocalizationInfos(a1_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1650]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_ParenthesizedExpr4172); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1651]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1652]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1653]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1654]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1655]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1656]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1657]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1658]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1659]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1660]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1661]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1662]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1663]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1664]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1665]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1666]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1667]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1668]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1669]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1670]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1671]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1672]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1673]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_emftext_language_xpath2_ParenthesizedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ParenthesizedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ContextItemExpr"
    // Xpath2.g:5462:1: parse_org_emftext_language_xpath2_ContextItemExpr returns [org.emftext.language.xpath2.ContextItemExpr element = null] : a0= '.' ;
    public final org.emftext.language.xpath2.ContextItemExpr parse_org_emftext_language_xpath2_ContextItemExpr() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr element =  null;

        int parse_org_emftext_language_xpath2_ContextItemExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xpath2.g:5465:2: (a0= '.' )
            // Xpath2.g:5466:2: a0= '.'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_org_emftext_language_xpath2_ContextItemExpr4201); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createContextItemExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_40_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1674]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1675]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1676]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1677]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1678]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1679]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1680]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1681]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1682]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1683]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1684]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1685]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1686]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1687]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1688]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1689]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1690]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1691]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1692]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1693]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1694]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1695]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1696]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_emftext_language_xpath2_ContextItemExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ContextItemExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_FunctionCall"
    // Xpath2.g:5504:1: parse_org_emftext_language_xpath2_FunctionCall returns [org.emftext.language.xpath2.FunctionCall element = null] : (a0_0= parse_org_emftext_language_xpath2_QName ) a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )? a5= ')' ;
    public final org.emftext.language.xpath2.FunctionCall parse_org_emftext_language_xpath2_FunctionCall() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall element =  null;

        int parse_org_emftext_language_xpath2_FunctionCall_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath2.QName a0_0 =null;

        org.emftext.language.xpath2.ExprSingle a2_0 =null;

        org.emftext.language.xpath2.ExprSingle a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xpath2.g:5507:2: ( (a0_0= parse_org_emftext_language_xpath2_QName ) a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )? a5= ')' )
            // Xpath2.g:5508:2: (a0_0= parse_org_emftext_language_xpath2_QName ) a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )? a5= ')'
            {
            // Xpath2.g:5508:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:5509:3: a0_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_FunctionCall4234);
            a0_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1697]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_FunctionCall4252); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1698]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1699]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1700]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1701]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1702]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1703]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1704]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1705]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1706]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1707]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1708]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1709]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1710]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1711]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1712]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1713]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1714]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1715]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1716]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1717]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1718]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1719]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1720]);
            	}

            // Xpath2.g:5570:2: ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( ((LA34_0 >= DECIMAL_LITERAL && LA34_0 <= INTEGER_LITERAL)||(LA34_0 >= NCNAME && LA34_0 <= TEXT)||(LA34_0 >= 14 && LA34_0 <= 15)||(LA34_0 >= 17 && LA34_0 <= 18)||(LA34_0 >= 20 && LA34_0 <= 24)||LA34_0==35||(LA34_0 >= 38 && LA34_0 <= 39)||LA34_0==42||(LA34_0 >= 45 && LA34_0 <= 48)||(LA34_0 >= 50 && LA34_0 <= 51)||LA34_0==55||(LA34_0 >= 57 && LA34_0 <= 59)||LA34_0==63||LA34_0==72||LA34_0==74||(LA34_0 >= 77 && LA34_0 <= 80)||(LA34_0 >= 83 && LA34_0 <= 87)) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // Xpath2.g:5571:3: ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* )
                    {
                    // Xpath2.g:5571:3: ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* )
                    // Xpath2.g:5572:4: (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
                    {
                    // Xpath2.g:5572:4: (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
                    // Xpath2.g:5573:5: a2_0= parse_org_emftext_language_xpath2_ExprSingle
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall4281);
                    a2_0=parse_org_emftext_language_xpath2_ExprSingle();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1721]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1722]);
                    			}

                    // Xpath2.g:5599:4: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==19) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // Xpath2.g:5600:5: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) )
                    	    {
                    	    // Xpath2.g:5600:5: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) )
                    	    // Xpath2.g:5601:6: a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle )
                    	    {
                    	    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_FunctionCall4322); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1723]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1724]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1725]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1726]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1727]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1728]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1729]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1730]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1731]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1732]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1733]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1734]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1735]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1736]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1737]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1738]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1739]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1740]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1741]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1742]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1743]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1744]);
                    	    					}

                    	    // Xpath2.g:5636:6: (a4_0= parse_org_emftext_language_xpath2_ExprSingle )
                    	    // Xpath2.g:5637:7: a4_0= parse_org_emftext_language_xpath2_ExprSingle
                    	    {
                    	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall4356);
                    	    a4_0=parse_org_emftext_language_xpath2_ExprSingle();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a4_0 != null) {
                    	    								if (a4_0 != null) {
                    	    									Object value = a4_0;
                    	    									addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	    								copyLocalizationInfos(a4_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1745]);
                    	    						addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1746]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop33;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1747]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1748]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1749]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_FunctionCall4430); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1750]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1751]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1752]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1753]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1754]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1755]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1756]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1757]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1758]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1759]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1760]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1761]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1762]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1763]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1764]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1765]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1766]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1767]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1768]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1769]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1770]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1771]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1772]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_emftext_language_xpath2_FunctionCall_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_FunctionCall"



    // $ANTLR start "parse_org_emftext_language_xpath2_SingleType"
    // Xpath2.g:5716:1: parse_org_emftext_language_xpath2_SingleType returns [org.emftext.language.xpath2.SingleType element = null] : (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? ) ;
    public final org.emftext.language.xpath2.SingleType parse_org_emftext_language_xpath2_SingleType() throws RecognitionException {
        org.emftext.language.xpath2.SingleType element =  null;

        int parse_org_emftext_language_xpath2_SingleType_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xpath2.g:5719:2: ( (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? ) )
            // Xpath2.g:5720:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? )
            {
            // Xpath2.g:5720:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            // Xpath2.g:5721:3: a0_0= parse_org_emftext_language_xpath2_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_SingleType4463);
            a0_0=parse_org_emftext_language_xpath2_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleType();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
            				}
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1773]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1774]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1775]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1776]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1777]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1778]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1779]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1780]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1781]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1782]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1783]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1784]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1785]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1786]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1787]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1788]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1789]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1790]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1791]);
            	}

            // Xpath2.g:5769:2: ( (a1= '?' )? )
            // Xpath2.g:5770:3: (a1= '?' )?
            {
            // Xpath2.g:5770:3: (a1= '?' )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==34) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // Xpath2.g:5771:4: a1= '?'
                    {
                    a1=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_SingleType4490); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_1, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1792]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1793]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1794]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1795]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1796]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1797]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1798]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1799]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1800]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1801]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1802]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1803]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1804]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1805]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1806]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1807]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1808]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1809]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_emftext_language_xpath2_SingleType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SingleType"



    // $ANTLR start "parse_org_emftext_language_xpath2_EmptySequenceType"
    // Xpath2.g:5814:1: parse_org_emftext_language_xpath2_EmptySequenceType returns [org.emftext.language.xpath2.EmptySequenceType element = null] : a0= 'empty-sequence' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.EmptySequenceType parse_org_emftext_language_xpath2_EmptySequenceType() throws RecognitionException {
        org.emftext.language.xpath2.EmptySequenceType element =  null;

        int parse_org_emftext_language_xpath2_EmptySequenceType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xpath2.g:5817:2: (a0= 'empty-sequence' a1= '(' a2= ')' )
            // Xpath2.g:5818:2: a0= 'empty-sequence' a1= '(' a2= ')'
            {
            a0=(Token)match(input,53,FOLLOW_53_in_parse_org_emftext_language_xpath2_EmptySequenceType4526); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1810]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_EmptySequenceType4540); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1811]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_EmptySequenceType4554); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1812]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1813]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1814]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1815]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1816]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1817]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1818]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1819]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1820]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1821]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1822]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1823]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1824]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1825]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1826]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1827]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_emftext_language_xpath2_EmptySequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_EmptySequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemSequenceType"
    // Xpath2.g:5877:1: parse_org_emftext_language_xpath2_ItemSequenceType returns [org.emftext.language.xpath2.ItemSequenceType element = null] : (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) ;
    public final org.emftext.language.xpath2.ItemSequenceType parse_org_emftext_language_xpath2_ItemSequenceType() throws RecognitionException {
        org.emftext.language.xpath2.ItemSequenceType element =  null;

        int parse_org_emftext_language_xpath2_ItemSequenceType_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        org.emftext.language.xpath2.ItemType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xpath2.g:5880:2: ( (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) )
            // Xpath2.g:5881:2: (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? )
            {
            // Xpath2.g:5881:2: (a0_0= parse_org_emftext_language_xpath2_ItemType )
            // Xpath2.g:5882:3: a0_0= parse_org_emftext_language_xpath2_ItemType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemType_in_parse_org_emftext_language_xpath2_ItemSequenceType4587);
            a0_0=parse_org_emftext_language_xpath2_ItemType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__ITEM_TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_44_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1828]);
            	}

            // Xpath2.g:5910:2: ( (a1= '?' |a2= '*' |a3= '+' )? )
            // Xpath2.g:5911:3: (a1= '?' |a2= '*' |a3= '+' )?
            {
            // Xpath2.g:5911:3: (a1= '?' |a2= '*' |a3= '+' )?
            int alt36=4;
            switch ( input.LA(1) ) {
                case 34:
                    {
                    alt36=1;
                    }
                    break;
                case 17:
                    {
                    int LA36_2 = input.LA(2);

                    if ( (synpred57_Xpath2()) ) {
                        alt36=2;
                    }
                    }
                    break;
                case 18:
                    {
                    int LA36_3 = input.LA(2);

                    if ( (synpred58_Xpath2()) ) {
                        alt36=3;
                    }
                    }
                    break;
            }

            switch (alt36) {
                case 1 :
                    // Xpath2.g:5912:4: a1= '?'
                    {
                    a1=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_ItemSequenceType4614); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_44_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.OPTIONAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:5928:8: a2= '*'
                    {
                    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_ItemSequenceType4629); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_44_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.STAR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:5944:8: a3= '+'
                    {
                    a3=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath2_ItemSequenceType4644); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_44_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.PLUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1829]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1830]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1831]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1832]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1833]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1834]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1835]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1836]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1837]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1838]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1839]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1840]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1841]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1842]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1843]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1844]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_emftext_language_xpath2_ItemSequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemSequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemKindTest"
    // Xpath2.g:5983:1: parse_org_emftext_language_xpath2_ItemKindTest returns [org.emftext.language.xpath2.ItemKindTest element = null] : (a0_0= parse_org_emftext_language_xpath2_KindTest ) ;
    public final org.emftext.language.xpath2.ItemKindTest parse_org_emftext_language_xpath2_ItemKindTest() throws RecognitionException {
        org.emftext.language.xpath2.ItemKindTest element =  null;

        int parse_org_emftext_language_xpath2_ItemKindTest_StartIndex = input.index();

        org.emftext.language.xpath2.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xpath2.g:5986:2: ( (a0_0= parse_org_emftext_language_xpath2_KindTest ) )
            // Xpath2.g:5987:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            {
            // Xpath2.g:5987:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            // Xpath2.g:5988:3: a0_0= parse_org_emftext_language_xpath2_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_ItemKindTest4684);
            a0_0=parse_org_emftext_language_xpath2_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_45_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1845]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_emftext_language_xpath2_ItemKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyItemType"
    // Xpath2.g:6015:1: parse_org_emftext_language_xpath2_AnyItemType returns [org.emftext.language.xpath2.AnyItemType element = null] : a0= 'item' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.AnyItemType parse_org_emftext_language_xpath2_AnyItemType() throws RecognitionException {
        org.emftext.language.xpath2.AnyItemType element =  null;

        int parse_org_emftext_language_xpath2_AnyItemType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xpath2.g:6018:2: (a0= 'item' a1= '(' a2= ')' )
            // Xpath2.g:6019:2: a0= 'item' a1= '(' a2= ')'
            {
            a0=(Token)match(input,68,FOLLOW_68_in_parse_org_emftext_language_xpath2_AnyItemType4717); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1846]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyItemType4731); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1847]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyItemType4745); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1848]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_emftext_language_xpath2_AnyItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyItemType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AtomicItemType"
    // Xpath2.g:6063:1: parse_org_emftext_language_xpath2_AtomicItemType returns [org.emftext.language.xpath2.AtomicItemType element = null] : (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ;
    public final org.emftext.language.xpath2.AtomicItemType parse_org_emftext_language_xpath2_AtomicItemType() throws RecognitionException {
        org.emftext.language.xpath2.AtomicItemType element =  null;

        int parse_org_emftext_language_xpath2_AtomicItemType_StartIndex = input.index();

        org.emftext.language.xpath2.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xpath2.g:6066:2: ( (a0_0= parse_org_emftext_language_xpath2_AtomicType ) )
            // Xpath2.g:6067:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            {
            // Xpath2.g:6067:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            // Xpath2.g:6068:3: a0_0= parse_org_emftext_language_xpath2_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_AtomicItemType4778);
            a0_0=parse_org_emftext_language_xpath2_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAtomicItemType();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_ITEM_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_47_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1849]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_emftext_language_xpath2_AtomicItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AtomicItemType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AtomicType"
    // Xpath2.g:6095:1: parse_org_emftext_language_xpath2_AtomicType returns [org.emftext.language.xpath2.AtomicType element = null] : (a0_0= parse_org_emftext_language_xpath2_QName ) ;
    public final org.emftext.language.xpath2.AtomicType parse_org_emftext_language_xpath2_AtomicType() throws RecognitionException {
        org.emftext.language.xpath2.AtomicType element =  null;

        int parse_org_emftext_language_xpath2_AtomicType_StartIndex = input.index();

        org.emftext.language.xpath2.QName a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xpath2.g:6098:2: ( (a0_0= parse_org_emftext_language_xpath2_QName ) )
            // Xpath2.g:6099:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            {
            // Xpath2.g:6099:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:6100:3: a0_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_AtomicType4815);
            a0_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAtomicType();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_TYPE__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_48_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1850]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1851]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1852]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1853]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1854]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1855]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1856]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1857]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1858]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1859]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1860]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1861]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1862]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1863]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1864]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1865]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1866]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1867]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1868]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1869]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_emftext_language_xpath2_AtomicType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AtomicType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyKindTest"
    // Xpath2.g:6146:1: parse_org_emftext_language_xpath2_AnyKindTest returns [org.emftext.language.xpath2.AnyKindTest element = null] : a0= 'node' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.AnyKindTest parse_org_emftext_language_xpath2_AnyKindTest() throws RecognitionException {
        org.emftext.language.xpath2.AnyKindTest element =  null;

        int parse_org_emftext_language_xpath2_AnyKindTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xpath2.g:6149:2: (a0= 'node' a1= '(' a2= ')' )
            // Xpath2.g:6150:2: a0= 'node' a1= '(' a2= ')'
            {
            a0=(Token)match(input,74,FOLLOW_74_in_parse_org_emftext_language_xpath2_AnyKindTest4848); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1870]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyKindTest4862); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1871]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyKindTest4876); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1872]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1873]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1874]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1875]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1876]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1877]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1878]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1879]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1880]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1881]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1882]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1883]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1884]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1885]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1886]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1887]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1888]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1889]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1890]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1891]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1892]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1893]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1894]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1895]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_emftext_language_xpath2_AnyKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_DocumentTest"
    // Xpath2.g:6217:1: parse_org_emftext_language_xpath2_DocumentTest returns [org.emftext.language.xpath2.DocumentTest element = null] : a0= 'document-node' a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )? a3= ')' ;
    public final org.emftext.language.xpath2.DocumentTest parse_org_emftext_language_xpath2_DocumentTest() throws RecognitionException {
        org.emftext.language.xpath2.DocumentTest element =  null;

        int parse_org_emftext_language_xpath2_DocumentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath2.ElementTest a2_0 =null;

        org.emftext.language.xpath2.SchemaElementTest a2_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Xpath2.g:6220:2: (a0= 'document-node' a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )? a3= ')' )
            // Xpath2.g:6221:2: a0= 'document-node' a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )? a3= ')'
            {
            a0=(Token)match(input,50,FOLLOW_50_in_parse_org_emftext_language_xpath2_DocumentTest4905); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1896]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_DocumentTest4919); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1897]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1898]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1899]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1900]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1901]);
            	}

            // Xpath2.g:6253:2: ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==51||LA38_0==84) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // Xpath2.g:6254:3: ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )
                    {
                    // Xpath2.g:6254:3: ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )
                    // Xpath2.g:6255:4: (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest )
                    {
                    // Xpath2.g:6255:4: (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest )
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==51) ) {
                        alt37=1;
                    }
                    else if ( (LA37_0==84) ) {
                        alt37=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;

                    }
                    switch (alt37) {
                        case 1 :
                            // Xpath2.g:6256:5: a2_0= parse_org_emftext_language_xpath2_ElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_DocumentTest4948);
                            a2_0=parse_org_emftext_language_xpath2_ElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOCUMENT_TEST__TEST), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath2.g:6275:10: a2_1= parse_org_emftext_language_xpath2_SchemaElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_DocumentTest4968);
                            a2_1=parse_org_emftext_language_xpath2_SchemaElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOCUMENT_TEST__TEST), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_2_0_0_0, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1902]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1903]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_DocumentTest5009); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1904]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1905]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1906]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1907]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1908]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1909]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1910]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1911]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1912]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1913]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1914]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1915]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1916]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1917]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1918]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1919]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1920]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1921]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1922]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1923]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1924]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1925]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1926]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1927]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_emftext_language_xpath2_DocumentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DocumentTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_TextTest"
    // Xpath2.g:6346:1: parse_org_emftext_language_xpath2_TextTest returns [org.emftext.language.xpath2.TextTest element = null] : a0= 'text' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.TextTest parse_org_emftext_language_xpath2_TextTest() throws RecognitionException {
        org.emftext.language.xpath2.TextTest element =  null;

        int parse_org_emftext_language_xpath2_TextTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }

            // Xpath2.g:6349:2: (a0= 'text' a1= '(' a2= ')' )
            // Xpath2.g:6350:2: a0= 'text' a1= '(' a2= ')'
            {
            a0=(Token)match(input,87,FOLLOW_87_in_parse_org_emftext_language_xpath2_TextTest5038); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1928]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_TextTest5052); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1929]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_TextTest5066); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1930]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1931]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1932]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1933]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1934]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1935]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1936]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1937]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1938]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1939]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1940]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1941]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1942]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1943]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1944]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1945]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1946]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1947]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1948]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1949]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1950]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1951]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1952]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1953]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_emftext_language_xpath2_TextTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_TextTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_CommentTest"
    // Xpath2.g:6417:1: parse_org_emftext_language_xpath2_CommentTest returns [org.emftext.language.xpath2.CommentTest element = null] : a0= 'comment' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.CommentTest parse_org_emftext_language_xpath2_CommentTest() throws RecognitionException {
        org.emftext.language.xpath2.CommentTest element =  null;

        int parse_org_emftext_language_xpath2_CommentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return element; }

            // Xpath2.g:6420:2: (a0= 'comment' a1= '(' a2= ')' )
            // Xpath2.g:6421:2: a0= 'comment' a1= '(' a2= ')'
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_org_emftext_language_xpath2_CommentTest5095); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1954]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_CommentTest5109); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1955]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_CommentTest5123); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1956]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1957]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1958]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1959]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1960]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1961]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1962]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1963]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1964]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1965]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1966]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1967]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1968]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1969]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1970]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1971]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1972]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1973]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1974]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1975]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1976]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1977]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1978]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1979]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 54, parse_org_emftext_language_xpath2_CommentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_CommentTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_PITest"
    // Xpath2.g:6488:1: parse_org_emftext_language_xpath2_PITest returns [org.emftext.language.xpath2.PITest element = null] : (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_NCNamePITest |c1= parse_org_emftext_language_xpath2_StringLiteralPITest );
    public final org.emftext.language.xpath2.PITest parse_org_emftext_language_xpath2_PITest() throws RecognitionException {
        org.emftext.language.xpath2.PITest element =  null;

        int parse_org_emftext_language_xpath2_PITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.NCNamePITest c0 =null;

        org.emftext.language.xpath2.StringLiteralPITest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return element; }

            // Xpath2.g:6491:2: (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_NCNamePITest |c1= parse_org_emftext_language_xpath2_StringLiteralPITest )
            int alt39=3;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==80) ) {
                int LA39_1 = input.LA(2);

                if ( (LA39_1==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt39=1;
                        }
                        break;
                    case NCNAME:
                        {
                        alt39=2;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt39=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 39, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }
            switch (alt39) {
                case 1 :
                    // Xpath2.g:6492:2: a0= 'processing-instruction' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,80,FOLLOW_80_in_parse_org_emftext_language_xpath2_PITest5152); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1980]);
                    	}

                    a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_PITest5166); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1981]);
                    	}

                    a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_PITest5180); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1982]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1983]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1984]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1985]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1986]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1987]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1988]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1989]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1990]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1991]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1992]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1993]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1994]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1995]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1996]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1997]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1998]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1999]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2000]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2001]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2002]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2003]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2004]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2005]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:6559:2: c0= parse_org_emftext_language_xpath2_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_PITest5199);
                    c0=parse_org_emftext_language_xpath2_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:6560:4: c1= parse_org_emftext_language_xpath2_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_PITest5209);
                    c1=parse_org_emftext_language_xpath2_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 55, parse_org_emftext_language_xpath2_PITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NCNamePITest"
    // Xpath2.g:6564:1: parse_org_emftext_language_xpath2_NCNamePITest returns [org.emftext.language.xpath2.NCNamePITest element = null] : a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' ;
    public final org.emftext.language.xpath2.NCNamePITest parse_org_emftext_language_xpath2_NCNamePITest() throws RecognitionException {
        org.emftext.language.xpath2.NCNamePITest element =  null;

        int parse_org_emftext_language_xpath2_NCNamePITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return element; }

            // Xpath2.g:6567:2: (a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' )
            // Xpath2.g:6568:2: a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')'
            {
            a0=(Token)match(input,80,FOLLOW_80_in_parse_org_emftext_language_xpath2_NCNamePITest5234); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2006]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_NCNamePITest5248); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2007]);
            	}

            // Xpath2.g:6596:2: (a2= NCNAME )
            // Xpath2.g:6597:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NCNamePITest5266); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NC_NAME_PI_TEST__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NC_NAME_PI_TEST__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2008]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_NCNamePITest5287); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2009]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2010]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2011]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2012]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2013]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2014]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2015]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2016]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2017]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2018]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2019]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2020]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2021]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2022]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2023]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2024]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2025]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2026]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2027]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2028]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2029]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2030]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2031]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2032]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 56, parse_org_emftext_language_xpath2_NCNamePITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NCNamePITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_StringLiteralPITest"
    // Xpath2.g:6671:1: parse_org_emftext_language_xpath2_StringLiteralPITest returns [org.emftext.language.xpath2.StringLiteralPITest element = null] : a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' ;
    public final org.emftext.language.xpath2.StringLiteralPITest parse_org_emftext_language_xpath2_StringLiteralPITest() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteralPITest element =  null;

        int parse_org_emftext_language_xpath2_StringLiteralPITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return element; }

            // Xpath2.g:6674:2: (a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' )
            // Xpath2.g:6675:2: a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')'
            {
            a0=(Token)match(input,80,FOLLOW_80_in_parse_org_emftext_language_xpath2_StringLiteralPITest5316); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2033]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_StringLiteralPITest5330); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2034]);
            	}

            // Xpath2.g:6703:2: (a2= STRING_LITERAL )
            // Xpath2.g:6704:3: a2= STRING_LITERAL
            {
            a2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteralPITest5348); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.emftext.language.xpath2.StringLiteral proxy = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContextDependentURIFragmentFactory<org.emftext.language.xpath2.StringLiteralPITest, org.emftext.language.xpath2.StringLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getStringLiteralPITestLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2035]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_StringLiteralPITest5369); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2036]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2037]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2038]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2039]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2040]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2041]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2042]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2043]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2044]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2045]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2046]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2047]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2048]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2049]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2050]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2051]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2052]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2053]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2054]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2055]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2056]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2057]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2058]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2059]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 57, parse_org_emftext_language_xpath2_StringLiteralPITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StringLiteralPITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AttributeTest"
    // Xpath2.g:6782:1: parse_org_emftext_language_xpath2_AttributeTest returns [org.emftext.language.xpath2.AttributeTest element = null] : (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardAttributeTest |c1= parse_org_emftext_language_xpath2_NameAttributeTest );
    public final org.emftext.language.xpath2.AttributeTest parse_org_emftext_language_xpath2_AttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.AttributeTest element =  null;

        int parse_org_emftext_language_xpath2_AttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.WildcardAttributeTest c0 =null;

        org.emftext.language.xpath2.NameAttributeTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return element; }

            // Xpath2.g:6785:2: (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardAttributeTest |c1= parse_org_emftext_language_xpath2_NameAttributeTest )
            int alt40=3;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==42) ) {
                int LA40_1 = input.LA(2);

                if ( (LA40_1==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt40=1;
                        }
                        break;
                    case 17:
                        {
                        alt40=2;
                        }
                        break;
                    case NCNAME:
                        {
                        alt40=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }
            switch (alt40) {
                case 1 :
                    // Xpath2.g:6786:2: a0= 'attribute' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,42,FOLLOW_42_in_parse_org_emftext_language_xpath2_AttributeTest5398); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2060]);
                    	}

                    a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_AttributeTest5412); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2061]);
                    	}

                    a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_AttributeTest5426); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2062]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2063]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2064]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2065]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2066]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2067]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2068]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2069]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2070]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2071]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2072]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2073]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2074]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2075]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2076]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2077]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2078]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2079]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2080]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2081]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2082]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2083]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2084]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2085]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:6853:2: c0= parse_org_emftext_language_xpath2_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest5445);
                    c0=parse_org_emftext_language_xpath2_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:6854:4: c1= parse_org_emftext_language_xpath2_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest5455);
                    c1=parse_org_emftext_language_xpath2_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 58, parse_org_emftext_language_xpath2_AttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_WildcardAttributeTest"
    // Xpath2.g:6858:1: parse_org_emftext_language_xpath2_WildcardAttributeTest returns [org.emftext.language.xpath2.WildcardAttributeTest element = null] : a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' ;
    public final org.emftext.language.xpath2.WildcardAttributeTest parse_org_emftext_language_xpath2_WildcardAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.WildcardAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_WildcardAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return element; }

            // Xpath2.g:6861:2: (a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' )
            // Xpath2.g:6862:2: a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')'
            {
            a0=(Token)match(input,42,FOLLOW_42_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5480); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2086]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5494); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2087]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5508); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2088]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2089]);
            	}

            // Xpath2.g:6905:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==19) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // Xpath2.g:6906:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    {
                    // Xpath2.g:6906:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    // Xpath2.g:6907:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5531); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2090]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2091]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2092]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2093]);
                    			}

                    // Xpath2.g:6924:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:6925:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5557);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ATTRIBUTE_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2094]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2095]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5598); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2096]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2097]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2098]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2099]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2100]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2101]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2102]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2103]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2104]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2105]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2106]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2107]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2108]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2109]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2110]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2111]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2112]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2113]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2114]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2115]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2116]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2117]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2118]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2119]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 59, parse_org_emftext_language_xpath2_WildcardAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_WildcardAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NameAttributeTest"
    // Xpath2.g:6996:1: parse_org_emftext_language_xpath2_NameAttributeTest returns [org.emftext.language.xpath2.NameAttributeTest element = null] : a0= 'attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' ;
    public final org.emftext.language.xpath2.NameAttributeTest parse_org_emftext_language_xpath2_NameAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.NameAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_NameAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath2.QName a2_0 =null;

        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return element; }

            // Xpath2.g:6999:2: (a0= 'attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' )
            // Xpath2.g:7000:2: a0= 'attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')'
            {
            a0=(Token)match(input,42,FOLLOW_42_in_parse_org_emftext_language_xpath2_NameAttributeTest5627); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2120]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_NameAttributeTest5641); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2121]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2122]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2123]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2124]);
            	}

            // Xpath2.g:7031:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:7032:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest5659);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2125]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2126]);
            	}

            // Xpath2.g:7058:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==19) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // Xpath2.g:7059:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    {
                    // Xpath2.g:7059:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    // Xpath2.g:7060:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_NameAttributeTest5686); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2127]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2128]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2129]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2130]);
                    			}

                    // Xpath2.g:7077:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:7078:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest5712);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2131]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2132]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_NameAttributeTest5753); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2133]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2134]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2135]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2136]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2137]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2138]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2139]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2140]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2141]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2142]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2143]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2144]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2145]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2146]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2147]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2148]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2149]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2150]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2151]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2152]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2153]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2154]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2155]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2156]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 60, parse_org_emftext_language_xpath2_NameAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NameAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_SchemaAttributeTest"
    // Xpath2.g:7149:1: parse_org_emftext_language_xpath2_SchemaAttributeTest returns [org.emftext.language.xpath2.SchemaAttributeTest element = null] : a0= 'schema-attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' ;
    public final org.emftext.language.xpath2.SchemaAttributeTest parse_org_emftext_language_xpath2_SchemaAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.SchemaAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_SchemaAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath2.QName a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return element; }

            // Xpath2.g:7152:2: (a0= 'schema-attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' )
            // Xpath2.g:7153:2: a0= 'schema-attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')'
            {
            a0=(Token)match(input,83,FOLLOW_83_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5782); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2157]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5796); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2158]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2159]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2160]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2161]);
            	}

            // Xpath2.g:7184:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:7185:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5814);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ATTRIBUTE_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2162]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5832); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2163]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2164]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2165]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2166]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2167]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2168]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2169]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2170]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2171]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2172]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2173]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2174]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2175]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2176]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2177]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2178]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2179]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2180]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2181]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2182]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2183]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2184]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2185]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2186]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 61, parse_org_emftext_language_xpath2_SchemaAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SchemaAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_ElementTest"
    // Xpath2.g:7249:1: parse_org_emftext_language_xpath2_ElementTest returns [org.emftext.language.xpath2.ElementTest element = null] : (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardElementTest |c1= parse_org_emftext_language_xpath2_NameElementTest );
    public final org.emftext.language.xpath2.ElementTest parse_org_emftext_language_xpath2_ElementTest() throws RecognitionException {
        org.emftext.language.xpath2.ElementTest element =  null;

        int parse_org_emftext_language_xpath2_ElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.WildcardElementTest c0 =null;

        org.emftext.language.xpath2.NameElementTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return element; }

            // Xpath2.g:7252:2: (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardElementTest |c1= parse_org_emftext_language_xpath2_NameElementTest )
            int alt43=3;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==51) ) {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt43=1;
                        }
                        break;
                    case 17:
                        {
                        alt43=2;
                        }
                        break;
                    case NCNAME:
                        {
                        alt43=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }
            switch (alt43) {
                case 1 :
                    // Xpath2.g:7253:2: a0= 'element' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,51,FOLLOW_51_in_parse_org_emftext_language_xpath2_ElementTest5861); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_60_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2187]);
                    	}

                    a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_ElementTest5875); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_60_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2188]);
                    	}

                    a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_ElementTest5889); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_60_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2189]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2190]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2191]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2192]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2193]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2194]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2195]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2196]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2197]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2198]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2199]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2200]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2201]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2202]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2203]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2204]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2205]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2206]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2207]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2208]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2209]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2210]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2211]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2212]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2213]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:7321:2: c0= parse_org_emftext_language_xpath2_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_ElementTest5908);
                    c0=parse_org_emftext_language_xpath2_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7322:4: c1= parse_org_emftext_language_xpath2_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_ElementTest5918);
                    c1=parse_org_emftext_language_xpath2_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 62, parse_org_emftext_language_xpath2_ElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_WildcardElementTest"
    // Xpath2.g:7326:1: parse_org_emftext_language_xpath2_WildcardElementTest returns [org.emftext.language.xpath2.WildcardElementTest element = null] : a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' ;
    public final org.emftext.language.xpath2.WildcardElementTest parse_org_emftext_language_xpath2_WildcardElementTest() throws RecognitionException {
        org.emftext.language.xpath2.WildcardElementTest element =  null;

        int parse_org_emftext_language_xpath2_WildcardElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        Token a8=null;
        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return element; }

            // Xpath2.g:7329:2: (a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' )
            // Xpath2.g:7330:2: a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')'
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_org_emftext_language_xpath2_WildcardElementTest5943); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2214]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardElementTest5957); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2215]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardElementTest5971); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2216]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2217]);
            	}

            // Xpath2.g:7388:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==19) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // Xpath2.g:7389:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    {
                    // Xpath2.g:7389:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    // Xpath2.g:7390:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardElementTest5994); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2218]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2219]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2220]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2221]);
                    			}

                    // Xpath2.g:7412:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:7413:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardElementTest6020);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						}
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2222]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2223]);
                    			}

                    // Xpath2.g:7444:4: ( (a5= '?' ) )
                    // Xpath2.g:7445:5: (a5= '?' )
                    {
                    // Xpath2.g:7445:5: (a5= '?' )
                    // Xpath2.g:7446:6: a5= '?'
                    {
                    a5=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_WildcardElementTest6061); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    						if (element == null) {
                    							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    							startIncompleteElement(element);
                    							// initialize boolean attribute
                    							{
                    								Object value = false;
                    								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    							}
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_3_0_0_2, true, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    						// set value of boolean attribute
                    						Object value = true;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						completedElement(value, false);
                    					}

                    }


                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2224]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2225]);
            	}

            a8=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardElementTest6105); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2226]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2227]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2228]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2229]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2230]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2231]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2232]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2233]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2234]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2235]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2236]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2237]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2238]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2239]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2240]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2241]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2242]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2243]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2244]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2245]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2246]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2247]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2248]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2249]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2250]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 63, parse_org_emftext_language_xpath2_WildcardElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_WildcardElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NameElementTest"
    // Xpath2.g:7523:1: parse_org_emftext_language_xpath2_NameElementTest returns [org.emftext.language.xpath2.NameElementTest element = null] : a0= 'element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' ;
    public final org.emftext.language.xpath2.NameElementTest parse_org_emftext_language_xpath2_NameElementTest() throws RecognitionException {
        org.emftext.language.xpath2.NameElementTest element =  null;

        int parse_org_emftext_language_xpath2_NameElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        Token a8=null;
        org.emftext.language.xpath2.QName a2_0 =null;

        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return element; }

            // Xpath2.g:7526:2: (a0= 'element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' )
            // Xpath2.g:7527:2: a0= 'element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')'
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_org_emftext_language_xpath2_NameElementTest6134); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2251]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_NameElementTest6148); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2252]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2253]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2254]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2255]);
            	}

            // Xpath2.g:7568:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:7569:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest6166);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            				}
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2256]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2257]);
            	}

            // Xpath2.g:7600:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==19) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // Xpath2.g:7601:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    {
                    // Xpath2.g:7601:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    // Xpath2.g:7602:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_NameElementTest6193); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2258]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2259]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2260]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2261]);
                    			}

                    // Xpath2.g:7624:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:7625:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest6219);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						}
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2262]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2263]);
                    			}

                    // Xpath2.g:7656:4: ( (a5= '?' ) )
                    // Xpath2.g:7657:5: (a5= '?' )
                    {
                    // Xpath2.g:7657:5: (a5= '?' )
                    // Xpath2.g:7658:6: a5= '?'
                    {
                    a5=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_NameElementTest6260); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    						if (element == null) {
                    							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    							startIncompleteElement(element);
                    							// initialize boolean attribute
                    							{
                    								Object value = false;
                    								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    							}
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_3_0_0_2, true, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    						// set value of boolean attribute
                    						Object value = true;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						completedElement(value, false);
                    					}

                    }


                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2264]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2265]);
            	}

            a8=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_NameElementTest6304); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2266]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2267]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2268]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2269]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2270]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2271]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2272]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2273]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2274]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2275]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2276]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2277]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2278]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2279]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2280]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2281]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2282]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2283]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2284]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2285]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2286]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2287]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2288]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2289]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2290]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 64, parse_org_emftext_language_xpath2_NameElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NameElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_SchemaElementTest"
    // Xpath2.g:7735:1: parse_org_emftext_language_xpath2_SchemaElementTest returns [org.emftext.language.xpath2.SchemaElementTest element = null] : a0= 'schema-element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' ;
    public final org.emftext.language.xpath2.SchemaElementTest parse_org_emftext_language_xpath2_SchemaElementTest() throws RecognitionException {
        org.emftext.language.xpath2.SchemaElementTest element =  null;

        int parse_org_emftext_language_xpath2_SchemaElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath2.QName a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return element; }

            // Xpath2.g:7738:2: (a0= 'schema-element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' )
            // Xpath2.g:7739:2: a0= 'schema-element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')'
            {
            a0=(Token)match(input,84,FOLLOW_84_in_parse_org_emftext_language_xpath2_SchemaElementTest6333); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2291]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaElementTest6347); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2292]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2293]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2294]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2295]);
            	}

            // Xpath2.g:7770:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:7771:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaElementTest6365);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ELEMENT_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2296]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaElementTest6383); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2297]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2298]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2299]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2300]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2301]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2302]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2303]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2304]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2305]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2306]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2307]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2308]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2309]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2310]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2311]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2312]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2313]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2314]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2315]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2316]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2317]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2318]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2319]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2320]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2321]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 65, parse_org_emftext_language_xpath2_SchemaElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SchemaElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_IntegerLiteral"
    // Xpath2.g:7836:1: parse_org_emftext_language_xpath2_IntegerLiteral returns [org.emftext.language.xpath2.IntegerLiteral element = null] : (a0= INTEGER_LITERAL ) ;
    public final org.emftext.language.xpath2.IntegerLiteral parse_org_emftext_language_xpath2_IntegerLiteral() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral element =  null;

        int parse_org_emftext_language_xpath2_IntegerLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return element; }

            // Xpath2.g:7839:2: ( (a0= INTEGER_LITERAL ) )
            // Xpath2.g:7840:2: (a0= INTEGER_LITERAL )
            {
            // Xpath2.g:7840:2: (a0= INTEGER_LITERAL )
            // Xpath2.g:7841:3: a0= INTEGER_LITERAL
            {
            a0=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath2_IntegerLiteral6416); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntegerLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INTEGER_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INTEGER_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_64_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2322]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2323]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2324]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2325]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2326]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2327]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2328]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2329]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2330]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2331]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2332]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2333]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2334]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2335]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2336]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2337]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2338]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2339]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2340]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2341]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2342]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2343]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2344]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 66, parse_org_emftext_language_xpath2_IntegerLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IntegerLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_DecimalLiteral"
    // Xpath2.g:7900:1: parse_org_emftext_language_xpath2_DecimalLiteral returns [org.emftext.language.xpath2.DecimalLiteral element = null] : (a0= DECIMAL_LITERAL ) ;
    public final org.emftext.language.xpath2.DecimalLiteral parse_org_emftext_language_xpath2_DecimalLiteral() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral element =  null;

        int parse_org_emftext_language_xpath2_DecimalLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return element; }

            // Xpath2.g:7903:2: ( (a0= DECIMAL_LITERAL ) )
            // Xpath2.g:7904:2: (a0= DECIMAL_LITERAL )
            {
            // Xpath2.g:7904:2: (a0= DECIMAL_LITERAL )
            // Xpath2.g:7905:3: a0= DECIMAL_LITERAL
            {
            a0=(Token)match(input,DECIMAL_LITERAL,FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath2_DecimalLiteral6456); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDecimalLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DECIMAL_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DECIMAL_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Float resolved = (java.lang.Float) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DECIMAL_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_65_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2345]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2346]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2347]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2348]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2349]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2350]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2351]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2352]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2353]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2354]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2355]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2356]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2357]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2358]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2359]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2360]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2361]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2362]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2363]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2364]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2365]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2366]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2367]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 67, parse_org_emftext_language_xpath2_DecimalLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DecimalLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_DoubleLiteral"
    // Xpath2.g:7964:1: parse_org_emftext_language_xpath2_DoubleLiteral returns [org.emftext.language.xpath2.DoubleLiteral element = null] : (a0= DOUBLE_LITERAL ) ;
    public final org.emftext.language.xpath2.DoubleLiteral parse_org_emftext_language_xpath2_DoubleLiteral() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral element =  null;

        int parse_org_emftext_language_xpath2_DoubleLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return element; }

            // Xpath2.g:7967:2: ( (a0= DOUBLE_LITERAL ) )
            // Xpath2.g:7968:2: (a0= DOUBLE_LITERAL )
            {
            // Xpath2.g:7968:2: (a0= DOUBLE_LITERAL )
            // Xpath2.g:7969:3: a0= DOUBLE_LITERAL
            {
            a0=(Token)match(input,DOUBLE_LITERAL,FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath2_DoubleLiteral6496); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDoubleLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DOUBLE_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Double resolved = (java.lang.Double) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_66_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2368]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2369]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2370]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2371]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2372]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2373]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2374]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2375]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2376]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2377]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2378]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2379]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2380]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2381]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2382]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2383]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2384]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2385]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2386]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2387]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2388]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2389]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2390]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 68, parse_org_emftext_language_xpath2_DoubleLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DoubleLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_StringLiteral"
    // Xpath2.g:8028:1: parse_org_emftext_language_xpath2_StringLiteral returns [org.emftext.language.xpath2.StringLiteral element = null] : (a0= STRING_LITERAL ) ;
    public final org.emftext.language.xpath2.StringLiteral parse_org_emftext_language_xpath2_StringLiteral() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteral element =  null;

        int parse_org_emftext_language_xpath2_StringLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return element; }

            // Xpath2.g:8031:2: ( (a0= STRING_LITERAL ) )
            // Xpath2.g:8032:2: (a0= STRING_LITERAL )
            {
            // Xpath2.g:8032:2: (a0= STRING_LITERAL )
            // Xpath2.g:8033:3: a0= STRING_LITERAL
            {
            a0=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteral6536); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_67_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2391]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2392]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2393]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2394]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2395]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2396]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2397]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2398]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2399]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2400]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2401]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2402]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2403]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2404]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2405]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2406]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2407]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2408]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2409]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2410]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2411]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2412]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2413]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 69, parse_org_emftext_language_xpath2_StringLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StringLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_QName"
    // Xpath2.g:8092:1: parse_org_emftext_language_xpath2_QName returns [org.emftext.language.xpath2.QName element = null] : ( ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME ) |c0= parse_org_emftext_language_xpath2_VarName );
    public final org.emftext.language.xpath2.QName parse_org_emftext_language_xpath2_QName() throws RecognitionException {
        org.emftext.language.xpath2.QName element =  null;

        int parse_org_emftext_language_xpath2_QName_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.VarName c0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return element; }

            // Xpath2.g:8095:2: ( ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME ) |c0= parse_org_emftext_language_xpath2_VarName )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==NCNAME) ) {
                int LA47_1 = input.LA(2);

                if ( (synpred72_Xpath2()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;

            }
            switch (alt47) {
                case 1 :
                    // Xpath2.g:8096:2: ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME )
                    {
                    // Xpath2.g:8096:2: ( ( (a0= NCNAME ) a1= ':' ) )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==NCNAME) ) {
                        int LA46_1 = input.LA(2);

                        if ( (LA46_1==25) ) {
                            alt46=1;
                        }
                    }
                    switch (alt46) {
                        case 1 :
                            // Xpath2.g:8097:3: ( (a0= NCNAME ) a1= ':' )
                            {
                            // Xpath2.g:8097:3: ( (a0= NCNAME ) a1= ':' )
                            // Xpath2.g:8098:4: (a0= NCNAME ) a1= ':'
                            {
                            // Xpath2.g:8098:4: (a0= NCNAME )
                            // Xpath2.g:8099:5: a0= NCNAME
                            {
                            a0=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName6587); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQName();
                            						startIncompleteElement(element);
                            					}
                            					if (a0 != null) {
                            						org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                            						tokenResolver.setOptions(getOptions());
                            						org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                            						tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__PREFIX), result);
                            						Object resolvedObject = result.getResolvedToken();
                            						if (resolvedObject == null) {
                            							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                            						}
                            						java.lang.String resolved = (java.lang.String) resolvedObject;
                            						if (resolved != null) {
                            							Object value = resolved;
                            							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__PREFIX), value);
                            							completedElement(value, false);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_68_0_0_0_0_0_0, resolved, true);
                            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                            					}
                            				}

                            }


                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2414]);
                            			}

                            a1=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_QName6620); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (element == null) {
                            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQName();
                            					startIncompleteElement(element);
                            				}
                            				collectHiddenTokens(element);
                            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_68_0_0_0_0_0_1, null, true);
                            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                            			}

                            if ( state.backtracking==0 ) {
                            				// expected elements (follow set)
                            				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2415]);
                            			}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2416]);
                    	}

                    // Xpath2.g:8155:2: (a2= NCNAME )
                    // Xpath2.g:8156:3: a2= NCNAME
                    {
                    a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName6657); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQName();
                    				startIncompleteElement(element);
                    			}
                    			if (a2 != null) {
                    				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    				tokenResolver.setOptions(getOptions());
                    				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__LOCAL_PART), result);
                    				Object resolvedObject = result.getResolvedToken();
                    				if (resolvedObject == null) {
                    					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    				}
                    				java.lang.String resolved = (java.lang.String) resolvedObject;
                    				if (resolved != null) {
                    					Object value = resolved;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__LOCAL_PART), value);
                    					completedElement(value, false);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_68_0_0_1, resolved, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    			}
                    		}

                    }


                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2417]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2418]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2419]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2420]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2421]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2422]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2423]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2424]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2425]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2426]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2427]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2428]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2429]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2430]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2431]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2432]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2433]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2434]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2435]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2436]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2437]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2438]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2439]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2440]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2441]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2442]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2443]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2444]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2445]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2446]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2447]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2448]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2449]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2450]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:8226:2: c0= parse_org_emftext_language_xpath2_VarName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_QName6683);
                    c0=parse_org_emftext_language_xpath2_VarName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 70, parse_org_emftext_language_xpath2_QName_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QName"



    // $ANTLR start "parse_org_emftext_language_xpath2_PathExpr"
    // Xpath2.g:8230:1: parse_org_emftext_language_xpath2_PathExpr returns [org.emftext.language.xpath2.PathExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )* ;
    public final org.emftext.language.xpath2.PathExpr parse_org_emftext_language_xpath2_PathExpr() throws RecognitionException {
        org.emftext.language.xpath2.PathExpr element =  null;

        int parse_org_emftext_language_xpath2_PathExpr_StartIndex = input.index();

        org.emftext.language.xpath2.PathExprChild a0_0 =null;

        org.emftext.language.xpath2.ChildStepExpr a1_0 =null;

        org.emftext.language.xpath2.DescOrSelfStepExpr a1_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return element; }

            // Xpath2.g:8233:2: ( (a0_0= parse_org_emftext_language_xpath2_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )* )
            // Xpath2.g:8234:2: (a0_0= parse_org_emftext_language_xpath2_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )*
            {
            // Xpath2.g:8234:2: (a0_0= parse_org_emftext_language_xpath2_PathExprChild )
            // Xpath2.g:8235:3: a0_0= parse_org_emftext_language_xpath2_PathExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PathExprChild_in_parse_org_emftext_language_xpath2_PathExpr6712);
            a0_0=parse_org_emftext_language_xpath2_PathExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPathExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.PATH_EXPR__STEP, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_69_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2451]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2452]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2453]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2454]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2455]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2456]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2457]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2458]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2459]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2460]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2461]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2462]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2463]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2464]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2465]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2466]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2467]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2468]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2469]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2470]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2471]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2472]);
            	}

            // Xpath2.g:8281:2: ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0 >= 23 && LA49_0 <= 24)) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // Xpath2.g:8282:3: (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr )
            	    {
            	    // Xpath2.g:8282:3: (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr )
            	    int alt48=2;
            	    int LA48_0 = input.LA(1);

            	    if ( (LA48_0==23) ) {
            	        alt48=1;
            	    }
            	    else if ( (LA48_0==24) ) {
            	        alt48=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 48, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt48) {
            	        case 1 :
            	            // Xpath2.g:8283:4: a1_0= parse_org_emftext_language_xpath2_ChildStepExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExpr6739);
            	            a1_0=parse_org_emftext_language_xpath2_ChildStepExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPathExpr();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a1_0 != null) {
            	            					if (a1_0 != null) {
            	            						Object value = a1_0;
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.PATH_EXPR__STEP, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_69_0_0_1, a1_0, true);
            	            					copyLocalizationInfos(a1_0, element);
            	            				}
            	            			}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:8302:8: a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExpr6756);
            	            a1_1=parse_org_emftext_language_xpath2_DescOrSelfStepExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPathExpr();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a1_1 != null) {
            	            					if (a1_1 != null) {
            	            						Object value = a1_1;
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.PATH_EXPR__STEP, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_69_0_0_1, a1_1, true);
            	            					copyLocalizationInfos(a1_1, element);
            	            				}
            	            			}

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2473]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2474]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2475]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2476]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2477]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2478]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2479]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2480]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2481]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2482]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2483]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2484]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2485]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2486]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2487]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2488]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2489]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2490]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2491]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2492]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2493]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2494]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 71, parse_org_emftext_language_xpath2_PathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ExprSingle"
    // Xpath2.g:8351:1: parse_org_emftext_language_xpath2_ExprSingle returns [org.emftext.language.xpath2.ExprSingle element = null] : (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_MultiplicativeExpr |c9= parse_org_emftext_language_xpath2_UnionExpr |c10= parse_org_emftext_language_xpath2_IntersectExceptExpr |c11= parse_org_emftext_language_xpath2_InstanceofExpr |c12= parse_org_emftext_language_xpath2_TreatExpr |c13= parse_org_emftext_language_xpath2_CastableExpr |c14= parse_org_emftext_language_xpath2_CastExpr |c15= parse_org_emftext_language_xpath2_UnaryExpr |c16= parse_org_emftext_language_xpath2_VarRef |c17= parse_org_emftext_language_xpath2_ParenthesizedExpr |c18= parse_org_emftext_language_xpath2_ContextItemExpr |c19= parse_org_emftext_language_xpath2_FunctionCall |c20= parse_org_emftext_language_xpath2_IntegerLiteral |c21= parse_org_emftext_language_xpath2_DecimalLiteral |c22= parse_org_emftext_language_xpath2_DoubleLiteral |c23= parse_org_emftext_language_xpath2_StringLiteral |c24= parse_org_emftext_language_xpath2_PathExpr );
    public final org.emftext.language.xpath2.ExprSingle parse_org_emftext_language_xpath2_ExprSingle() throws RecognitionException {
        org.emftext.language.xpath2.ExprSingle element =  null;

        int parse_org_emftext_language_xpath2_ExprSingle_StartIndex = input.index();

        org.emftext.language.xpath2.ForExpr c0 =null;

        org.emftext.language.xpath2.QuantifiedExpr c1 =null;

        org.emftext.language.xpath2.IfExpr c2 =null;

        org.emftext.language.xpath2.OrExpr c3 =null;

        org.emftext.language.xpath2.AndExpr c4 =null;

        org.emftext.language.xpath2.ComparisonExpr c5 =null;

        org.emftext.language.xpath2.RangeExpr c6 =null;

        org.emftext.language.xpath2.AdditiveExpr c7 =null;

        org.emftext.language.xpath2.MultiplicativeExpr c8 =null;

        org.emftext.language.xpath2.UnionExpr c9 =null;

        org.emftext.language.xpath2.IntersectExceptExpr c10 =null;

        org.emftext.language.xpath2.InstanceofExpr c11 =null;

        org.emftext.language.xpath2.TreatExpr c12 =null;

        org.emftext.language.xpath2.CastableExpr c13 =null;

        org.emftext.language.xpath2.CastExpr c14 =null;

        org.emftext.language.xpath2.UnaryExpr c15 =null;

        org.emftext.language.xpath2.VarRef c16 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c17 =null;

        org.emftext.language.xpath2.ContextItemExpr c18 =null;

        org.emftext.language.xpath2.FunctionCall c19 =null;

        org.emftext.language.xpath2.IntegerLiteral c20 =null;

        org.emftext.language.xpath2.DecimalLiteral c21 =null;

        org.emftext.language.xpath2.DoubleLiteral c22 =null;

        org.emftext.language.xpath2.StringLiteral c23 =null;

        org.emftext.language.xpath2.PathExpr c24 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return element; }

            // Xpath2.g:8352:2: (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_MultiplicativeExpr |c9= parse_org_emftext_language_xpath2_UnionExpr |c10= parse_org_emftext_language_xpath2_IntersectExceptExpr |c11= parse_org_emftext_language_xpath2_InstanceofExpr |c12= parse_org_emftext_language_xpath2_TreatExpr |c13= parse_org_emftext_language_xpath2_CastableExpr |c14= parse_org_emftext_language_xpath2_CastExpr |c15= parse_org_emftext_language_xpath2_UnaryExpr |c16= parse_org_emftext_language_xpath2_VarRef |c17= parse_org_emftext_language_xpath2_ParenthesizedExpr |c18= parse_org_emftext_language_xpath2_ContextItemExpr |c19= parse_org_emftext_language_xpath2_FunctionCall |c20= parse_org_emftext_language_xpath2_IntegerLiteral |c21= parse_org_emftext_language_xpath2_DecimalLiteral |c22= parse_org_emftext_language_xpath2_DoubleLiteral |c23= parse_org_emftext_language_xpath2_StringLiteral |c24= parse_org_emftext_language_xpath2_PathExpr )
            int alt50=25;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    // Xpath2.g:8353:2: c0= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_ExprSingle6793);
                    c0=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8354:4: c1= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_ExprSingle6803);
                    c1=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8355:4: c2= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_ExprSingle6813);
                    c2=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:8356:4: c3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_ExprSingle6823);
                    c3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:8357:4: c4= parse_org_emftext_language_xpath2_AndExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_ExprSingle6833);
                    c4=parse_org_emftext_language_xpath2_AndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:8358:4: c5= parse_org_emftext_language_xpath2_ComparisonExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_ExprSingle6843);
                    c5=parse_org_emftext_language_xpath2_ComparisonExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:8359:4: c6= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ExprSingle6853);
                    c6=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:8360:4: c7= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ExprSingle6863);
                    c7=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:8361:4: c8= parse_org_emftext_language_xpath2_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_ExprSingle6873);
                    c8=parse_org_emftext_language_xpath2_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:8362:4: c9= parse_org_emftext_language_xpath2_UnionExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_ExprSingle6883);
                    c9=parse_org_emftext_language_xpath2_UnionExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:8363:4: c10= parse_org_emftext_language_xpath2_IntersectExceptExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_ExprSingle6893);
                    c10=parse_org_emftext_language_xpath2_IntersectExceptExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath2.g:8364:4: c11= parse_org_emftext_language_xpath2_InstanceofExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_ExprSingle6903);
                    c11=parse_org_emftext_language_xpath2_InstanceofExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath2.g:8365:4: c12= parse_org_emftext_language_xpath2_TreatExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_ExprSingle6913);
                    c12=parse_org_emftext_language_xpath2_TreatExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath2.g:8366:4: c13= parse_org_emftext_language_xpath2_CastableExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_ExprSingle6923);
                    c13=parse_org_emftext_language_xpath2_CastableExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath2.g:8367:4: c14= parse_org_emftext_language_xpath2_CastExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_ExprSingle6933);
                    c14=parse_org_emftext_language_xpath2_CastExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 16 :
                    // Xpath2.g:8368:4: c15= parse_org_emftext_language_xpath2_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_ExprSingle6943);
                    c15=parse_org_emftext_language_xpath2_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c15; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 17 :
                    // Xpath2.g:8369:4: c16= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_ExprSingle6953);
                    c16=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c16; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 18 :
                    // Xpath2.g:8370:4: c17= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_ExprSingle6963);
                    c17=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c17; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 19 :
                    // Xpath2.g:8371:4: c18= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_ExprSingle6973);
                    c18=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c18; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 20 :
                    // Xpath2.g:8372:4: c19= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_ExprSingle6983);
                    c19=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c19; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 21 :
                    // Xpath2.g:8373:4: c20= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_ExprSingle6993);
                    c20=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c20; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 22 :
                    // Xpath2.g:8374:4: c21= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_ExprSingle7003);
                    c21=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c21; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 23 :
                    // Xpath2.g:8375:4: c22= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_ExprSingle7013);
                    c22=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c22; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 24 :
                    // Xpath2.g:8376:4: c23= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_ExprSingle7023);
                    c23=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c23; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 25 :
                    // Xpath2.g:8377:4: c24= parse_org_emftext_language_xpath2_PathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ExprSingle7033);
                    c24=parse_org_emftext_language_xpath2_PathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c24; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 72, parse_org_emftext_language_xpath2_ExprSingle_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ExprSingle"



    // $ANTLR start "parse_org_emftext_language_xpath2_Comp"
    // Xpath2.g:8381:1: parse_org_emftext_language_xpath2_Comp returns [org.emftext.language.xpath2.Comp element = null] : (c0= parse_org_emftext_language_xpath2_GeneralComp |c1= parse_org_emftext_language_xpath2_ValueComp |c2= parse_org_emftext_language_xpath2_NodeComp );
    public final org.emftext.language.xpath2.Comp parse_org_emftext_language_xpath2_Comp() throws RecognitionException {
        org.emftext.language.xpath2.Comp element =  null;

        int parse_org_emftext_language_xpath2_Comp_StartIndex = input.index();

        org.emftext.language.xpath2.GeneralComp c0 =null;

        org.emftext.language.xpath2.ValueComp c1 =null;

        org.emftext.language.xpath2.NodeComp c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return element; }

            // Xpath2.g:8382:2: (c0= parse_org_emftext_language_xpath2_GeneralComp |c1= parse_org_emftext_language_xpath2_ValueComp |c2= parse_org_emftext_language_xpath2_NodeComp )
            int alt51=3;
            switch ( input.LA(1) ) {
            case 13:
            case 27:
            case 29:
            case 30:
            case 31:
            case 32:
                {
                alt51=1;
                }
                break;
            case 54:
            case 60:
            case 61:
            case 69:
            case 70:
            case 73:
                {
                alt51=2;
                }
                break;
            case 28:
            case 33:
            case 67:
                {
                alt51=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;

            }

            switch (alt51) {
                case 1 :
                    // Xpath2.g:8383:2: c0= parse_org_emftext_language_xpath2_GeneralComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralComp_in_parse_org_emftext_language_xpath2_Comp7054);
                    c0=parse_org_emftext_language_xpath2_GeneralComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8384:4: c1= parse_org_emftext_language_xpath2_ValueComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ValueComp_in_parse_org_emftext_language_xpath2_Comp7064);
                    c1=parse_org_emftext_language_xpath2_ValueComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8385:4: c2= parse_org_emftext_language_xpath2_NodeComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeComp_in_parse_org_emftext_language_xpath2_Comp7074);
                    c2=parse_org_emftext_language_xpath2_NodeComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 73, parse_org_emftext_language_xpath2_Comp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Comp"



    // $ANTLR start "parse_org_emftext_language_xpath2_SequenceType"
    // Xpath2.g:8389:1: parse_org_emftext_language_xpath2_SequenceType returns [org.emftext.language.xpath2.SequenceType element = null] : (c0= parse_org_emftext_language_xpath2_EmptySequenceType |c1= parse_org_emftext_language_xpath2_ItemSequenceType );
    public final org.emftext.language.xpath2.SequenceType parse_org_emftext_language_xpath2_SequenceType() throws RecognitionException {
        org.emftext.language.xpath2.SequenceType element =  null;

        int parse_org_emftext_language_xpath2_SequenceType_StartIndex = input.index();

        org.emftext.language.xpath2.EmptySequenceType c0 =null;

        org.emftext.language.xpath2.ItemSequenceType c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return element; }

            // Xpath2.g:8390:2: (c0= parse_org_emftext_language_xpath2_EmptySequenceType |c1= parse_org_emftext_language_xpath2_ItemSequenceType )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==53) ) {
                alt52=1;
            }
            else if ( (LA52_0==NCNAME||LA52_0==42||LA52_0==46||(LA52_0 >= 50 && LA52_0 <= 51)||LA52_0==68||LA52_0==74||LA52_0==80||(LA52_0 >= 83 && LA52_0 <= 84)||LA52_0==87) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }
            switch (alt52) {
                case 1 :
                    // Xpath2.g:8391:2: c0= parse_org_emftext_language_xpath2_EmptySequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_EmptySequenceType_in_parse_org_emftext_language_xpath2_SequenceType7095);
                    c0=parse_org_emftext_language_xpath2_EmptySequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8392:4: c1= parse_org_emftext_language_xpath2_ItemSequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemSequenceType_in_parse_org_emftext_language_xpath2_SequenceType7105);
                    c1=parse_org_emftext_language_xpath2_ItemSequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 74, parse_org_emftext_language_xpath2_SequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ValueExpr"
    // Xpath2.g:8396:1: parse_org_emftext_language_xpath2_ValueExpr returns [org.emftext.language.xpath2.ValueExpr element = null] : (c0= parse_org_emftext_language_xpath2_VarRef |c1= parse_org_emftext_language_xpath2_ParenthesizedExpr |c2= parse_org_emftext_language_xpath2_ContextItemExpr |c3= parse_org_emftext_language_xpath2_FunctionCall |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral |c8= parse_org_emftext_language_xpath2_PathExpr );
    public final org.emftext.language.xpath2.ValueExpr parse_org_emftext_language_xpath2_ValueExpr() throws RecognitionException {
        org.emftext.language.xpath2.ValueExpr element =  null;

        int parse_org_emftext_language_xpath2_ValueExpr_StartIndex = input.index();

        org.emftext.language.xpath2.VarRef c0 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c1 =null;

        org.emftext.language.xpath2.ContextItemExpr c2 =null;

        org.emftext.language.xpath2.FunctionCall c3 =null;

        org.emftext.language.xpath2.IntegerLiteral c4 =null;

        org.emftext.language.xpath2.DecimalLiteral c5 =null;

        org.emftext.language.xpath2.DoubleLiteral c6 =null;

        org.emftext.language.xpath2.StringLiteral c7 =null;

        org.emftext.language.xpath2.PathExpr c8 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return element; }

            // Xpath2.g:8397:2: (c0= parse_org_emftext_language_xpath2_VarRef |c1= parse_org_emftext_language_xpath2_ParenthesizedExpr |c2= parse_org_emftext_language_xpath2_ContextItemExpr |c3= parse_org_emftext_language_xpath2_FunctionCall |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral |c8= parse_org_emftext_language_xpath2_PathExpr )
            int alt53=9;
            switch ( input.LA(1) ) {
            case 14:
                {
                int LA53_1 = input.LA(2);

                if ( (synpred102_Xpath2()) ) {
                    alt53=1;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA53_2 = input.LA(2);

                if ( (synpred103_Xpath2()) ) {
                    alt53=2;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 2, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA53_3 = input.LA(2);

                if ( (synpred104_Xpath2()) ) {
                    alt53=3;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 3, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA53_4 = input.LA(2);

                if ( (synpred105_Xpath2()) ) {
                    alt53=4;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 4, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA53_5 = input.LA(2);

                if ( (synpred106_Xpath2()) ) {
                    alt53=5;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 5, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA53_6 = input.LA(2);

                if ( (synpred107_Xpath2()) ) {
                    alt53=6;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 6, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA53_7 = input.LA(2);

                if ( (synpred108_Xpath2()) ) {
                    alt53=7;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 7, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA53_8 = input.LA(2);

                if ( (synpred109_Xpath2()) ) {
                    alt53=8;
                }
                else if ( (true) ) {
                    alt53=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 8, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
            case 17:
            case 22:
            case 23:
            case 24:
            case 35:
            case 38:
            case 39:
            case 42:
            case 45:
            case 46:
            case 47:
            case 48:
            case 50:
            case 51:
            case 57:
            case 58:
            case 72:
            case 74:
            case 77:
            case 78:
            case 79:
            case 80:
            case 83:
            case 84:
            case 85:
            case 87:
                {
                alt53=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;

            }

            switch (alt53) {
                case 1 :
                    // Xpath2.g:8398:2: c0= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_ValueExpr7126);
                    c0=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8399:4: c1= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_ValueExpr7136);
                    c1=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8400:4: c2= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_ValueExpr7146);
                    c2=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:8401:4: c3= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_ValueExpr7156);
                    c3=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:8402:4: c4= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7166);
                    c4=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:8403:4: c5= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7176);
                    c5=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:8404:4: c6= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7186);
                    c6=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:8405:4: c7= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7196);
                    c7=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:8406:4: c8= parse_org_emftext_language_xpath2_PathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ValueExpr7206);
                    c8=parse_org_emftext_language_xpath2_PathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 75, parse_org_emftext_language_xpath2_ValueExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ValueExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_StepExpr"
    // Xpath2.g:8410:1: parse_org_emftext_language_xpath2_StepExpr returns [org.emftext.language.xpath2.StepExpr element = null] : (c0= parse_org_emftext_language_xpath2_AxisStep |c1= parse_org_emftext_language_xpath2_FilterExpr );
    public final org.emftext.language.xpath2.StepExpr parse_org_emftext_language_xpath2_StepExpr() throws RecognitionException {
        org.emftext.language.xpath2.StepExpr element =  null;

        int parse_org_emftext_language_xpath2_StepExpr_StartIndex = input.index();

        org.emftext.language.xpath2.AxisStep c0 =null;

        org.emftext.language.xpath2.FilterExpr c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return element; }

            // Xpath2.g:8411:2: (c0= parse_org_emftext_language_xpath2_AxisStep |c1= parse_org_emftext_language_xpath2_FilterExpr )
            int alt54=2;
            switch ( input.LA(1) ) {
            case TEXT:
            case 17:
            case 22:
            case 35:
            case 38:
            case 39:
            case 42:
            case 45:
            case 46:
            case 47:
            case 48:
            case 50:
            case 51:
            case 57:
            case 58:
            case 72:
            case 74:
            case 77:
            case 78:
            case 79:
            case 80:
            case 83:
            case 84:
            case 85:
            case 87:
                {
                alt54=1;
                }
                break;
            case NCNAME:
                {
                switch ( input.LA(2) ) {
                case 25:
                    {
                    int LA54_4 = input.LA(3);

                    if ( (LA54_4==NCNAME) ) {
                        int LA54_5 = input.LA(4);

                        if ( (LA54_5==EOF||LA54_5==13||(LA54_5 >= 16 && LA54_5 <= 20)||(LA54_5 >= 23 && LA54_5 <= 24)||(LA54_5 >= 27 && LA54_5 <= 33)||(LA54_5 >= 36 && LA54_5 <= 37)||LA54_5==40||(LA54_5 >= 43 && LA54_5 <= 44)||LA54_5==49||LA54_5==52||LA54_5==54||LA54_5==56||(LA54_5 >= 60 && LA54_5 <= 62)||(LA54_5 >= 65 && LA54_5 <= 67)||(LA54_5 >= 69 && LA54_5 <= 71)||LA54_5==73||LA54_5==76||(LA54_5 >= 81 && LA54_5 <= 82)||(LA54_5 >= 89 && LA54_5 <= 92)) ) {
                            alt54=1;
                        }
                        else if ( (LA54_5==15) ) {
                            alt54=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 54, 5, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 54, 4, input);

                        throw nvae;

                    }
                    }
                    break;
                case EOF:
                case 13:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 23:
                case 24:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 36:
                case 37:
                case 40:
                case 43:
                case 44:
                case 49:
                case 52:
                case 54:
                case 56:
                case 60:
                case 61:
                case 62:
                case 65:
                case 66:
                case 67:
                case 69:
                case 70:
                case 71:
                case 73:
                case 76:
                case 81:
                case 82:
                case 89:
                case 90:
                case 91:
                case 92:
                    {
                    alt54=1;
                    }
                    break;
                case 15:
                    {
                    alt54=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 54, 2, input);

                    throw nvae;

                }

                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case STRING_LITERAL:
            case 14:
            case 15:
            case 21:
                {
                alt54=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;

            }

            switch (alt54) {
                case 1 :
                    // Xpath2.g:8412:2: c0= parse_org_emftext_language_xpath2_AxisStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_StepExpr7227);
                    c0=parse_org_emftext_language_xpath2_AxisStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8413:4: c1= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_StepExpr7237);
                    c1=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 76, parse_org_emftext_language_xpath2_StepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_SelfStepExprChild"
    // Xpath2.g:8417:1: parse_org_emftext_language_xpath2_SelfStepExprChild returns [org.emftext.language.xpath2.SelfStepExprChild element = null] : (c0= parse_org_emftext_language_xpath2_AxisStep |c1= parse_org_emftext_language_xpath2_FilterExpr );
    public final org.emftext.language.xpath2.SelfStepExprChild parse_org_emftext_language_xpath2_SelfStepExprChild() throws RecognitionException {
        org.emftext.language.xpath2.SelfStepExprChild element =  null;

        int parse_org_emftext_language_xpath2_SelfStepExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.AxisStep c0 =null;

        org.emftext.language.xpath2.FilterExpr c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return element; }

            // Xpath2.g:8418:2: (c0= parse_org_emftext_language_xpath2_AxisStep |c1= parse_org_emftext_language_xpath2_FilterExpr )
            int alt55=2;
            switch ( input.LA(1) ) {
            case TEXT:
            case 17:
            case 22:
            case 35:
            case 38:
            case 39:
            case 42:
            case 45:
            case 46:
            case 47:
            case 48:
            case 50:
            case 51:
            case 57:
            case 58:
            case 72:
            case 74:
            case 77:
            case 78:
            case 79:
            case 80:
            case 83:
            case 84:
            case 85:
            case 87:
                {
                alt55=1;
                }
                break;
            case NCNAME:
                {
                switch ( input.LA(2) ) {
                case 25:
                    {
                    int LA55_4 = input.LA(3);

                    if ( (LA55_4==NCNAME) ) {
                        int LA55_5 = input.LA(4);

                        if ( (LA55_5==EOF||LA55_5==13||(LA55_5 >= 16 && LA55_5 <= 20)||(LA55_5 >= 23 && LA55_5 <= 24)||(LA55_5 >= 27 && LA55_5 <= 33)||(LA55_5 >= 36 && LA55_5 <= 37)||LA55_5==40||(LA55_5 >= 43 && LA55_5 <= 44)||LA55_5==49||LA55_5==52||LA55_5==54||LA55_5==56||(LA55_5 >= 60 && LA55_5 <= 62)||(LA55_5 >= 65 && LA55_5 <= 67)||(LA55_5 >= 69 && LA55_5 <= 71)||LA55_5==73||LA55_5==76||(LA55_5 >= 81 && LA55_5 <= 82)||(LA55_5 >= 89 && LA55_5 <= 92)) ) {
                            alt55=1;
                        }
                        else if ( (LA55_5==15) ) {
                            alt55=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 55, 5, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 4, input);

                        throw nvae;

                    }
                    }
                    break;
                case EOF:
                case 13:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 23:
                case 24:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 36:
                case 37:
                case 40:
                case 43:
                case 44:
                case 49:
                case 52:
                case 54:
                case 56:
                case 60:
                case 61:
                case 62:
                case 65:
                case 66:
                case 67:
                case 69:
                case 70:
                case 71:
                case 73:
                case 76:
                case 81:
                case 82:
                case 89:
                case 90:
                case 91:
                case 92:
                    {
                    alt55=1;
                    }
                    break;
                case 15:
                    {
                    alt55=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 2, input);

                    throw nvae;

                }

                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case STRING_LITERAL:
            case 14:
            case 15:
            case 21:
                {
                alt55=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }

            switch (alt55) {
                case 1 :
                    // Xpath2.g:8419:2: c0= parse_org_emftext_language_xpath2_AxisStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild7258);
                    c0=parse_org_emftext_language_xpath2_AxisStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8420:4: c1= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild7268);
                    c1=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 77, parse_org_emftext_language_xpath2_SelfStepExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SelfStepExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_DirectionalStep"
    // Xpath2.g:8424:1: parse_org_emftext_language_xpath2_DirectionalStep returns [org.emftext.language.xpath2.DirectionalStep element = null] : (c0= parse_org_emftext_language_xpath2_GeneralForwardStep |c1= parse_org_emftext_language_xpath2_AbbrevForwardStep |c2= parse_org_emftext_language_xpath2_GeneralReverseStep |c3= parse_org_emftext_language_xpath2_AbbrevReverseStep );
    public final org.emftext.language.xpath2.DirectionalStep parse_org_emftext_language_xpath2_DirectionalStep() throws RecognitionException {
        org.emftext.language.xpath2.DirectionalStep element =  null;

        int parse_org_emftext_language_xpath2_DirectionalStep_StartIndex = input.index();

        org.emftext.language.xpath2.GeneralForwardStep c0 =null;

        org.emftext.language.xpath2.AbbrevForwardStep c1 =null;

        org.emftext.language.xpath2.GeneralReverseStep c2 =null;

        org.emftext.language.xpath2.AbbrevReverseStep c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return element; }

            // Xpath2.g:8425:2: (c0= parse_org_emftext_language_xpath2_GeneralForwardStep |c1= parse_org_emftext_language_xpath2_AbbrevForwardStep |c2= parse_org_emftext_language_xpath2_GeneralReverseStep |c3= parse_org_emftext_language_xpath2_AbbrevReverseStep )
            int alt56=4;
            switch ( input.LA(1) ) {
            case 45:
            case 47:
            case 48:
            case 57:
            case 58:
            case 72:
            case 85:
                {
                alt56=1;
                }
                break;
            case 42:
                {
                int LA56_2 = input.LA(2);

                if ( (LA56_2==26) ) {
                    alt56=1;
                }
                else if ( (LA56_2==15) ) {
                    alt56=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 2, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
            case TEXT:
            case 17:
            case 35:
            case 46:
            case 50:
            case 51:
            case 74:
            case 80:
            case 83:
            case 84:
            case 87:
                {
                alt56=2;
                }
                break;
            case 38:
            case 39:
            case 77:
            case 78:
            case 79:
                {
                alt56=3;
                }
                break;
            case 22:
                {
                alt56=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;

            }

            switch (alt56) {
                case 1 :
                    // Xpath2.g:8426:2: c0= parse_org_emftext_language_xpath2_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep7289);
                    c0=parse_org_emftext_language_xpath2_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8427:4: c1= parse_org_emftext_language_xpath2_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep7299);
                    c1=parse_org_emftext_language_xpath2_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8428:4: c2= parse_org_emftext_language_xpath2_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep7309);
                    c2=parse_org_emftext_language_xpath2_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:8429:4: c3= parse_org_emftext_language_xpath2_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep7319);
                    c3=parse_org_emftext_language_xpath2_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 78, parse_org_emftext_language_xpath2_DirectionalStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DirectionalStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeTest"
    // Xpath2.g:8433:1: parse_org_emftext_language_xpath2_NodeTest returns [org.emftext.language.xpath2.NodeTest element = null] : (c0= parse_org_emftext_language_xpath2_NodeKindTest |c1= parse_org_emftext_language_xpath2_QNameTest |c2= parse_org_emftext_language_xpath2_AnyWildcard |c3= parse_org_emftext_language_xpath2_LocalNameWildcard |c4= parse_org_emftext_language_xpath2_NamespaceWildcard );
    public final org.emftext.language.xpath2.NodeTest parse_org_emftext_language_xpath2_NodeTest() throws RecognitionException {
        org.emftext.language.xpath2.NodeTest element =  null;

        int parse_org_emftext_language_xpath2_NodeTest_StartIndex = input.index();

        org.emftext.language.xpath2.NodeKindTest c0 =null;

        org.emftext.language.xpath2.QNameTest c1 =null;

        org.emftext.language.xpath2.AnyWildcard c2 =null;

        org.emftext.language.xpath2.LocalNameWildcard c3 =null;

        org.emftext.language.xpath2.NamespaceWildcard c4 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return element; }

            // Xpath2.g:8434:2: (c0= parse_org_emftext_language_xpath2_NodeKindTest |c1= parse_org_emftext_language_xpath2_QNameTest |c2= parse_org_emftext_language_xpath2_AnyWildcard |c3= parse_org_emftext_language_xpath2_LocalNameWildcard |c4= parse_org_emftext_language_xpath2_NamespaceWildcard )
            int alt57=5;
            switch ( input.LA(1) ) {
            case 42:
            case 46:
            case 50:
            case 51:
            case 74:
            case 80:
            case 83:
            case 84:
            case 87:
                {
                alt57=1;
                }
                break;
            case NCNAME:
                {
                alt57=2;
                }
                break;
            case 17:
                {
                int LA57_3 = input.LA(2);

                if ( (LA57_3==EOF||LA57_3==13||(LA57_3 >= 16 && LA57_3 <= 20)||(LA57_3 >= 23 && LA57_3 <= 24)||(LA57_3 >= 27 && LA57_3 <= 33)||(LA57_3 >= 36 && LA57_3 <= 37)||LA57_3==40||(LA57_3 >= 43 && LA57_3 <= 44)||LA57_3==49||LA57_3==52||LA57_3==54||LA57_3==56||(LA57_3 >= 60 && LA57_3 <= 62)||(LA57_3 >= 65 && LA57_3 <= 67)||(LA57_3 >= 69 && LA57_3 <= 71)||LA57_3==73||LA57_3==76||(LA57_3 >= 81 && LA57_3 <= 82)||(LA57_3 >= 89 && LA57_3 <= 92)) ) {
                    alt57=3;
                }
                else if ( (LA57_3==25) ) {
                    alt57=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 3, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                alt57=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;

            }

            switch (alt57) {
                case 1 :
                    // Xpath2.g:8435:2: c0= parse_org_emftext_language_xpath2_NodeKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeKindTest_in_parse_org_emftext_language_xpath2_NodeTest7340);
                    c0=parse_org_emftext_language_xpath2_NodeKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8436:4: c1= parse_org_emftext_language_xpath2_QNameTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QNameTest_in_parse_org_emftext_language_xpath2_NodeTest7350);
                    c1=parse_org_emftext_language_xpath2_QNameTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8437:4: c2= parse_org_emftext_language_xpath2_AnyWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyWildcard_in_parse_org_emftext_language_xpath2_NodeTest7360);
                    c2=parse_org_emftext_language_xpath2_AnyWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:8438:4: c3= parse_org_emftext_language_xpath2_LocalNameWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_LocalNameWildcard_in_parse_org_emftext_language_xpath2_NodeTest7370);
                    c3=parse_org_emftext_language_xpath2_LocalNameWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:8439:4: c4= parse_org_emftext_language_xpath2_NamespaceWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NamespaceWildcard_in_parse_org_emftext_language_xpath2_NodeTest7380);
                    c4=parse_org_emftext_language_xpath2_NamespaceWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 79, parse_org_emftext_language_xpath2_NodeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_KindTest"
    // Xpath2.g:8443:1: parse_org_emftext_language_xpath2_KindTest returns [org.emftext.language.xpath2.KindTest element = null] : (c0= parse_org_emftext_language_xpath2_AnyKindTest |c1= parse_org_emftext_language_xpath2_DocumentTest |c2= parse_org_emftext_language_xpath2_TextTest |c3= parse_org_emftext_language_xpath2_CommentTest |c4= parse_org_emftext_language_xpath2_PITest |c5= parse_org_emftext_language_xpath2_NCNamePITest |c6= parse_org_emftext_language_xpath2_StringLiteralPITest |c7= parse_org_emftext_language_xpath2_AttributeTest |c8= parse_org_emftext_language_xpath2_WildcardAttributeTest |c9= parse_org_emftext_language_xpath2_NameAttributeTest |c10= parse_org_emftext_language_xpath2_SchemaAttributeTest |c11= parse_org_emftext_language_xpath2_ElementTest |c12= parse_org_emftext_language_xpath2_WildcardElementTest |c13= parse_org_emftext_language_xpath2_NameElementTest |c14= parse_org_emftext_language_xpath2_SchemaElementTest );
    public final org.emftext.language.xpath2.KindTest parse_org_emftext_language_xpath2_KindTest() throws RecognitionException {
        org.emftext.language.xpath2.KindTest element =  null;

        int parse_org_emftext_language_xpath2_KindTest_StartIndex = input.index();

        org.emftext.language.xpath2.AnyKindTest c0 =null;

        org.emftext.language.xpath2.DocumentTest c1 =null;

        org.emftext.language.xpath2.TextTest c2 =null;

        org.emftext.language.xpath2.CommentTest c3 =null;

        org.emftext.language.xpath2.PITest c4 =null;

        org.emftext.language.xpath2.NCNamePITest c5 =null;

        org.emftext.language.xpath2.StringLiteralPITest c6 =null;

        org.emftext.language.xpath2.AttributeTest c7 =null;

        org.emftext.language.xpath2.WildcardAttributeTest c8 =null;

        org.emftext.language.xpath2.NameAttributeTest c9 =null;

        org.emftext.language.xpath2.SchemaAttributeTest c10 =null;

        org.emftext.language.xpath2.ElementTest c11 =null;

        org.emftext.language.xpath2.WildcardElementTest c12 =null;

        org.emftext.language.xpath2.NameElementTest c13 =null;

        org.emftext.language.xpath2.SchemaElementTest c14 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return element; }

            // Xpath2.g:8444:2: (c0= parse_org_emftext_language_xpath2_AnyKindTest |c1= parse_org_emftext_language_xpath2_DocumentTest |c2= parse_org_emftext_language_xpath2_TextTest |c3= parse_org_emftext_language_xpath2_CommentTest |c4= parse_org_emftext_language_xpath2_PITest |c5= parse_org_emftext_language_xpath2_NCNamePITest |c6= parse_org_emftext_language_xpath2_StringLiteralPITest |c7= parse_org_emftext_language_xpath2_AttributeTest |c8= parse_org_emftext_language_xpath2_WildcardAttributeTest |c9= parse_org_emftext_language_xpath2_NameAttributeTest |c10= parse_org_emftext_language_xpath2_SchemaAttributeTest |c11= parse_org_emftext_language_xpath2_ElementTest |c12= parse_org_emftext_language_xpath2_WildcardElementTest |c13= parse_org_emftext_language_xpath2_NameElementTest |c14= parse_org_emftext_language_xpath2_SchemaElementTest )
            int alt58=15;
            switch ( input.LA(1) ) {
            case 74:
                {
                alt58=1;
                }
                break;
            case 50:
                {
                alt58=2;
                }
                break;
            case 87:
                {
                alt58=3;
                }
                break;
            case 46:
                {
                alt58=4;
                }
                break;
            case 80:
                {
                int LA58_5 = input.LA(2);

                if ( (LA58_5==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt58=5;
                        }
                        break;
                    case NCNAME:
                        {
                        int LA58_14 = input.LA(4);

                        if ( (LA58_14==16) ) {
                            int LA58_22 = input.LA(5);

                            if ( (synpred123_Xpath2()) ) {
                                alt58=5;
                            }
                            else if ( (synpred124_Xpath2()) ) {
                                alt58=6;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 22, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 58, 14, input);

                            throw nvae;

                        }
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        int LA58_15 = input.LA(4);

                        if ( (LA58_15==16) ) {
                            int LA58_23 = input.LA(5);

                            if ( (synpred123_Xpath2()) ) {
                                alt58=5;
                            }
                            else if ( (synpred125_Xpath2()) ) {
                                alt58=7;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 23, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 58, 15, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 58, 10, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 58, 5, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                int LA58_6 = input.LA(2);

                if ( (LA58_6==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt58=8;
                        }
                        break;
                    case 17:
                        {
                        int LA58_17 = input.LA(4);

                        if ( (LA58_17==19) ) {
                            int LA58_24 = input.LA(5);

                            if ( (LA58_24==NCNAME) ) {
                                int LA58_36 = input.LA(6);

                                if ( (LA58_36==25) ) {
                                    int LA58_46 = input.LA(7);

                                    if ( (LA58_46==NCNAME) ) {
                                        int LA58_52 = input.LA(8);

                                        if ( (LA58_52==16) ) {
                                            int LA58_25 = input.LA(9);

                                            if ( (synpred126_Xpath2()) ) {
                                                alt58=8;
                                            }
                                            else if ( (synpred127_Xpath2()) ) {
                                                alt58=9;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 25, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 52, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 46, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA58_36==16) ) {
                                    int LA58_25 = input.LA(7);

                                    if ( (synpred126_Xpath2()) ) {
                                        alt58=8;
                                    }
                                    else if ( (synpred127_Xpath2()) ) {
                                        alt58=9;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 25, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 58, 36, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 24, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA58_17==16) ) {
                            int LA58_25 = input.LA(5);

                            if ( (synpred126_Xpath2()) ) {
                                alt58=8;
                            }
                            else if ( (synpred127_Xpath2()) ) {
                                alt58=9;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 25, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 58, 17, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        switch ( input.LA(4) ) {
                        case 25:
                            {
                            int LA58_26 = input.LA(5);

                            if ( (LA58_26==NCNAME) ) {
                                int LA58_38 = input.LA(6);

                                if ( (LA58_38==19) ) {
                                    int LA58_27 = input.LA(7);

                                    if ( (LA58_27==NCNAME) ) {
                                        int LA58_39 = input.LA(8);

                                        if ( (LA58_39==25) ) {
                                            int LA58_47 = input.LA(9);

                                            if ( (LA58_47==NCNAME) ) {
                                                int LA58_53 = input.LA(10);

                                                if ( (LA58_53==16) ) {
                                                    int LA58_28 = input.LA(11);

                                                    if ( (synpred126_Xpath2()) ) {
                                                        alt58=8;
                                                    }
                                                    else if ( (synpred128_Xpath2()) ) {
                                                        alt58=10;
                                                    }
                                                    else {
                                                        if (state.backtracking>0) {state.failed=true; return element;}
                                                        NoViableAltException nvae =
                                                            new NoViableAltException("", 58, 28, input);

                                                        throw nvae;

                                                    }
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 58, 53, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 47, input);

                                                throw nvae;

                                            }
                                        }
                                        else if ( (LA58_39==16) ) {
                                            int LA58_28 = input.LA(9);

                                            if ( (synpred126_Xpath2()) ) {
                                                alt58=8;
                                            }
                                            else if ( (synpred128_Xpath2()) ) {
                                                alt58=10;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 28, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 39, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 27, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA58_38==16) ) {
                                    int LA58_28 = input.LA(7);

                                    if ( (synpred126_Xpath2()) ) {
                                        alt58=8;
                                    }
                                    else if ( (synpred128_Xpath2()) ) {
                                        alt58=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 28, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 58, 38, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 26, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 19:
                            {
                            int LA58_27 = input.LA(5);

                            if ( (LA58_27==NCNAME) ) {
                                int LA58_39 = input.LA(6);

                                if ( (LA58_39==25) ) {
                                    int LA58_47 = input.LA(7);

                                    if ( (LA58_47==NCNAME) ) {
                                        int LA58_53 = input.LA(8);

                                        if ( (LA58_53==16) ) {
                                            int LA58_28 = input.LA(9);

                                            if ( (synpred126_Xpath2()) ) {
                                                alt58=8;
                                            }
                                            else if ( (synpred128_Xpath2()) ) {
                                                alt58=10;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 28, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 53, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 47, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA58_39==16) ) {
                                    int LA58_28 = input.LA(7);

                                    if ( (synpred126_Xpath2()) ) {
                                        alt58=8;
                                    }
                                    else if ( (synpred128_Xpath2()) ) {
                                        alt58=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 28, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 58, 39, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 27, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 16:
                            {
                            int LA58_28 = input.LA(5);

                            if ( (synpred126_Xpath2()) ) {
                                alt58=8;
                            }
                            else if ( (synpred128_Xpath2()) ) {
                                alt58=10;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 28, input);

                                throw nvae;

                            }
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 58, 18, input);

                            throw nvae;

                        }

                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 58, 11, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 58, 6, input);

                    throw nvae;

                }
                }
                break;
            case 83:
                {
                alt58=11;
                }
                break;
            case 51:
                {
                int LA58_8 = input.LA(2);

                if ( (LA58_8==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt58=12;
                        }
                        break;
                    case 17:
                        {
                        int LA58_20 = input.LA(4);

                        if ( (LA58_20==19) ) {
                            int LA58_29 = input.LA(5);

                            if ( (LA58_29==NCNAME) ) {
                                int LA58_41 = input.LA(6);

                                if ( (LA58_41==25) ) {
                                    int LA58_48 = input.LA(7);

                                    if ( (LA58_48==NCNAME) ) {
                                        int LA58_54 = input.LA(8);

                                        if ( (LA58_54==34) ) {
                                            int LA58_49 = input.LA(9);

                                            if ( (LA58_49==16) ) {
                                                int LA58_30 = input.LA(10);

                                                if ( (synpred130_Xpath2()) ) {
                                                    alt58=12;
                                                }
                                                else if ( (synpred131_Xpath2()) ) {
                                                    alt58=13;
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 58, 30, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 49, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 54, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 48, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA58_41==34) ) {
                                    int LA58_49 = input.LA(7);

                                    if ( (LA58_49==16) ) {
                                        int LA58_30 = input.LA(8);

                                        if ( (synpred130_Xpath2()) ) {
                                            alt58=12;
                                        }
                                        else if ( (synpred131_Xpath2()) ) {
                                            alt58=13;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 30, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 49, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 58, 41, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 29, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA58_20==16) ) {
                            int LA58_30 = input.LA(5);

                            if ( (synpred130_Xpath2()) ) {
                                alt58=12;
                            }
                            else if ( (synpred131_Xpath2()) ) {
                                alt58=13;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 30, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 58, 20, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        switch ( input.LA(4) ) {
                        case 25:
                            {
                            int LA58_31 = input.LA(5);

                            if ( (LA58_31==NCNAME) ) {
                                int LA58_43 = input.LA(6);

                                if ( (LA58_43==19) ) {
                                    int LA58_32 = input.LA(7);

                                    if ( (LA58_32==NCNAME) ) {
                                        int LA58_44 = input.LA(8);

                                        if ( (LA58_44==25) ) {
                                            int LA58_50 = input.LA(9);

                                            if ( (LA58_50==NCNAME) ) {
                                                int LA58_55 = input.LA(10);

                                                if ( (LA58_55==34) ) {
                                                    int LA58_51 = input.LA(11);

                                                    if ( (LA58_51==16) ) {
                                                        int LA58_33 = input.LA(12);

                                                        if ( (synpred130_Xpath2()) ) {
                                                            alt58=12;
                                                        }
                                                        else if ( (synpred132_Xpath2()) ) {
                                                            alt58=14;
                                                        }
                                                        else {
                                                            if (state.backtracking>0) {state.failed=true; return element;}
                                                            NoViableAltException nvae =
                                                                new NoViableAltException("", 58, 33, input);

                                                            throw nvae;

                                                        }
                                                    }
                                                    else {
                                                        if (state.backtracking>0) {state.failed=true; return element;}
                                                        NoViableAltException nvae =
                                                            new NoViableAltException("", 58, 51, input);

                                                        throw nvae;

                                                    }
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 58, 55, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 50, input);

                                                throw nvae;

                                            }
                                        }
                                        else if ( (LA58_44==34) ) {
                                            int LA58_51 = input.LA(9);

                                            if ( (LA58_51==16) ) {
                                                int LA58_33 = input.LA(10);

                                                if ( (synpred130_Xpath2()) ) {
                                                    alt58=12;
                                                }
                                                else if ( (synpred132_Xpath2()) ) {
                                                    alt58=14;
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 58, 33, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 51, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 44, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 32, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA58_43==16) ) {
                                    int LA58_33 = input.LA(7);

                                    if ( (synpred130_Xpath2()) ) {
                                        alt58=12;
                                    }
                                    else if ( (synpred132_Xpath2()) ) {
                                        alt58=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 58, 43, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 31, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 19:
                            {
                            int LA58_32 = input.LA(5);

                            if ( (LA58_32==NCNAME) ) {
                                int LA58_44 = input.LA(6);

                                if ( (LA58_44==25) ) {
                                    int LA58_50 = input.LA(7);

                                    if ( (LA58_50==NCNAME) ) {
                                        int LA58_55 = input.LA(8);

                                        if ( (LA58_55==34) ) {
                                            int LA58_51 = input.LA(9);

                                            if ( (LA58_51==16) ) {
                                                int LA58_33 = input.LA(10);

                                                if ( (synpred130_Xpath2()) ) {
                                                    alt58=12;
                                                }
                                                else if ( (synpred132_Xpath2()) ) {
                                                    alt58=14;
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 58, 33, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 58, 51, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 55, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 50, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA58_44==34) ) {
                                    int LA58_51 = input.LA(7);

                                    if ( (LA58_51==16) ) {
                                        int LA58_33 = input.LA(8);

                                        if ( (synpred130_Xpath2()) ) {
                                            alt58=12;
                                        }
                                        else if ( (synpred132_Xpath2()) ) {
                                            alt58=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 58, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 58, 51, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 58, 44, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 32, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 16:
                            {
                            int LA58_33 = input.LA(5);

                            if ( (synpred130_Xpath2()) ) {
                                alt58=12;
                            }
                            else if ( (synpred132_Xpath2()) ) {
                                alt58=14;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 58, 33, input);

                                throw nvae;

                            }
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 58, 21, input);

                            throw nvae;

                        }

                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 58, 12, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 58, 8, input);

                    throw nvae;

                }
                }
                break;
            case 84:
                {
                alt58=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;

            }

            switch (alt58) {
                case 1 :
                    // Xpath2.g:8445:2: c0= parse_org_emftext_language_xpath2_AnyKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyKindTest_in_parse_org_emftext_language_xpath2_KindTest7401);
                    c0=parse_org_emftext_language_xpath2_AnyKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8446:4: c1= parse_org_emftext_language_xpath2_DocumentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DocumentTest_in_parse_org_emftext_language_xpath2_KindTest7411);
                    c1=parse_org_emftext_language_xpath2_DocumentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8447:4: c2= parse_org_emftext_language_xpath2_TextTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TextTest_in_parse_org_emftext_language_xpath2_KindTest7421);
                    c2=parse_org_emftext_language_xpath2_TextTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:8448:4: c3= parse_org_emftext_language_xpath2_CommentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CommentTest_in_parse_org_emftext_language_xpath2_KindTest7431);
                    c3=parse_org_emftext_language_xpath2_CommentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:8449:4: c4= parse_org_emftext_language_xpath2_PITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PITest_in_parse_org_emftext_language_xpath2_KindTest7441);
                    c4=parse_org_emftext_language_xpath2_PITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:8450:4: c5= parse_org_emftext_language_xpath2_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_KindTest7451);
                    c5=parse_org_emftext_language_xpath2_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:8451:4: c6= parse_org_emftext_language_xpath2_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_KindTest7461);
                    c6=parse_org_emftext_language_xpath2_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:8452:4: c7= parse_org_emftext_language_xpath2_AttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_parse_org_emftext_language_xpath2_KindTest7471);
                    c7=parse_org_emftext_language_xpath2_AttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:8453:4: c8= parse_org_emftext_language_xpath2_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_KindTest7481);
                    c8=parse_org_emftext_language_xpath2_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:8454:4: c9= parse_org_emftext_language_xpath2_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_KindTest7491);
                    c9=parse_org_emftext_language_xpath2_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:8455:4: c10= parse_org_emftext_language_xpath2_SchemaAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaAttributeTest_in_parse_org_emftext_language_xpath2_KindTest7501);
                    c10=parse_org_emftext_language_xpath2_SchemaAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath2.g:8456:4: c11= parse_org_emftext_language_xpath2_ElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_KindTest7511);
                    c11=parse_org_emftext_language_xpath2_ElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath2.g:8457:4: c12= parse_org_emftext_language_xpath2_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_KindTest7521);
                    c12=parse_org_emftext_language_xpath2_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath2.g:8458:4: c13= parse_org_emftext_language_xpath2_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_KindTest7531);
                    c13=parse_org_emftext_language_xpath2_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath2.g:8459:4: c14= parse_org_emftext_language_xpath2_SchemaElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_KindTest7541);
                    c14=parse_org_emftext_language_xpath2_SchemaElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 80, parse_org_emftext_language_xpath2_KindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_KindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_PrimaryExpr"
    // Xpath2.g:8463:1: parse_org_emftext_language_xpath2_PrimaryExpr returns [org.emftext.language.xpath2.PrimaryExpr element = null] : (c0= parse_org_emftext_language_xpath2_VarRef |c1= parse_org_emftext_language_xpath2_ParenthesizedExpr |c2= parse_org_emftext_language_xpath2_ContextItemExpr |c3= parse_org_emftext_language_xpath2_FunctionCall |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral );
    public final org.emftext.language.xpath2.PrimaryExpr parse_org_emftext_language_xpath2_PrimaryExpr() throws RecognitionException {
        org.emftext.language.xpath2.PrimaryExpr element =  null;

        int parse_org_emftext_language_xpath2_PrimaryExpr_StartIndex = input.index();

        org.emftext.language.xpath2.VarRef c0 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c1 =null;

        org.emftext.language.xpath2.ContextItemExpr c2 =null;

        org.emftext.language.xpath2.FunctionCall c3 =null;

        org.emftext.language.xpath2.IntegerLiteral c4 =null;

        org.emftext.language.xpath2.DecimalLiteral c5 =null;

        org.emftext.language.xpath2.DoubleLiteral c6 =null;

        org.emftext.language.xpath2.StringLiteral c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return element; }

            // Xpath2.g:8464:2: (c0= parse_org_emftext_language_xpath2_VarRef |c1= parse_org_emftext_language_xpath2_ParenthesizedExpr |c2= parse_org_emftext_language_xpath2_ContextItemExpr |c3= parse_org_emftext_language_xpath2_FunctionCall |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral )
            int alt59=8;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt59=1;
                }
                break;
            case 15:
                {
                alt59=2;
                }
                break;
            case 21:
                {
                alt59=3;
                }
                break;
            case NCNAME:
                {
                alt59=4;
                }
                break;
            case INTEGER_LITERAL:
                {
                alt59=5;
                }
                break;
            case DECIMAL_LITERAL:
                {
                alt59=6;
                }
                break;
            case DOUBLE_LITERAL:
                {
                alt59=7;
                }
                break;
            case STRING_LITERAL:
                {
                alt59=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }

            switch (alt59) {
                case 1 :
                    // Xpath2.g:8465:2: c0= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PrimaryExpr7562);
                    c0=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8466:4: c1= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr7572);
                    c1=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8467:4: c2= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr7582);
                    c2=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:8468:4: c3= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PrimaryExpr7592);
                    c3=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:8469:4: c4= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7602);
                    c4=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:8470:4: c5= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7612);
                    c5=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:8471:4: c6= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7622);
                    c6=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:8472:4: c7= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7632);
                    c7=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 81, parse_org_emftext_language_xpath2_PrimaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PrimaryExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemType"
    // Xpath2.g:8476:1: parse_org_emftext_language_xpath2_ItemType returns [org.emftext.language.xpath2.ItemType element = null] : (c0= parse_org_emftext_language_xpath2_ItemKindTest |c1= parse_org_emftext_language_xpath2_AnyItemType |c2= parse_org_emftext_language_xpath2_AtomicItemType );
    public final org.emftext.language.xpath2.ItemType parse_org_emftext_language_xpath2_ItemType() throws RecognitionException {
        org.emftext.language.xpath2.ItemType element =  null;

        int parse_org_emftext_language_xpath2_ItemType_StartIndex = input.index();

        org.emftext.language.xpath2.ItemKindTest c0 =null;

        org.emftext.language.xpath2.AnyItemType c1 =null;

        org.emftext.language.xpath2.AtomicItemType c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return element; }

            // Xpath2.g:8477:2: (c0= parse_org_emftext_language_xpath2_ItemKindTest |c1= parse_org_emftext_language_xpath2_AnyItemType |c2= parse_org_emftext_language_xpath2_AtomicItemType )
            int alt60=3;
            switch ( input.LA(1) ) {
            case 42:
            case 46:
            case 50:
            case 51:
            case 74:
            case 80:
            case 83:
            case 84:
            case 87:
                {
                alt60=1;
                }
                break;
            case 68:
                {
                alt60=2;
                }
                break;
            case NCNAME:
                {
                alt60=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;

            }

            switch (alt60) {
                case 1 :
                    // Xpath2.g:8478:2: c0= parse_org_emftext_language_xpath2_ItemKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemKindTest_in_parse_org_emftext_language_xpath2_ItemType7653);
                    c0=parse_org_emftext_language_xpath2_ItemKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8479:4: c1= parse_org_emftext_language_xpath2_AnyItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyItemType_in_parse_org_emftext_language_xpath2_ItemType7663);
                    c1=parse_org_emftext_language_xpath2_AnyItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8480:4: c2= parse_org_emftext_language_xpath2_AtomicItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicItemType_in_parse_org_emftext_language_xpath2_ItemType7673);
                    c2=parse_org_emftext_language_xpath2_AtomicItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 82, parse_org_emftext_language_xpath2_ItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemType"



    // $ANTLR start "parse_org_emftext_language_xpath2_PathExprChild"
    // Xpath2.g:8484:1: parse_org_emftext_language_xpath2_PathExprChild returns [org.emftext.language.xpath2.PathExprChild element = null] : (c0= parse_org_emftext_language_xpath2_ChildStepExpr |c1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr |c2= parse_org_emftext_language_xpath2_RootStepExpr |c3= parse_org_emftext_language_xpath2_SelfStepExpr |c4= parse_org_emftext_language_xpath2_AxisStep |c5= parse_org_emftext_language_xpath2_FilterExpr );
    public final org.emftext.language.xpath2.PathExprChild parse_org_emftext_language_xpath2_PathExprChild() throws RecognitionException {
        org.emftext.language.xpath2.PathExprChild element =  null;

        int parse_org_emftext_language_xpath2_PathExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.ChildStepExpr c0 =null;

        org.emftext.language.xpath2.DescOrSelfStepExpr c1 =null;

        org.emftext.language.xpath2.RootStepExpr c2 =null;

        org.emftext.language.xpath2.SelfStepExpr c3 =null;

        org.emftext.language.xpath2.AxisStep c4 =null;

        org.emftext.language.xpath2.FilterExpr c5 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return element; }

            // Xpath2.g:8485:2: (c0= parse_org_emftext_language_xpath2_ChildStepExpr |c1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr |c2= parse_org_emftext_language_xpath2_RootStepExpr |c3= parse_org_emftext_language_xpath2_SelfStepExpr |c4= parse_org_emftext_language_xpath2_AxisStep |c5= parse_org_emftext_language_xpath2_FilterExpr )
            int alt61=6;
            switch ( input.LA(1) ) {
            case 23:
                {
                int LA61_1 = input.LA(2);

                if ( (synpred142_Xpath2()) ) {
                    alt61=1;
                }
                else if ( (synpred144_Xpath2()) ) {
                    alt61=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 1, input);

                    throw nvae;

                }
                }
                break;
            case 24:
                {
                alt61=2;
                }
                break;
            case 45:
                {
                int LA61_3 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 3, input);

                    throw nvae;

                }
                }
                break;
            case 47:
                {
                int LA61_4 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 4, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                int LA61_5 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 5, input);

                    throw nvae;

                }
                }
                break;
            case 85:
                {
                int LA61_6 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 6, input);

                    throw nvae;

                }
                }
                break;
            case 48:
                {
                int LA61_7 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 7, input);

                    throw nvae;

                }
                }
                break;
            case 58:
                {
                int LA61_8 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 8, input);

                    throw nvae;

                }
                }
                break;
            case 57:
                {
                int LA61_9 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 9, input);

                    throw nvae;

                }
                }
                break;
            case 72:
                {
                int LA61_10 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 10, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA61_11 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 11, input);

                    throw nvae;

                }
                }
                break;
            case 74:
                {
                int LA61_12 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 12, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA61_13 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 13, input);

                    throw nvae;

                }
                }
                break;
            case 87:
                {
                int LA61_14 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 14, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA61_15 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 15, input);

                    throw nvae;

                }
                }
                break;
            case 80:
                {
                int LA61_16 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 16, input);

                    throw nvae;

                }
                }
                break;
            case 83:
                {
                int LA61_17 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 17, input);

                    throw nvae;

                }
                }
                break;
            case 51:
                {
                int LA61_18 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 18, input);

                    throw nvae;

                }
                }
                break;
            case 84:
                {
                int LA61_19 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 19, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA61_20 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 20, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA61_21 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 21, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                int LA61_22 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 22, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA61_23 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 23, input);

                    throw nvae;

                }
                }
                break;
            case 38:
                {
                int LA61_24 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 24, input);

                    throw nvae;

                }
                }
                break;
            case 79:
                {
                int LA61_25 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 25, input);

                    throw nvae;

                }
                }
                break;
            case 78:
                {
                int LA61_26 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 26, input);

                    throw nvae;

                }
                }
                break;
            case 39:
                {
                int LA61_27 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 27, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA61_28 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (synpred146_Xpath2()) ) {
                    alt61=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 28, input);

                    throw nvae;

                }
                }
                break;
            case 14:
                {
                int LA61_29 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 29, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA61_30 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 30, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA61_31 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 31, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA61_32 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 32, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA61_33 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 33, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA61_34 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 34, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA61_35 = input.LA(2);

                if ( (synpred145_Xpath2()) ) {
                    alt61=4;
                }
                else if ( (true) ) {
                    alt61=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 35, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;

            }

            switch (alt61) {
                case 1 :
                    // Xpath2.g:8486:2: c0= parse_org_emftext_language_xpath2_ChildStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7694);
                    c0=parse_org_emftext_language_xpath2_ChildStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:8487:4: c1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7704);
                    c1=parse_org_emftext_language_xpath2_DescOrSelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8488:4: c2= parse_org_emftext_language_xpath2_RootStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7714);
                    c2=parse_org_emftext_language_xpath2_RootStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:8489:4: c3= parse_org_emftext_language_xpath2_SelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7724);
                    c3=parse_org_emftext_language_xpath2_SelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:8490:4: c4= parse_org_emftext_language_xpath2_AxisStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_PathExprChild7734);
                    c4=parse_org_emftext_language_xpath2_AxisStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:8491:4: c5= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_PathExprChild7744);
                    c5=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 83, parse_org_emftext_language_xpath2_PathExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PathExprChild"

    // $ANTLR start synpred57_Xpath2
    public final void synpred57_Xpath2_fragment() throws RecognitionException {
        Token a2=null;

        // Xpath2.g:5928:8: (a2= '*' )
        // Xpath2.g:5928:8: a2= '*'
        {
        a2=(Token)match(input,17,FOLLOW_17_in_synpred57_Xpath24629); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred57_Xpath2

    // $ANTLR start synpred58_Xpath2
    public final void synpred58_Xpath2_fragment() throws RecognitionException {
        Token a3=null;

        // Xpath2.g:5944:8: (a3= '+' )
        // Xpath2.g:5944:8: a3= '+'
        {
        a3=(Token)match(input,18,FOLLOW_18_in_synpred58_Xpath24644); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred58_Xpath2

    // $ANTLR start synpred72_Xpath2
    public final void synpred72_Xpath2_fragment() throws RecognitionException {
        Token a0=null;
        Token a1=null;
        Token a2=null;

        // Xpath2.g:8096:2: ( ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME ) )
        // Xpath2.g:8096:2: ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME )
        {
        // Xpath2.g:8096:2: ( ( (a0= NCNAME ) a1= ':' ) )?
        int alt69=2;
        int LA69_0 = input.LA(1);

        if ( (LA69_0==NCNAME) ) {
            int LA69_1 = input.LA(2);

            if ( (LA69_1==25) ) {
                alt69=1;
            }
        }
        switch (alt69) {
            case 1 :
                // Xpath2.g:8097:3: ( (a0= NCNAME ) a1= ':' )
                {
                // Xpath2.g:8097:3: ( (a0= NCNAME ) a1= ':' )
                // Xpath2.g:8098:4: (a0= NCNAME ) a1= ':'
                {
                // Xpath2.g:8098:4: (a0= NCNAME )
                // Xpath2.g:8099:5: a0= NCNAME
                {
                a0=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_synpred72_Xpath26587); if (state.failed) return ;

                }


                a1=(Token)match(input,25,FOLLOW_25_in_synpred72_Xpath26620); if (state.failed) return ;

                }


                }
                break;

        }


        // Xpath2.g:8155:2: (a2= NCNAME )
        // Xpath2.g:8156:3: a2= NCNAME
        {
        a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_synpred72_Xpath26657); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred72_Xpath2

    // $ANTLR start synpred78_Xpath2
    public final void synpred78_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.OrExpr c3 =null;


        // Xpath2.g:8356:4: (c3= parse_org_emftext_language_xpath2_OrExpr )
        // Xpath2.g:8356:4: c3= parse_org_emftext_language_xpath2_OrExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_synpred78_Xpath26823);
        c3=parse_org_emftext_language_xpath2_OrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred78_Xpath2

    // $ANTLR start synpred79_Xpath2
    public final void synpred79_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AndExpr c4 =null;


        // Xpath2.g:8357:4: (c4= parse_org_emftext_language_xpath2_AndExpr )
        // Xpath2.g:8357:4: c4= parse_org_emftext_language_xpath2_AndExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred79_Xpath26833);
        c4=parse_org_emftext_language_xpath2_AndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred79_Xpath2

    // $ANTLR start synpred80_Xpath2
    public final void synpred80_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr c5 =null;


        // Xpath2.g:8358:4: (c5= parse_org_emftext_language_xpath2_ComparisonExpr )
        // Xpath2.g:8358:4: c5= parse_org_emftext_language_xpath2_ComparisonExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred80_Xpath26843);
        c5=parse_org_emftext_language_xpath2_ComparisonExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred80_Xpath2

    // $ANTLR start synpred81_Xpath2
    public final void synpred81_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr c6 =null;


        // Xpath2.g:8359:4: (c6= parse_org_emftext_language_xpath2_RangeExpr )
        // Xpath2.g:8359:4: c6= parse_org_emftext_language_xpath2_RangeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred81_Xpath26853);
        c6=parse_org_emftext_language_xpath2_RangeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred81_Xpath2

    // $ANTLR start synpred82_Xpath2
    public final void synpred82_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr c7 =null;


        // Xpath2.g:8360:4: (c7= parse_org_emftext_language_xpath2_AdditiveExpr )
        // Xpath2.g:8360:4: c7= parse_org_emftext_language_xpath2_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred82_Xpath26863);
        c7=parse_org_emftext_language_xpath2_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred82_Xpath2

    // $ANTLR start synpred83_Xpath2
    public final void synpred83_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.MultiplicativeExpr c8 =null;


        // Xpath2.g:8361:4: (c8= parse_org_emftext_language_xpath2_MultiplicativeExpr )
        // Xpath2.g:8361:4: c8= parse_org_emftext_language_xpath2_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_synpred83_Xpath26873);
        c8=parse_org_emftext_language_xpath2_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred83_Xpath2

    // $ANTLR start synpred84_Xpath2
    public final void synpred84_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.UnionExpr c9 =null;


        // Xpath2.g:8362:4: (c9= parse_org_emftext_language_xpath2_UnionExpr )
        // Xpath2.g:8362:4: c9= parse_org_emftext_language_xpath2_UnionExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_synpred84_Xpath26883);
        c9=parse_org_emftext_language_xpath2_UnionExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred84_Xpath2

    // $ANTLR start synpred85_Xpath2
    public final void synpred85_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IntersectExceptExpr c10 =null;


        // Xpath2.g:8363:4: (c10= parse_org_emftext_language_xpath2_IntersectExceptExpr )
        // Xpath2.g:8363:4: c10= parse_org_emftext_language_xpath2_IntersectExceptExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_synpred85_Xpath26893);
        c10=parse_org_emftext_language_xpath2_IntersectExceptExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred85_Xpath2

    // $ANTLR start synpred86_Xpath2
    public final void synpred86_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.InstanceofExpr c11 =null;


        // Xpath2.g:8364:4: (c11= parse_org_emftext_language_xpath2_InstanceofExpr )
        // Xpath2.g:8364:4: c11= parse_org_emftext_language_xpath2_InstanceofExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_synpred86_Xpath26903);
        c11=parse_org_emftext_language_xpath2_InstanceofExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred86_Xpath2

    // $ANTLR start synpred87_Xpath2
    public final void synpred87_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.TreatExpr c12 =null;


        // Xpath2.g:8365:4: (c12= parse_org_emftext_language_xpath2_TreatExpr )
        // Xpath2.g:8365:4: c12= parse_org_emftext_language_xpath2_TreatExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_synpred87_Xpath26913);
        c12=parse_org_emftext_language_xpath2_TreatExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred87_Xpath2

    // $ANTLR start synpred88_Xpath2
    public final void synpred88_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.CastableExpr c13 =null;


        // Xpath2.g:8366:4: (c13= parse_org_emftext_language_xpath2_CastableExpr )
        // Xpath2.g:8366:4: c13= parse_org_emftext_language_xpath2_CastableExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_synpred88_Xpath26923);
        c13=parse_org_emftext_language_xpath2_CastableExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred88_Xpath2

    // $ANTLR start synpred89_Xpath2
    public final void synpred89_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.CastExpr c14 =null;


        // Xpath2.g:8367:4: (c14= parse_org_emftext_language_xpath2_CastExpr )
        // Xpath2.g:8367:4: c14= parse_org_emftext_language_xpath2_CastExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_synpred89_Xpath26933);
        c14=parse_org_emftext_language_xpath2_CastExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred89_Xpath2

    // $ANTLR start synpred90_Xpath2
    public final void synpred90_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.UnaryExpr c15 =null;


        // Xpath2.g:8368:4: (c15= parse_org_emftext_language_xpath2_UnaryExpr )
        // Xpath2.g:8368:4: c15= parse_org_emftext_language_xpath2_UnaryExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_synpred90_Xpath26943);
        c15=parse_org_emftext_language_xpath2_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred90_Xpath2

    // $ANTLR start synpred91_Xpath2
    public final void synpred91_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.VarRef c16 =null;


        // Xpath2.g:8369:4: (c16= parse_org_emftext_language_xpath2_VarRef )
        // Xpath2.g:8369:4: c16= parse_org_emftext_language_xpath2_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred91_Xpath26953);
        c16=parse_org_emftext_language_xpath2_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred91_Xpath2

    // $ANTLR start synpred92_Xpath2
    public final void synpred92_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr c17 =null;


        // Xpath2.g:8370:4: (c17= parse_org_emftext_language_xpath2_ParenthesizedExpr )
        // Xpath2.g:8370:4: c17= parse_org_emftext_language_xpath2_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred92_Xpath26963);
        c17=parse_org_emftext_language_xpath2_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred92_Xpath2

    // $ANTLR start synpred93_Xpath2
    public final void synpred93_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr c18 =null;


        // Xpath2.g:8371:4: (c18= parse_org_emftext_language_xpath2_ContextItemExpr )
        // Xpath2.g:8371:4: c18= parse_org_emftext_language_xpath2_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred93_Xpath26973);
        c18=parse_org_emftext_language_xpath2_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred93_Xpath2

    // $ANTLR start synpred94_Xpath2
    public final void synpred94_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall c19 =null;


        // Xpath2.g:8372:4: (c19= parse_org_emftext_language_xpath2_FunctionCall )
        // Xpath2.g:8372:4: c19= parse_org_emftext_language_xpath2_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred94_Xpath26983);
        c19=parse_org_emftext_language_xpath2_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred94_Xpath2

    // $ANTLR start synpred95_Xpath2
    public final void synpred95_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral c20 =null;


        // Xpath2.g:8373:4: (c20= parse_org_emftext_language_xpath2_IntegerLiteral )
        // Xpath2.g:8373:4: c20= parse_org_emftext_language_xpath2_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred95_Xpath26993);
        c20=parse_org_emftext_language_xpath2_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred95_Xpath2

    // $ANTLR start synpred96_Xpath2
    public final void synpred96_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral c21 =null;


        // Xpath2.g:8374:4: (c21= parse_org_emftext_language_xpath2_DecimalLiteral )
        // Xpath2.g:8374:4: c21= parse_org_emftext_language_xpath2_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred96_Xpath27003);
        c21=parse_org_emftext_language_xpath2_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred96_Xpath2

    // $ANTLR start synpred97_Xpath2
    public final void synpred97_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral c22 =null;


        // Xpath2.g:8375:4: (c22= parse_org_emftext_language_xpath2_DoubleLiteral )
        // Xpath2.g:8375:4: c22= parse_org_emftext_language_xpath2_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred97_Xpath27013);
        c22=parse_org_emftext_language_xpath2_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred97_Xpath2

    // $ANTLR start synpred98_Xpath2
    public final void synpred98_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteral c23 =null;


        // Xpath2.g:8376:4: (c23= parse_org_emftext_language_xpath2_StringLiteral )
        // Xpath2.g:8376:4: c23= parse_org_emftext_language_xpath2_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_synpred98_Xpath27023);
        c23=parse_org_emftext_language_xpath2_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred98_Xpath2

    // $ANTLR start synpred102_Xpath2
    public final void synpred102_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.VarRef c0 =null;


        // Xpath2.g:8398:2: (c0= parse_org_emftext_language_xpath2_VarRef )
        // Xpath2.g:8398:2: c0= parse_org_emftext_language_xpath2_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred102_Xpath27126);
        c0=parse_org_emftext_language_xpath2_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred102_Xpath2

    // $ANTLR start synpred103_Xpath2
    public final void synpred103_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr c1 =null;


        // Xpath2.g:8399:4: (c1= parse_org_emftext_language_xpath2_ParenthesizedExpr )
        // Xpath2.g:8399:4: c1= parse_org_emftext_language_xpath2_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred103_Xpath27136);
        c1=parse_org_emftext_language_xpath2_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred103_Xpath2

    // $ANTLR start synpred104_Xpath2
    public final void synpred104_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr c2 =null;


        // Xpath2.g:8400:4: (c2= parse_org_emftext_language_xpath2_ContextItemExpr )
        // Xpath2.g:8400:4: c2= parse_org_emftext_language_xpath2_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred104_Xpath27146);
        c2=parse_org_emftext_language_xpath2_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred104_Xpath2

    // $ANTLR start synpred105_Xpath2
    public final void synpred105_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall c3 =null;


        // Xpath2.g:8401:4: (c3= parse_org_emftext_language_xpath2_FunctionCall )
        // Xpath2.g:8401:4: c3= parse_org_emftext_language_xpath2_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred105_Xpath27156);
        c3=parse_org_emftext_language_xpath2_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred105_Xpath2

    // $ANTLR start synpred106_Xpath2
    public final void synpred106_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral c4 =null;


        // Xpath2.g:8402:4: (c4= parse_org_emftext_language_xpath2_IntegerLiteral )
        // Xpath2.g:8402:4: c4= parse_org_emftext_language_xpath2_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred106_Xpath27166);
        c4=parse_org_emftext_language_xpath2_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred106_Xpath2

    // $ANTLR start synpred107_Xpath2
    public final void synpred107_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral c5 =null;


        // Xpath2.g:8403:4: (c5= parse_org_emftext_language_xpath2_DecimalLiteral )
        // Xpath2.g:8403:4: c5= parse_org_emftext_language_xpath2_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred107_Xpath27176);
        c5=parse_org_emftext_language_xpath2_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_Xpath2

    // $ANTLR start synpred108_Xpath2
    public final void synpred108_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral c6 =null;


        // Xpath2.g:8404:4: (c6= parse_org_emftext_language_xpath2_DoubleLiteral )
        // Xpath2.g:8404:4: c6= parse_org_emftext_language_xpath2_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred108_Xpath27186);
        c6=parse_org_emftext_language_xpath2_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred108_Xpath2

    // $ANTLR start synpred109_Xpath2
    public final void synpred109_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteral c7 =null;


        // Xpath2.g:8405:4: (c7= parse_org_emftext_language_xpath2_StringLiteral )
        // Xpath2.g:8405:4: c7= parse_org_emftext_language_xpath2_StringLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_synpred109_Xpath27196);
        c7=parse_org_emftext_language_xpath2_StringLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred109_Xpath2

    // $ANTLR start synpred123_Xpath2
    public final void synpred123_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.PITest c4 =null;


        // Xpath2.g:8449:4: (c4= parse_org_emftext_language_xpath2_PITest )
        // Xpath2.g:8449:4: c4= parse_org_emftext_language_xpath2_PITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PITest_in_synpred123_Xpath27441);
        c4=parse_org_emftext_language_xpath2_PITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred123_Xpath2

    // $ANTLR start synpred124_Xpath2
    public final void synpred124_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NCNamePITest c5 =null;


        // Xpath2.g:8450:4: (c5= parse_org_emftext_language_xpath2_NCNamePITest )
        // Xpath2.g:8450:4: c5= parse_org_emftext_language_xpath2_NCNamePITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_synpred124_Xpath27451);
        c5=parse_org_emftext_language_xpath2_NCNamePITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred124_Xpath2

    // $ANTLR start synpred125_Xpath2
    public final void synpred125_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteralPITest c6 =null;


        // Xpath2.g:8451:4: (c6= parse_org_emftext_language_xpath2_StringLiteralPITest )
        // Xpath2.g:8451:4: c6= parse_org_emftext_language_xpath2_StringLiteralPITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_synpred125_Xpath27461);
        c6=parse_org_emftext_language_xpath2_StringLiteralPITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred125_Xpath2

    // $ANTLR start synpred126_Xpath2
    public final void synpred126_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AttributeTest c7 =null;


        // Xpath2.g:8452:4: (c7= parse_org_emftext_language_xpath2_AttributeTest )
        // Xpath2.g:8452:4: c7= parse_org_emftext_language_xpath2_AttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_synpred126_Xpath27471);
        c7=parse_org_emftext_language_xpath2_AttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred126_Xpath2

    // $ANTLR start synpred127_Xpath2
    public final void synpred127_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.WildcardAttributeTest c8 =null;


        // Xpath2.g:8453:4: (c8= parse_org_emftext_language_xpath2_WildcardAttributeTest )
        // Xpath2.g:8453:4: c8= parse_org_emftext_language_xpath2_WildcardAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_synpred127_Xpath27481);
        c8=parse_org_emftext_language_xpath2_WildcardAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred127_Xpath2

    // $ANTLR start synpred128_Xpath2
    public final void synpred128_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NameAttributeTest c9 =null;


        // Xpath2.g:8454:4: (c9= parse_org_emftext_language_xpath2_NameAttributeTest )
        // Xpath2.g:8454:4: c9= parse_org_emftext_language_xpath2_NameAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_synpred128_Xpath27491);
        c9=parse_org_emftext_language_xpath2_NameAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred128_Xpath2

    // $ANTLR start synpred130_Xpath2
    public final void synpred130_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ElementTest c11 =null;


        // Xpath2.g:8456:4: (c11= parse_org_emftext_language_xpath2_ElementTest )
        // Xpath2.g:8456:4: c11= parse_org_emftext_language_xpath2_ElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_synpred130_Xpath27511);
        c11=parse_org_emftext_language_xpath2_ElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xpath2

    // $ANTLR start synpred131_Xpath2
    public final void synpred131_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.WildcardElementTest c12 =null;


        // Xpath2.g:8457:4: (c12= parse_org_emftext_language_xpath2_WildcardElementTest )
        // Xpath2.g:8457:4: c12= parse_org_emftext_language_xpath2_WildcardElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_synpred131_Xpath27521);
        c12=parse_org_emftext_language_xpath2_WildcardElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred131_Xpath2

    // $ANTLR start synpred132_Xpath2
    public final void synpred132_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NameElementTest c13 =null;


        // Xpath2.g:8458:4: (c13= parse_org_emftext_language_xpath2_NameElementTest )
        // Xpath2.g:8458:4: c13= parse_org_emftext_language_xpath2_NameElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_synpred132_Xpath27531);
        c13=parse_org_emftext_language_xpath2_NameElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred132_Xpath2

    // $ANTLR start synpred142_Xpath2
    public final void synpred142_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ChildStepExpr c0 =null;


        // Xpath2.g:8486:2: (c0= parse_org_emftext_language_xpath2_ChildStepExpr )
        // Xpath2.g:8486:2: c0= parse_org_emftext_language_xpath2_ChildStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_synpred142_Xpath27694);
        c0=parse_org_emftext_language_xpath2_ChildStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred142_Xpath2

    // $ANTLR start synpred144_Xpath2
    public final void synpred144_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RootStepExpr c2 =null;


        // Xpath2.g:8488:4: (c2= parse_org_emftext_language_xpath2_RootStepExpr )
        // Xpath2.g:8488:4: c2= parse_org_emftext_language_xpath2_RootStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_synpred144_Xpath27714);
        c2=parse_org_emftext_language_xpath2_RootStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred144_Xpath2

    // $ANTLR start synpred145_Xpath2
    public final void synpred145_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SelfStepExpr c3 =null;


        // Xpath2.g:8489:4: (c3= parse_org_emftext_language_xpath2_SelfStepExpr )
        // Xpath2.g:8489:4: c3= parse_org_emftext_language_xpath2_SelfStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_synpred145_Xpath27724);
        c3=parse_org_emftext_language_xpath2_SelfStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred145_Xpath2

    // $ANTLR start synpred146_Xpath2
    public final void synpred146_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AxisStep c4 =null;


        // Xpath2.g:8490:4: (c4= parse_org_emftext_language_xpath2_AxisStep )
        // Xpath2.g:8490:4: c4= parse_org_emftext_language_xpath2_AxisStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_synpred146_Xpath27734);
        c4=parse_org_emftext_language_xpath2_AxisStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred146_Xpath2

    // Delegated rules

    public final boolean synpred80_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA50 dfa50 = new DFA50(this);
    static final String DFA50_eotS =
        "\100\uffff";
    static final String DFA50_eofS =
        "\100\uffff";
    static final String DFA50_minS =
        "\1\5\4\uffff\45\0\26\uffff";
    static final String DFA50_maxS =
        "\1\127\4\uffff\45\0\26\uffff";
    static final String DFA50_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\3\45\uffff\1\4\1\5\1\6\1\7\1\10\1\11"+
        "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\31\1\22\1\23\1\24\1\25"+
        "\1\26\1\27\1\30";
    static final String DFA50_specialS =
        "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
        "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
        "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\26\uffff}>";
    static final String[] DFA50_transitionS = {
            "\1\14\1\15\1\13\1\uffff\1\12\1\16\1\43\2\uffff\1\7\1\10\1\uffff"+
            "\1\42\1\5\1\uffff\1\6\1\11\1\51\1\17\1\20\12\uffff\1\31\2\uffff"+
            "\1\45\1\50\2\uffff\1\23\2\uffff\1\21\1\35\1\22\1\25\1\uffff"+
            "\1\33\1\40\3\uffff\1\2\1\uffff\1\27\1\26\1\1\3\uffff\1\4\10"+
            "\uffff\1\30\1\uffff\1\32\2\uffff\1\44\1\47\1\46\1\36\2\uffff"+
            "\1\37\1\41\1\24\1\2\1\34",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
    static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
    static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
    static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
    static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
    static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
    static final short[][] DFA50_transition;

    static {
        int numStates = DFA50_transitionS.length;
        DFA50_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
        }
    }

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = DFA50_eot;
            this.eof = DFA50_eof;
            this.min = DFA50_min;
            this.max = DFA50_max;
            this.accept = DFA50_accept;
            this.special = DFA50_special;
            this.transition = DFA50_transition;
        }
        public String getDescription() {
            return "8351:1: parse_org_emftext_language_xpath2_ExprSingle returns [org.emftext.language.xpath2.ExprSingle element = null] : (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_MultiplicativeExpr |c9= parse_org_emftext_language_xpath2_UnionExpr |c10= parse_org_emftext_language_xpath2_IntersectExceptExpr |c11= parse_org_emftext_language_xpath2_InstanceofExpr |c12= parse_org_emftext_language_xpath2_TreatExpr |c13= parse_org_emftext_language_xpath2_CastableExpr |c14= parse_org_emftext_language_xpath2_CastExpr |c15= parse_org_emftext_language_xpath2_UnaryExpr |c16= parse_org_emftext_language_xpath2_VarRef |c17= parse_org_emftext_language_xpath2_ParenthesizedExpr |c18= parse_org_emftext_language_xpath2_ContextItemExpr |c19= parse_org_emftext_language_xpath2_FunctionCall |c20= parse_org_emftext_language_xpath2_IntegerLiteral |c21= parse_org_emftext_language_xpath2_DecimalLiteral |c22= parse_org_emftext_language_xpath2_DoubleLiteral |c23= parse_org_emftext_language_xpath2_StringLiteral |c24= parse_org_emftext_language_xpath2_PathExpr );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_5 = input.LA(1);

                         
                        int index50_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                         
                        input.seek(index50_5);

                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA50_6 = input.LA(1);

                         
                        int index50_6 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                         
                        input.seek(index50_6);

                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA50_7 = input.LA(1);

                         
                        int index50_7 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred91_Xpath2()) ) {s = 55;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_7);

                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA50_8 = input.LA(1);

                         
                        int index50_8 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred92_Xpath2()) ) {s = 57;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_8);

                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA50_9 = input.LA(1);

                         
                        int index50_9 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred93_Xpath2()) ) {s = 58;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_9);

                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA50_10 = input.LA(1);

                         
                        int index50_10 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred94_Xpath2()) ) {s = 59;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_10);

                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA50_11 = input.LA(1);

                         
                        int index50_11 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred95_Xpath2()) ) {s = 60;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_11);

                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA50_12 = input.LA(1);

                         
                        int index50_12 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred96_Xpath2()) ) {s = 61;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_12);

                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA50_13 = input.LA(1);

                         
                        int index50_13 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred97_Xpath2()) ) {s = 62;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_13);

                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA50_14 = input.LA(1);

                         
                        int index50_14 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (synpred98_Xpath2()) ) {s = 63;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_14);

                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA50_15 = input.LA(1);

                         
                        int index50_15 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_15);

                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA50_16 = input.LA(1);

                         
                        int index50_16 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_16);

                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA50_17 = input.LA(1);

                         
                        int index50_17 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_17);

                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA50_18 = input.LA(1);

                         
                        int index50_18 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_18);

                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA50_19 = input.LA(1);

                         
                        int index50_19 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_19);

                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA50_20 = input.LA(1);

                         
                        int index50_20 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_20);

                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA50_21 = input.LA(1);

                         
                        int index50_21 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_21);

                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA50_22 = input.LA(1);

                         
                        int index50_22 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_22);

                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA50_23 = input.LA(1);

                         
                        int index50_23 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_23);

                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA50_24 = input.LA(1);

                         
                        int index50_24 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_24);

                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA50_25 = input.LA(1);

                         
                        int index50_25 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_25);

                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA50_26 = input.LA(1);

                         
                        int index50_26 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_26);

                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA50_27 = input.LA(1);

                         
                        int index50_27 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_27);

                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA50_28 = input.LA(1);

                         
                        int index50_28 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_28);

                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA50_29 = input.LA(1);

                         
                        int index50_29 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_29);

                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA50_30 = input.LA(1);

                         
                        int index50_30 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_30);

                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA50_31 = input.LA(1);

                         
                        int index50_31 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_31);

                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA50_32 = input.LA(1);

                         
                        int index50_32 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_32);

                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA50_33 = input.LA(1);

                         
                        int index50_33 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_33);

                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA50_34 = input.LA(1);

                         
                        int index50_34 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_34);

                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA50_35 = input.LA(1);

                         
                        int index50_35 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_35);

                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA50_36 = input.LA(1);

                         
                        int index50_36 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_36);

                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA50_37 = input.LA(1);

                         
                        int index50_37 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_37);

                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA50_38 = input.LA(1);

                         
                        int index50_38 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_38);

                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA50_39 = input.LA(1);

                         
                        int index50_39 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_39);

                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA50_40 = input.LA(1);

                         
                        int index50_40 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_40);

                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA50_41 = input.LA(1);

                         
                        int index50_41 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred78_Xpath2()) ) {s = 42;}

                        else if ( (synpred79_Xpath2()) ) {s = 43;}

                        else if ( (synpred80_Xpath2()) ) {s = 44;}

                        else if ( (synpred81_Xpath2()) ) {s = 45;}

                        else if ( (synpred82_Xpath2()) ) {s = 46;}

                        else if ( (synpred83_Xpath2()) ) {s = 47;}

                        else if ( (synpred84_Xpath2()) ) {s = 48;}

                        else if ( (synpred85_Xpath2()) ) {s = 49;}

                        else if ( (synpred86_Xpath2()) ) {s = 50;}

                        else if ( (synpred87_Xpath2()) ) {s = 51;}

                        else if ( (synpred88_Xpath2()) ) {s = 52;}

                        else if ( (synpred89_Xpath2()) ) {s = 53;}

                        else if ( (synpred90_Xpath2()) ) {s = 54;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index50_41);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr119 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_Expr146 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr172 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_59_in_parse_org_emftext_language_xpath2_ForExpr228 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr246 = new BitSet(new long[]{0x0000000000080000L,0x0000000000020000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_ForExpr273 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr299 = new BitSet(new long[]{0x0000000000080000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_parse_org_emftext_language_xpath2_ForExpr340 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_ForExpr358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_parse_org_emftext_language_xpath2_QuantifiedExpr400 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_55_in_parse_org_emftext_language_xpath2_QuantifiedExpr415 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr440 = new BitSet(new long[]{0x0000000000080000L,0x0000000000040000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_QuantifiedExpr467 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr493 = new BitSet(new long[]{0x0000000000080000L,0x0000000000040000L});
    public static final BitSet FOLLOW_82_in_parse_org_emftext_language_xpath2_QuantifiedExpr534 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_QuantifiedExpr552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_Iterator585 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_Iterator603 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_parse_org_emftext_language_xpath2_Iterator621 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Iterator639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_parse_org_emftext_language_xpath2_IfExpr672 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_IfExpr686 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_IfExpr704 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_IfExpr722 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_parse_org_emftext_language_xpath2_IfExpr736 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr754 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_parse_org_emftext_language_xpath2_IfExpr772 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr827 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_parse_org_emftext_language_xpath2_OrExpr854 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr880 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr940 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath2_AndExpr967 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr993 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1053 = new BitSet(new long[]{0x30400003F8002002L,0x0000000000000268L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Comp_in_parse_org_emftext_language_xpath2_ComparisonExpr1086 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1180 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_parse_org_emftext_language_xpath2_RangeExpr1207 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_parse_org_emftext_language_xpath2_GeneralComp1298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_GeneralComp1313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_parse_org_emftext_language_xpath2_GeneralComp1328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_parse_org_emftext_language_xpath2_GeneralComp1343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_parse_org_emftext_language_xpath2_GeneralComp1358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath2_GeneralComp1373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_org_emftext_language_xpath2_ValueComp1418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_org_emftext_language_xpath2_ValueComp1433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_parse_org_emftext_language_xpath2_ValueComp1448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_parse_org_emftext_language_xpath2_ValueComp1463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_emftext_language_xpath2_ValueComp1478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_parse_org_emftext_language_xpath2_ValueComp1493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_org_emftext_language_xpath2_NodeComp1538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_org_emftext_language_xpath2_NodeComp1553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_parse_org_emftext_language_xpath2_NodeComp1568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr1608 = new BitSet(new long[]{0x0000000000140002L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath2_AdditiveExpr1648 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_20_in_parse_org_emftext_language_xpath2_AdditiveExpr1667 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr1704 = new BitSet(new long[]{0x0000000000140002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1764 = new BitSet(new long[]{0x4002000000020002L,0x0000000000000080L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1804 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1823 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_62_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1842 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_71_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1861 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr1898 = new BitSet(new long[]{0x4002000000020002L,0x0000000000000080L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr1958 = new BitSet(new long[]{0x0000000000000002L,0x0000000018000000L});
    public static final BitSet FOLLOW_91_in_parse_org_emftext_language_xpath2_UnionExpr1998 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_92_in_parse_org_emftext_language_xpath2_UnionExpr2017 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr2054 = new BitSet(new long[]{0x0000000000000002L,0x0000000018000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2114 = new BitSet(new long[]{0x0100000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2154 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_56_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2173 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2210 = new BitSet(new long[]{0x0100000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_InstanceofExpr2270 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_org_emftext_language_xpath2_InstanceofExpr2297 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_parse_org_emftext_language_xpath2_InstanceofExpr2317 = new BitSet(new long[]{0x002C440000000200L,0x0000000000990410L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_InstanceofExpr2343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_TreatExpr2403 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_parse_org_emftext_language_xpath2_TreatExpr2430 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_TreatExpr2450 = new BitSet(new long[]{0x002C440000000200L,0x0000000000990410L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_TreatExpr2476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_CastableExpr2536 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_44_in_parse_org_emftext_language_xpath2_CastableExpr2563 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_CastableExpr2583 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastableExpr2609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_CastExpr2669 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_43_in_parse_org_emftext_language_xpath2_CastExpr2696 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_CastExpr2716 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastExpr2742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath2_UnaryExpr2813 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_20_in_parse_org_emftext_language_xpath2_UnaryExpr2830 = new BitSet(new long[]{0x060DE4C801F6CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ValueExpr_in_parse_org_emftext_language_xpath2_UnaryExpr2863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath2_ChildStepExpr2896 = new BitSet(new long[]{0x060DE4C80062CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_ChildStepExpr2914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr2947 = new BitSet(new long[]{0x060DE4C80062CEE0L,0x0000000000B9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr2965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath2_RootStepExpr2998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExprChild_in_parse_org_emftext_language_xpath2_SelfStepExpr3031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DirectionalStep_in_parse_org_emftext_language_xpath2_AxisStep3068 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AxisStep3095 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_45_in_parse_org_emftext_language_xpath2_GeneralForwardStep3145 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_47_in_parse_org_emftext_language_xpath2_GeneralForwardStep3160 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_42_in_parse_org_emftext_language_xpath2_GeneralForwardStep3175 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_85_in_parse_org_emftext_language_xpath2_GeneralForwardStep3190 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_48_in_parse_org_emftext_language_xpath2_GeneralForwardStep3205 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_58_in_parse_org_emftext_language_xpath2_GeneralForwardStep3220 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_57_in_parse_org_emftext_language_xpath2_GeneralForwardStep3235 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_72_in_parse_org_emftext_language_xpath2_GeneralForwardStep3250 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_org_emftext_language_xpath2_GeneralForwardStep3271 = new BitSet(new long[]{0x000C440000020A00L,0x0000000000990400L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralForwardStep3289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_org_emftext_language_xpath2_AbbrevForwardStep3331 = new BitSet(new long[]{0x000C440000020A00L,0x0000000000990400L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_AbbrevForwardStep3356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_parse_org_emftext_language_xpath2_GeneralReverseStep3398 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_38_in_parse_org_emftext_language_xpath2_GeneralReverseStep3413 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_79_in_parse_org_emftext_language_xpath2_GeneralReverseStep3428 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath2_GeneralReverseStep3443 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath2_GeneralReverseStep3458 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_org_emftext_language_xpath2_GeneralReverseStep3479 = new BitSet(new long[]{0x000C440000020A00L,0x0000000000990400L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralReverseStep3497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_parse_org_emftext_language_xpath2_AbbrevReverseStep3539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_NodeKindTest3579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_QNameTest3616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_AnyWildcard3649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_LocalNameWildcard3682 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_LocalNameWildcard3703 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_LocalNameWildcard3717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_NamespaceWildcard3746 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_NamespaceWildcard3760 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_NamespaceWildcard3778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PrimaryExpr_in_parse_org_emftext_language_xpath2_FilterExpr3818 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_FilterExpr3845 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_36_in_parse_org_emftext_language_xpath2_Predicate3886 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_Predicate3904 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_org_emftext_language_xpath2_Predicate3922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_VarRef3951 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_VarRef3969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_VarName4017 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_VarName4050 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_VarName4087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_ParenthesizedExpr4123 = new BitSet(new long[]{0x8E8DE4C801F7CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_ParenthesizedExpr4146 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_ParenthesizedExpr4172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_org_emftext_language_xpath2_ContextItemExpr4201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_FunctionCall4234 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_FunctionCall4252 = new BitSet(new long[]{0x8E8DE4C801F7CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall4281 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_FunctionCall4322 = new BitSet(new long[]{0x8E8DE4C801F6CEE0L,0x0000000000F9E500L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall4356 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_FunctionCall4430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_SingleType4463 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_SingleType4490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_parse_org_emftext_language_xpath2_EmptySequenceType4526 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_EmptySequenceType4540 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_EmptySequenceType4554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemType_in_parse_org_emftext_language_xpath2_ItemSequenceType4587 = new BitSet(new long[]{0x0000000400060002L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_ItemSequenceType4614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_ItemSequenceType4629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath2_ItemSequenceType4644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_ItemKindTest4684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_parse_org_emftext_language_xpath2_AnyItemType4717 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyItemType4731 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyItemType4745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_AtomicItemType4778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_AtomicType4815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_parse_org_emftext_language_xpath2_AnyKindTest4848 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyKindTest4862 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyKindTest4876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_org_emftext_language_xpath2_DocumentTest4905 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_DocumentTest4919 = new BitSet(new long[]{0x0008000000010000L,0x0000000000100000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_DocumentTest4948 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_DocumentTest4968 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_DocumentTest5009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_parse_org_emftext_language_xpath2_TextTest5038 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_TextTest5052 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_TextTest5066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_parse_org_emftext_language_xpath2_CommentTest5095 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_CommentTest5109 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_CommentTest5123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_parse_org_emftext_language_xpath2_PITest5152 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_PITest5166 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_PITest5180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_PITest5199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_PITest5209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_parse_org_emftext_language_xpath2_NCNamePITest5234 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_NCNamePITest5248 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NCNamePITest5266 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_NCNamePITest5287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_parse_org_emftext_language_xpath2_StringLiteralPITest5316 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_StringLiteralPITest5330 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteralPITest5348 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_StringLiteralPITest5369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_org_emftext_language_xpath2_AttributeTest5398 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_AttributeTest5412 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_AttributeTest5426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest5445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest5455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5480 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5494 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5508 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5531 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5557 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardAttributeTest5598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_org_emftext_language_xpath2_NameAttributeTest5627 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_NameAttributeTest5641 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest5659 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_NameAttributeTest5686 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest5712 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_NameAttributeTest5753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5782 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5796 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5814 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaAttributeTest5832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_org_emftext_language_xpath2_ElementTest5861 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_ElementTest5875 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_ElementTest5889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_ElementTest5908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_ElementTest5918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_org_emftext_language_xpath2_WildcardElementTest5943 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardElementTest5957 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardElementTest5971 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardElementTest5994 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardElementTest6020 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_WildcardElementTest6061 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardElementTest6105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_org_emftext_language_xpath2_NameElementTest6134 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_NameElementTest6148 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest6166 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_NameElementTest6193 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest6219 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_NameElementTest6260 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_NameElementTest6304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_parse_org_emftext_language_xpath2_SchemaElementTest6333 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaElementTest6347 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaElementTest6365 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaElementTest6383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath2_IntegerLiteral6416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath2_DecimalLiteral6456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath2_DoubleLiteral6496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteral6536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName6587 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_QName6620 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName6657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_QName6683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PathExprChild_in_parse_org_emftext_language_xpath2_PathExpr6712 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExpr6739 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExpr6756 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_ExprSingle6793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_ExprSingle6803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_ExprSingle6813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_ExprSingle6823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_ExprSingle6833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_ExprSingle6843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ExprSingle6853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ExprSingle6863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_ExprSingle6873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_ExprSingle6883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_ExprSingle6893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_ExprSingle6903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_ExprSingle6913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_ExprSingle6923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_ExprSingle6933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_ExprSingle6943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_ExprSingle6953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_ExprSingle6963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_ExprSingle6973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_ExprSingle6983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_ExprSingle6993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_ExprSingle7003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_ExprSingle7013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_ExprSingle7023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ExprSingle7033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralComp_in_parse_org_emftext_language_xpath2_Comp7054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ValueComp_in_parse_org_emftext_language_xpath2_Comp7064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeComp_in_parse_org_emftext_language_xpath2_Comp7074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_EmptySequenceType_in_parse_org_emftext_language_xpath2_SequenceType7095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemSequenceType_in_parse_org_emftext_language_xpath2_SequenceType7105 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_ValueExpr7126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_ValueExpr7136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_ValueExpr7146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_ValueExpr7156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_ValueExpr7196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ValueExpr7206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_StepExpr7227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_StepExpr7237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild7258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild7268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep7289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep7299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep7309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep7319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeKindTest_in_parse_org_emftext_language_xpath2_NodeTest7340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QNameTest_in_parse_org_emftext_language_xpath2_NodeTest7350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyWildcard_in_parse_org_emftext_language_xpath2_NodeTest7360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_LocalNameWildcard_in_parse_org_emftext_language_xpath2_NodeTest7370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NamespaceWildcard_in_parse_org_emftext_language_xpath2_NodeTest7380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyKindTest_in_parse_org_emftext_language_xpath2_KindTest7401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DocumentTest_in_parse_org_emftext_language_xpath2_KindTest7411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TextTest_in_parse_org_emftext_language_xpath2_KindTest7421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CommentTest_in_parse_org_emftext_language_xpath2_KindTest7431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PITest_in_parse_org_emftext_language_xpath2_KindTest7441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_KindTest7451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_KindTest7461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_parse_org_emftext_language_xpath2_KindTest7471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_KindTest7481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_KindTest7491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaAttributeTest_in_parse_org_emftext_language_xpath2_KindTest7501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_KindTest7511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_KindTest7521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_KindTest7531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_KindTest7541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PrimaryExpr7562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr7572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr7582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PrimaryExpr7592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr7632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemKindTest_in_parse_org_emftext_language_xpath2_ItemType7653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyItemType_in_parse_org_emftext_language_xpath2_ItemType7663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicItemType_in_parse_org_emftext_language_xpath2_ItemType7673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild7724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_PathExprChild7734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_PathExprChild7744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_synpred57_Xpath24629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_synpred58_Xpath24644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_synpred72_Xpath26587 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_synpred72_Xpath26620 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_NCNAME_in_synpred72_Xpath26657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_synpred78_Xpath26823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred79_Xpath26833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred80_Xpath26843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred81_Xpath26853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred82_Xpath26863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_synpred83_Xpath26873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_synpred84_Xpath26883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_synpred85_Xpath26893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_synpred86_Xpath26903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_synpred87_Xpath26913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_synpred88_Xpath26923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_synpred89_Xpath26933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_synpred90_Xpath26943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred91_Xpath26953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred92_Xpath26963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred93_Xpath26973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred94_Xpath26983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred95_Xpath26993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred96_Xpath27003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred97_Xpath27013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_synpred98_Xpath27023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred102_Xpath27126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred103_Xpath27136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred104_Xpath27146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred105_Xpath27156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred106_Xpath27166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred107_Xpath27176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred108_Xpath27186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_synpred109_Xpath27196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PITest_in_synpred123_Xpath27441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_synpred124_Xpath27451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_synpred125_Xpath27461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_synpred126_Xpath27471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_synpred127_Xpath27481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_synpred128_Xpath27491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_synpred130_Xpath27511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_synpred131_Xpath27521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_synpred132_Xpath27531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_synpred142_Xpath27694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_synpred144_Xpath27714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_synpred145_Xpath27724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_synpred146_Xpath27734 = new BitSet(new long[]{0x0000000000000002L});

}