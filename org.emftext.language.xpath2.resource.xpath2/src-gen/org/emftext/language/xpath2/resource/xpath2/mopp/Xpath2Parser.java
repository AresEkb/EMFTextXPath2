// $ANTLR 3.4

	package org.emftext.language.xpath2.resource.xpath2.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xpath2Parser extends Xpath2ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "COMMENT_CONTENTS", "DECIMAL_LITERAL", "DOUBLE_LITERAL", "INTEGER_LITERAL", "LINEBREAK", "NCNAME", "STRING_LITERAL", "TEXT", "WHITESPACE", "'!='", "'$'", "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'..'", "'/'", "'//'", "':'", "'::'", "'<'", "'<<'", "'<='", "'='", "'>'", "'>='", "'>>'", "'?'", "'@'", "'['", "']'", "'ancestor'", "'ancestor-or-self'", "'and'", "'attribute'", "'child'", "'comment'", "'descendant'", "'descendant-or-self'", "'document-node'", "'element'", "'else'", "'empty-sequence'", "'eq'", "'every'", "'following'", "'following-sibling'", "'for'", "'ge'", "'gt'", "'if'", "'in'", "'is'", "'item'", "'le'", "'lt'", "'namespace'", "'ne'", "'node'", "'or'", "'parent'", "'preceding'", "'preceding-sibling'", "'processing-instruction'", "'return'", "'satisfies'", "'schema-attribute'", "'schema-element'", "'self'", "'some'", "'text'", "'then'", "'to'"
    };

    public static final int EOF=-1;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int COMMENT_CONTENTS=4;
    public static final int DECIMAL_LITERAL=5;
    public static final int DOUBLE_LITERAL=6;
    public static final int INTEGER_LITERAL=7;
    public static final int LINEBREAK=8;
    public static final int NCNAME=9;
    public static final int STRING_LITERAL=10;
    public static final int TEXT=11;
    public static final int WHITESPACE=12;

    // delegates
    public Xpath2ANTLRParserBase[] getDelegates() {
        return new Xpath2ANTLRParserBase[] {};
    }

    // delegators


    public Xpath2Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xpath2Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(202 + 1);
         

    }

    public String[] getTokenNames() { return Xpath2Parser.tokenNames; }
    public String getGrammarFileName() { return "Xpath2.g"; }


    	private org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolverFactory tokenResolverFactory = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> expectedElements = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new org.emftext.language.xpath2.resource.xpath2.IXpath2Problem() {
    					public org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemSeverity getSeverity() {
    						return org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemSeverity.ERROR;
    					}
    					public org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemType getType() {
    						return org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<org.emftext.language.xpath2.resource.xpath2.IXpath2QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement terminal = org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2FollowSetProvider.TERMINALS[terminalID];
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[] containmentFeatures = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2FollowSetProvider.LINKS[ids[i]];
    		}
    		org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace containmentTrace = new org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElement = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public org.emftext.language.xpath2.resource.xpath2.IXpath2TextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xpath2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xpath2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xpath2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xpath2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new org.emftext.language.xpath2.resource.xpath2.util.Xpath2RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xpath2Parser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xpath2Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xpath2Lexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Expr.class) {
    				return parse_org_emftext_language_xpath2_Expr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ForExpr.class) {
    				return parse_org_emftext_language_xpath2_ForExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SimpleForClause.class) {
    				return parse_org_emftext_language_xpath2_SimpleForClause();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SimpleForClauseIterator.class) {
    				return parse_org_emftext_language_xpath2_SimpleForClauseIterator();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QuantifiedExpr.class) {
    				return parse_org_emftext_language_xpath2_QuantifiedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IfExpr.class) {
    				return parse_org_emftext_language_xpath2_IfExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.OrExpr.class) {
    				return parse_org_emftext_language_xpath2_OrExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AndExpr.class) {
    				return parse_org_emftext_language_xpath2_AndExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ComparisonExpr.class) {
    				return parse_org_emftext_language_xpath2_ComparisonExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.RangeExpr.class) {
    				return parse_org_emftext_language_xpath2_RangeExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AdditiveExpr.class) {
    				return parse_org_emftext_language_xpath2_AdditiveExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralComp.class) {
    				return parse_org_emftext_language_xpath2_GeneralComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ValueComp.class) {
    				return parse_org_emftext_language_xpath2_ValueComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NodeComp.class) {
    				return parse_org_emftext_language_xpath2_NodeComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SinglePathExpr.class) {
    				return parse_org_emftext_language_xpath2_SinglePathExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DoublePathExpr.class) {
    				return parse_org_emftext_language_xpath2_DoublePathExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.RelativePathExpr.class) {
    				return parse_org_emftext_language_xpath2_RelativePathExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SingleTailPathExpr.class) {
    				return parse_org_emftext_language_xpath2_SingleTailPathExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DoubleTailPathExpr.class) {
    				return parse_org_emftext_language_xpath2_DoubleTailPathExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AxisStep.class) {
    				return parse_org_emftext_language_xpath2_AxisStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralForwardStep.class) {
    				return parse_org_emftext_language_xpath2_GeneralForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AbbrevForwardStep.class) {
    				return parse_org_emftext_language_xpath2_AbbrevForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ForwardAxis.class) {
    				return parse_org_emftext_language_xpath2_ForwardAxis();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralReverseStep.class) {
    				return parse_org_emftext_language_xpath2_GeneralReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AbbrevReverseStep.class) {
    				return parse_org_emftext_language_xpath2_AbbrevReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ReverseAxis.class) {
    				return parse_org_emftext_language_xpath2_ReverseAxis();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NodeKindTest.class) {
    				return parse_org_emftext_language_xpath2_NodeKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QNameTest.class) {
    				return parse_org_emftext_language_xpath2_QNameTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyWildcard.class) {
    				return parse_org_emftext_language_xpath2_AnyWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.LocalNameWildcard.class) {
    				return parse_org_emftext_language_xpath2_LocalNameWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NamespaceWildcard.class) {
    				return parse_org_emftext_language_xpath2_NamespaceWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.FilterExpr.class) {
    				return parse_org_emftext_language_xpath2_FilterExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Predicate.class) {
    				return parse_org_emftext_language_xpath2_Predicate();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.VarRef.class) {
    				return parse_org_emftext_language_xpath2_VarRef();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.VarName.class) {
    				return parse_org_emftext_language_xpath2_VarName();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ParenthesizedExpr.class) {
    				return parse_org_emftext_language_xpath2_ParenthesizedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ContextItemExpr.class) {
    				return parse_org_emftext_language_xpath2_ContextItemExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.FunctionCall.class) {
    				return parse_org_emftext_language_xpath2_FunctionCall();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SingleType.class) {
    				return parse_org_emftext_language_xpath2_SingleType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.EmptySequenceType.class) {
    				return parse_org_emftext_language_xpath2_EmptySequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ItemSequenceType.class) {
    				return parse_org_emftext_language_xpath2_ItemSequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ItemKindTest.class) {
    				return parse_org_emftext_language_xpath2_ItemKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyItemType.class) {
    				return parse_org_emftext_language_xpath2_AnyItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AtomicItemType.class) {
    				return parse_org_emftext_language_xpath2_AtomicItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AtomicType.class) {
    				return parse_org_emftext_language_xpath2_AtomicType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyKindTest.class) {
    				return parse_org_emftext_language_xpath2_AnyKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DocumentTest.class) {
    				return parse_org_emftext_language_xpath2_DocumentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.TextTest.class) {
    				return parse_org_emftext_language_xpath2_TextTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.CommentTest.class) {
    				return parse_org_emftext_language_xpath2_CommentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.PITest.class) {
    				return parse_org_emftext_language_xpath2_PITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NCNamePITest.class) {
    				return parse_org_emftext_language_xpath2_NCNamePITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.StringLiteralPITest.class) {
    				return parse_org_emftext_language_xpath2_StringLiteralPITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AttributeTest.class) {
    				return parse_org_emftext_language_xpath2_AttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.WildcardAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_WildcardAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NameAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_NameAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SchemaAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_SchemaAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ElementTest.class) {
    				return parse_org_emftext_language_xpath2_ElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.WildcardElementTest.class) {
    				return parse_org_emftext_language_xpath2_WildcardElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NameElementTest.class) {
    				return parse_org_emftext_language_xpath2_NameElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SchemaElementTest.class) {
    				return parse_org_emftext_language_xpath2_SchemaElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IntegerLiteral.class) {
    				return parse_org_emftext_language_xpath2_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DecimalLiteral.class) {
    				return parse_org_emftext_language_xpath2_DecimalLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DoubleLiteral.class) {
    				return parse_org_emftext_language_xpath2_DoubleLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.StringLiteral.class) {
    				return parse_org_emftext_language_xpath2_StringLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QName.class) {
    				return parse_org_emftext_language_xpath2_QName();
    			}
    		}
    		throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.emftext.language.xpath2.resource.xpath2.IXpath2Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public org.emftext.language.xpath2.resource.xpath2.IXpath2ParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>>();
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ParseResult parseResult = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		org.emftext.language.xpath2.resource.xpath2.IXpath2ParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    		java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> newFollowSet = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 197;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.emftext.language.xpath2.resource.xpath2.util.Xpath2Pair<org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.emftext.language.xpath2.resource.xpath2.util.Xpath2Pair<org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[]> newFollowerPair : newFollowers) {
    							org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace containmentTrace = new org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace(null, newFollowerPair.getRight());
    							org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal newFollowTerminal = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xpath2.g:691:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_emftext_language_xpath2_Expr ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        org.emftext.language.xpath2.Expr c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xpath2.g:692:2: ( (c0= parse_org_emftext_language_xpath2_Expr ) EOF )
            // Xpath2.g:693:2: (c0= parse_org_emftext_language_xpath2_Expr ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[0]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[3]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[5]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[6]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[7]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[8]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[9]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[10]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[12]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[14]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[15]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[16]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[17]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[18]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[19]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[20]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[21]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[22]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[23]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[24]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[25]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[26]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[27]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[28]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[29]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[30]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[31]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[32]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[33]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[34]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[35]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xpath2.g:733:2: (c0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:734:3: c0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_start82);
            c0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_org_emftext_language_xpath2_Expr"
    // Xpath2.g:742:1: parse_org_emftext_language_xpath2_Expr returns [org.emftext.language.xpath2.Expr element = null] : (a0_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ;
    public final org.emftext.language.xpath2.Expr parse_org_emftext_language_xpath2_Expr() throws RecognitionException {
        org.emftext.language.xpath2.Expr element =  null;

        int parse_org_emftext_language_xpath2_Expr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.ExprSingle a0_0 =null;

        org.emftext.language.xpath2.ExprSingle a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xpath2.g:745:2: ( (a0_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* )
            // Xpath2.g:746:2: (a0_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
            {
            // Xpath2.g:746:2: (a0_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:747:3: a0_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr119);
            a0_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__OWNED_EXPR_SINGLE, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[36]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[37]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[38]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[39]);
            	}

            // Xpath2.g:775:2: ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==19) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // Xpath2.g:776:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            	    {
            	    // Xpath2.g:776:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            	    // Xpath2.g:777:4: a1= ',' (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
            	    {
            	    a1=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_Expr146); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[40]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[41]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[42]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[43]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[44]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[45]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[46]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[47]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[48]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[49]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[50]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[51]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[52]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[53]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[54]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[55]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[56]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[57]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[58]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[59]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[60]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[61]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[62]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[63]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[64]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[65]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[66]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[67]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[68]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[69]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[70]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[71]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[72]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[73]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[74]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[75]);
            	    			}

            	    // Xpath2.g:826:4: (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
            	    // Xpath2.g:827:5: a2_0= parse_org_emftext_language_xpath2_ExprSingle
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr172);
            	    a2_0=parse_org_emftext_language_xpath2_ExprSingle();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__OWNED_EXPR_SINGLE, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_1, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[76]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[77]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[78]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[79]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[80]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[81]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[82]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[83]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_emftext_language_xpath2_Expr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Expr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ForExpr"
    // Xpath2.g:867:1: parse_org_emftext_language_xpath2_ForExpr returns [org.emftext.language.xpath2.ForExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_SimpleForClause ) a1= 'return' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.ForExpr parse_org_emftext_language_xpath2_ForExpr() throws RecognitionException {
        org.emftext.language.xpath2.ForExpr element =  null;

        int parse_org_emftext_language_xpath2_ForExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.SimpleForClause a0_0 =null;

        org.emftext.language.xpath2.ExprSingle a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xpath2.g:870:2: ( (a0_0= parse_org_emftext_language_xpath2_SimpleForClause ) a1= 'return' (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:871:2: (a0_0= parse_org_emftext_language_xpath2_SimpleForClause ) a1= 'return' (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            // Xpath2.g:871:2: (a0_0= parse_org_emftext_language_xpath2_SimpleForClause )
            // Xpath2.g:872:3: a0_0= parse_org_emftext_language_xpath2_SimpleForClause
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SimpleForClause_in_parse_org_emftext_language_xpath2_ForExpr232);
            a0_0=parse_org_emftext_language_xpath2_SimpleForClause();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__OWNED_SIMPLE_FOR_CLAUSE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[84]);
            	}

            a1=(Token)match(input,71,FOLLOW_71_in_parse_org_emftext_language_xpath2_ForExpr250); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[85]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[86]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[87]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[88]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[89]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[90]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[91]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[92]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[93]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[94]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[95]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[96]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[97]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[98]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[99]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[100]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[101]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[102]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[103]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[104]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[105]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[106]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[108]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[109]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[110]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[111]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[112]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[113]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[114]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[115]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[116]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[117]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[118]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[119]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[120]);
            	}

            // Xpath2.g:946:2: (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:947:3: a2_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_ForExpr268);
            a2_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__RETURN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[121]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[122]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[124]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[127]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[129]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_emftext_language_xpath2_ForExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ForExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_SimpleForClause"
    // Xpath2.g:982:1: parse_org_emftext_language_xpath2_SimpleForClause returns [org.emftext.language.xpath2.SimpleForClause element = null] : a0= 'for' (a1_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )* ;
    public final org.emftext.language.xpath2.SimpleForClause parse_org_emftext_language_xpath2_SimpleForClause() throws RecognitionException {
        org.emftext.language.xpath2.SimpleForClause element =  null;

        int parse_org_emftext_language_xpath2_SimpleForClause_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.SimpleForClauseIterator a1_0 =null;

        org.emftext.language.xpath2.SimpleForClauseIterator a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xpath2.g:985:2: (a0= 'for' (a1_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )* )
            // Xpath2.g:986:2: a0= 'for' (a1_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )*
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_org_emftext_language_xpath2_SimpleForClause301); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClause();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClause(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[130]);
            	}

            // Xpath2.g:1000:2: (a1_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator )
            // Xpath2.g:1001:3: a1_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_SimpleForClause319);
            a1_0=parse_org_emftext_language_xpath2_SimpleForClauseIterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClause();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.SIMPLE_FOR_CLAUSE__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[131]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[132]);
            	}

            // Xpath2.g:1027:2: ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==19) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // Xpath2.g:1028:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) )
            	    {
            	    // Xpath2.g:1028:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) )
            	    // Xpath2.g:1029:4: a2= ',' (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator )
            	    {
            	    a2=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_SimpleForClause346); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClause();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClause(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[133]);
            	    			}

            	    // Xpath2.g:1043:4: (a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator )
            	    // Xpath2.g:1044:5: a3_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_SimpleForClause372);
            	    a3_0=parse_org_emftext_language_xpath2_SimpleForClauseIterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClause();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3_0 != null) {
            	    						if (a3_0 != null) {
            	    							Object value = a3_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.SIMPLE_FOR_CLAUSE__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_2_0_0_1, a3_0, true);
            	    						copyLocalizationInfos(a3_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[134]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[135]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[136]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[137]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_emftext_language_xpath2_SimpleForClause_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SimpleForClause"



    // $ANTLR start "parse_org_emftext_language_xpath2_SimpleForClauseIterator"
    // Xpath2.g:1080:1: parse_org_emftext_language_xpath2_SimpleForClauseIterator returns [org.emftext.language.xpath2.SimpleForClauseIterator element = null] : a0= '$' (a1= TEXT ) a2= 'in' (a3_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.SimpleForClauseIterator parse_org_emftext_language_xpath2_SimpleForClauseIterator() throws RecognitionException {
        org.emftext.language.xpath2.SimpleForClauseIterator element =  null;

        int parse_org_emftext_language_xpath2_SimpleForClauseIterator_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.ExprSingle a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xpath2.g:1083:2: (a0= '$' (a1= TEXT ) a2= 'in' (a3_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:1084:2: a0= '$' (a1= TEXT ) a2= 'in' (a3_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            a0=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator428); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClauseIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[138]);
            	}

            // Xpath2.g:1098:2: (a1= TEXT )
            // Xpath2.g:1099:3: a1= TEXT
            {
            a1=(Token)match(input,TEXT,FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator446); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClauseIterator();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TEXT");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SIMPLE_FOR_CLAUSE_ITERATOR__VAR_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SIMPLE_FOR_CLAUSE_ITERATOR__VAR_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[139]);
            	}

            a2=(Token)match(input,58,FOLLOW_58_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator467); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClauseIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[140]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[141]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[142]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[143]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[144]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[145]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[146]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[147]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[148]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[149]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[152]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[153]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[156]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[157]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[159]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[160]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[161]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[162]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[163]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[165]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[166]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[167]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[168]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[169]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[170]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[171]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[172]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[173]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[174]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSimpleForClauseIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[175]);
            	}

            // Xpath2.g:1183:2: (a3_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1184:3: a3_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator485);
            a3_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSimpleForClauseIterator();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SIMPLE_FOR_CLAUSE_ITERATOR__LIST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_3, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[176]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[177]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[178]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[179]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_emftext_language_xpath2_SimpleForClauseIterator_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SimpleForClauseIterator"



    // $ANTLR start "parse_org_emftext_language_xpath2_QuantifiedExpr"
    // Xpath2.g:1214:1: parse_org_emftext_language_xpath2_QuantifiedExpr returns [org.emftext.language.xpath2.QuantifiedExpr element = null] : ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.QuantifiedExpr parse_org_emftext_language_xpath2_QuantifiedExpr() throws RecognitionException {
        org.emftext.language.xpath2.QuantifiedExpr element =  null;

        int parse_org_emftext_language_xpath2_QuantifiedExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a5=null;
        Token a7=null;
        org.emftext.language.xpath2.SimpleForClauseIterator a4_0 =null;

        org.emftext.language.xpath2.SimpleForClauseIterator a6_0 =null;

        org.emftext.language.xpath2.ExprSingle a8_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xpath2.g:1217:2: ( ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:1218:2: ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            // Xpath2.g:1218:2: ( (a0= 'some' |a1= 'every' ) )
            // Xpath2.g:1219:3: (a0= 'some' |a1= 'every' )
            {
            // Xpath2.g:1219:3: (a0= 'some' |a1= 'every' )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==76) ) {
                alt3=1;
            }
            else if ( (LA3_0==51) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // Xpath2.g:1220:4: a0= 'some'
                    {
                    a0=(Token)match(input,76,FOLLOW_76_in_parse_org_emftext_language_xpath2_QuantifiedExpr527); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath2.QuantifierKind.SOME_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1233:8: a1= 'every'
                    {
                    a1=(Token)match(input,51,FOLLOW_51_in_parse_org_emftext_language_xpath2_QuantifiedExpr542); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath2.QuantifierKind.EVERY_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[180]);
            	}

            // Xpath2.g:1253:2: (a4_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator )
            // Xpath2.g:1254:3: a4_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr567);
            a4_0=parse_org_emftext_language_xpath2_SimpleForClauseIterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_1, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[181]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[182]);
            	}

            // Xpath2.g:1280:2: ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==19) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xpath2.g:1281:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) )
            	    {
            	    // Xpath2.g:1281:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator ) )
            	    // Xpath2.g:1282:4: a5= ',' (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator )
            	    {
            	    a5=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_QuantifiedExpr594); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_2_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[183]);
            	    			}

            	    // Xpath2.g:1296:4: (a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator )
            	    // Xpath2.g:1297:5: a6_0= parse_org_emftext_language_xpath2_SimpleForClauseIterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr620);
            	    a6_0=parse_org_emftext_language_xpath2_SimpleForClauseIterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a6_0 != null) {
            	    						if (a6_0 != null) {
            	    							Object value = a6_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_2_0_0_1, a6_0, true);
            	    						copyLocalizationInfos(a6_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[184]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[185]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[187]);
            	}

            a7=(Token)match(input,72,FOLLOW_72_in_parse_org_emftext_language_xpath2_QuantifiedExpr661); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[188]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[189]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[190]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[191]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[192]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[194]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[195]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[196]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[197]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[199]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[200]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[201]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[202]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[203]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[204]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[205]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[206]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[207]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[208]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[209]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[210]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[211]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[212]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[213]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[214]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[215]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[216]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[217]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[218]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[219]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[220]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[221]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[222]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[223]);
            	}

            // Xpath2.g:1380:2: (a8_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1381:3: a8_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_QuantifiedExpr679);
            a8_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            				startIncompleteElement(element);
            			}
            			if (a8_0 != null) {
            				if (a8_0 != null) {
            					Object value = a8_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__SATISFIES), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_4, a8_0, true);
            				copyLocalizationInfos(a8_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[224]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[225]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[226]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[227]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[228]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[229]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[230]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[231]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[232]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_emftext_language_xpath2_QuantifiedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QuantifiedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_IfExpr"
    // Xpath2.g:1416:1: parse_org_emftext_language_xpath2_IfExpr returns [org.emftext.language.xpath2.IfExpr element = null] : a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.IfExpr parse_org_emftext_language_xpath2_IfExpr() throws RecognitionException {
        org.emftext.language.xpath2.IfExpr element =  null;

        int parse_org_emftext_language_xpath2_IfExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath2.Expr a2_0 =null;

        org.emftext.language.xpath2.ExprSingle a5_0 =null;

        org.emftext.language.xpath2.ExprSingle a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xpath2.g:1419:2: (a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:1420:2: a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            a0=(Token)match(input,57,FOLLOW_57_in_parse_org_emftext_language_xpath2_IfExpr712); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[233]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_IfExpr726); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[234]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[235]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[236]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[237]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[238]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[239]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[240]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[241]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[242]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[243]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[244]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[245]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[246]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[247]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[248]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[249]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[250]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[251]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[252]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[253]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[254]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[255]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[256]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[258]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[259]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[260]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[261]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[262]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[263]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[264]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[265]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[266]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[267]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[268]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[269]);
            	}

            // Xpath2.g:1483:2: (a2_0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:1484:3: a2_0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_IfExpr744);
            a2_0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__CONDITION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[270]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_IfExpr762); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[271]);
            	}

            a4=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath2_IfExpr776); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[272]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[273]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[274]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[275]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[276]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[277]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[278]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[279]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[280]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[281]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[282]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[283]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[284]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[285]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[286]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[287]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[288]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[289]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[290]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[291]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[292]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[293]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[294]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[295]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[296]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[297]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[298]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[299]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[300]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[301]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[302]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[303]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[304]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[305]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[306]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[307]);
            	}

            // Xpath2.g:1572:2: (a5_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1573:3: a5_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr794);
            a5_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            				startIncompleteElement(element);
            			}
            			if (a5_0 != null) {
            				if (a5_0 != null) {
            					Object value = a5_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__THEN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_5, a5_0, true);
            				copyLocalizationInfos(a5_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[308]);
            	}

            a6=(Token)match(input,48,FOLLOW_48_in_parse_org_emftext_language_xpath2_IfExpr812); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[309]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[310]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[311]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[312]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[313]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[314]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[315]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[316]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[317]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[318]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[319]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[320]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[321]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[322]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[323]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[324]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[325]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[326]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[327]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[328]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[329]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[330]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[331]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[332]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[333]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[334]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[335]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[336]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[337]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[338]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[339]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[340]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[341]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[342]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[343]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[344]);
            	}

            // Xpath2.g:1647:2: (a7_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1648:3: a7_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr830);
            a7_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            				startIncompleteElement(element);
            			}
            			if (a7_0 != null) {
            				if (a7_0 != null) {
            					Object value = a7_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__ELSE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_7, a7_0, true);
            				copyLocalizationInfos(a7_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[345]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[346]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[347]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[348]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[349]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[350]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[351]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[352]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[353]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_emftext_language_xpath2_IfExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IfExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_OrExpr"
    // Xpath2.g:1683:1: parse_org_emftext_language_xpath2_OrExpr returns [org.emftext.language.xpath2.OrExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_OrExprChild ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_OrExprChild ) ) )* ;
    public final org.emftext.language.xpath2.OrExpr parse_org_emftext_language_xpath2_OrExpr() throws RecognitionException {
        org.emftext.language.xpath2.OrExpr element =  null;

        int parse_org_emftext_language_xpath2_OrExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.OrExprChild a0_0 =null;

        org.emftext.language.xpath2.OrExprChild a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xpath2.g:1686:2: ( (a0_0= parse_org_emftext_language_xpath2_OrExprChild ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_OrExprChild ) ) )* )
            // Xpath2.g:1687:2: (a0_0= parse_org_emftext_language_xpath2_OrExprChild ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_OrExprChild ) ) )*
            {
            // Xpath2.g:1687:2: (a0_0= parse_org_emftext_language_xpath2_OrExprChild )
            // Xpath2.g:1688:3: a0_0= parse_org_emftext_language_xpath2_OrExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExprChild_in_parse_org_emftext_language_xpath2_OrExpr867);
            a0_0=parse_org_emftext_language_xpath2_OrExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.OR_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[354]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[355]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[356]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[357]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[358]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[359]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[360]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[361]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[362]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[363]);
            	}

            // Xpath2.g:1722:2: ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_OrExprChild ) ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==66) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // Xpath2.g:1723:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_OrExprChild ) )
            	    {
            	    // Xpath2.g:1723:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_OrExprChild ) )
            	    // Xpath2.g:1724:4: a1= 'or' (a2_0= parse_org_emftext_language_xpath2_OrExprChild )
            	    {
            	    a1=(Token)match(input,66,FOLLOW_66_in_parse_org_emftext_language_xpath2_OrExpr894); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[364]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[365]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[366]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[367]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[368]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[369]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[370]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[371]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[372]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[373]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[374]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[375]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[376]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[377]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[378]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[379]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[380]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[381]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[382]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[383]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[384]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[385]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[386]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[387]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[388]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[389]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[390]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[391]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[392]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[393]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[394]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[395]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[396]);
            	    			}

            	    // Xpath2.g:1770:4: (a2_0= parse_org_emftext_language_xpath2_OrExprChild )
            	    // Xpath2.g:1771:5: a2_0= parse_org_emftext_language_xpath2_OrExprChild
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExprChild_in_parse_org_emftext_language_xpath2_OrExpr920);
            	    a2_0=parse_org_emftext_language_xpath2_OrExprChild();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.OR_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_1_0_0_1, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[397]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[398]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[399]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[400]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[401]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[402]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[403]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[404]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[405]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[406]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[407]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[408]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[409]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[410]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[413]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[414]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[415]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[416]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_emftext_language_xpath2_OrExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_OrExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_AndExpr"
    // Xpath2.g:1823:1: parse_org_emftext_language_xpath2_AndExpr returns [org.emftext.language.xpath2.AndExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_AndExprChild ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_AndExprChild ) ) )* ;
    public final org.emftext.language.xpath2.AndExpr parse_org_emftext_language_xpath2_AndExpr() throws RecognitionException {
        org.emftext.language.xpath2.AndExpr element =  null;

        int parse_org_emftext_language_xpath2_AndExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AndExprChild a0_0 =null;

        org.emftext.language.xpath2.AndExprChild a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xpath2.g:1826:2: ( (a0_0= parse_org_emftext_language_xpath2_AndExprChild ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_AndExprChild ) ) )* )
            // Xpath2.g:1827:2: (a0_0= parse_org_emftext_language_xpath2_AndExprChild ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_AndExprChild ) ) )*
            {
            // Xpath2.g:1827:2: (a0_0= parse_org_emftext_language_xpath2_AndExprChild )
            // Xpath2.g:1828:3: a0_0= parse_org_emftext_language_xpath2_AndExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExprChild_in_parse_org_emftext_language_xpath2_AndExpr980);
            a0_0=parse_org_emftext_language_xpath2_AndExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AND_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[417]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[418]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[419]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[420]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[426]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[427]);
            	}

            // Xpath2.g:1863:2: ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_AndExprChild ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==40) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // Xpath2.g:1864:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_AndExprChild ) )
            	    {
            	    // Xpath2.g:1864:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_AndExprChild ) )
            	    // Xpath2.g:1865:4: a1= 'and' (a2_0= parse_org_emftext_language_xpath2_AndExprChild )
            	    {
            	    a1=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath2_AndExpr1007); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[428]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[429]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[430]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[431]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[432]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[433]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[434]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[435]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[436]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[437]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[438]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[439]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[440]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[441]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[442]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[443]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[444]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[445]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[446]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[447]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[448]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[449]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[450]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[451]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[452]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[453]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[454]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[455]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[456]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[457]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[458]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[459]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[460]);
            	    			}

            	    // Xpath2.g:1911:4: (a2_0= parse_org_emftext_language_xpath2_AndExprChild )
            	    // Xpath2.g:1912:5: a2_0= parse_org_emftext_language_xpath2_AndExprChild
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExprChild_in_parse_org_emftext_language_xpath2_AndExpr1033);
            	    a2_0=parse_org_emftext_language_xpath2_AndExprChild();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AND_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_1_0_0_1, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[461]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[462]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[463]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[464]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[465]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[466]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[467]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[468]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[469]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[470]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[471]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[472]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[473]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[474]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[475]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[476]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[477]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[478]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[479]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[480]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[481]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[482]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_emftext_language_xpath2_AndExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AndExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ComparisonExpr"
    // Xpath2.g:1966:1: parse_org_emftext_language_xpath2_ComparisonExpr returns [org.emftext.language.xpath2.ComparisonExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) ) )? ;
    public final org.emftext.language.xpath2.ComparisonExpr parse_org_emftext_language_xpath2_ComparisonExpr() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr element =  null;

        int parse_org_emftext_language_xpath2_ComparisonExpr_StartIndex = input.index();

        org.emftext.language.xpath2.ComparisonExprChild a0_0 =null;

        org.emftext.language.xpath2.Comp a1_0 =null;

        org.emftext.language.xpath2.ComparisonExprChild a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xpath2.g:1969:2: ( (a0_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) ) )? )
            // Xpath2.g:1970:2: (a0_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) ) )?
            {
            // Xpath2.g:1970:2: (a0_0= parse_org_emftext_language_xpath2_ComparisonExprChild )
            // Xpath2.g:1971:3: a0_0= parse_org_emftext_language_xpath2_ComparisonExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExprChild_in_parse_org_emftext_language_xpath2_ComparisonExpr1093);
            a0_0=parse_org_emftext_language_xpath2_ComparisonExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__LEFT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[483]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[484]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[485]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[486]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[487]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[488]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[489]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[490]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[491]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[492]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[493]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[494]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[495]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[496]);
            	}

            // Xpath2.g:2009:2: ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==13||(LA7_0 >= 27 && LA7_0 <= 33)||LA7_0==50||(LA7_0 >= 55 && LA7_0 <= 56)||LA7_0==59||(LA7_0 >= 61 && LA7_0 <= 62)||LA7_0==64) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // Xpath2.g:2010:3: ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) )
                    {
                    // Xpath2.g:2010:3: ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild ) )
                    // Xpath2.g:2011:4: (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild )
                    {
                    // Xpath2.g:2011:4: (a1_0= parse_org_emftext_language_xpath2_Comp )
                    // Xpath2.g:2012:5: a1_0= parse_org_emftext_language_xpath2_Comp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Comp_in_parse_org_emftext_language_xpath2_ComparisonExpr1126);
                    a1_0=parse_org_emftext_language_xpath2_Comp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__OPERATOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[497]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[498]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[499]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[500]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[501]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[502]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[503]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[504]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[505]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[506]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[507]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[508]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[509]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[510]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[511]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[512]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[513]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[514]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[515]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[516]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[517]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[518]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[519]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[520]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[521]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[522]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[523]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[524]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[525]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[526]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[527]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[528]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[529]);
                    			}

                    // Xpath2.g:2069:4: (a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild )
                    // Xpath2.g:2070:5: a2_0= parse_org_emftext_language_xpath2_ComparisonExprChild
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExprChild_in_parse_org_emftext_language_xpath2_ComparisonExpr1160);
                    a2_0=parse_org_emftext_language_xpath2_ComparisonExprChild();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__RIGHT), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[530]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[531]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[532]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[533]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[534]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[535]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[536]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[537]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[538]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[539]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[540]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[541]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[542]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[543]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[544]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[546]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[547]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[548]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[549]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[550]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[551]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_emftext_language_xpath2_ComparisonExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ComparisonExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_RangeExpr"
    // Xpath2.g:2124:1: parse_org_emftext_language_xpath2_RangeExpr returns [org.emftext.language.xpath2.RangeExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_RangeExprChild ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_RangeExprChild ) ) )? ;
    public final org.emftext.language.xpath2.RangeExpr parse_org_emftext_language_xpath2_RangeExpr() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr element =  null;

        int parse_org_emftext_language_xpath2_RangeExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.RangeExprChild a0_0 =null;

        org.emftext.language.xpath2.RangeExprChild a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xpath2.g:2127:2: ( (a0_0= parse_org_emftext_language_xpath2_RangeExprChild ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_RangeExprChild ) ) )? )
            // Xpath2.g:2128:2: (a0_0= parse_org_emftext_language_xpath2_RangeExprChild ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_RangeExprChild ) ) )?
            {
            // Xpath2.g:2128:2: (a0_0= parse_org_emftext_language_xpath2_RangeExprChild )
            // Xpath2.g:2129:3: a0_0= parse_org_emftext_language_xpath2_RangeExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExprChild_in_parse_org_emftext_language_xpath2_RangeExpr1220);
            a0_0=parse_org_emftext_language_xpath2_RangeExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.RANGE_EXPR__FROM), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[552]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[553]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[554]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[555]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[556]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[557]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[558]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[559]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[560]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[561]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[562]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[563]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[564]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[565]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[566]);
            	}

            // Xpath2.g:2168:2: ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_RangeExprChild ) ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==79) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // Xpath2.g:2169:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_RangeExprChild ) )
                    {
                    // Xpath2.g:2169:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_RangeExprChild ) )
                    // Xpath2.g:2170:4: a1= 'to' (a2_0= parse_org_emftext_language_xpath2_RangeExprChild )
                    {
                    a1=(Token)match(input,79,FOLLOW_79_in_parse_org_emftext_language_xpath2_RangeExpr1247); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[567]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[568]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[569]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[570]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[571]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[572]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[573]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[574]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[575]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[576]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[577]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[578]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[579]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[580]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[581]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[582]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[583]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[584]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[585]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[586]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[587]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[588]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[589]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[590]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[591]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[592]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[593]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[594]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[595]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[596]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[597]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[598]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[599]);
                    			}

                    // Xpath2.g:2216:4: (a2_0= parse_org_emftext_language_xpath2_RangeExprChild )
                    // Xpath2.g:2217:5: a2_0= parse_org_emftext_language_xpath2_RangeExprChild
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExprChild_in_parse_org_emftext_language_xpath2_RangeExpr1273);
                    a2_0=parse_org_emftext_language_xpath2_RangeExprChild();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.RANGE_EXPR__TO), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[600]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[601]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[602]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[603]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[604]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[605]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[606]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[607]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[608]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[609]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[610]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[611]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[612]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[613]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[614]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[615]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[616]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[617]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[618]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[619]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[620]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[621]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[626]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[627]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_emftext_language_xpath2_RangeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_RangeExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_AdditiveExpr"
    // Xpath2.g:2277:1: parse_org_emftext_language_xpath2_AdditiveExpr returns [org.emftext.language.xpath2.AdditiveExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) ) )* ;
    public final org.emftext.language.xpath2.AdditiveExpr parse_org_emftext_language_xpath2_AdditiveExpr() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr element =  null;

        int parse_org_emftext_language_xpath2_AdditiveExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.AdditiveExprChild a0_0 =null;

        org.emftext.language.xpath2.AdditiveExprChild a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xpath2.g:2280:2: ( (a0_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) ) )* )
            // Xpath2.g:2281:2: (a0_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) ) )*
            {
            // Xpath2.g:2281:2: (a0_0= parse_org_emftext_language_xpath2_AdditiveExprChild )
            // Xpath2.g:2282:3: a0_0= parse_org_emftext_language_xpath2_AdditiveExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExprChild_in_parse_org_emftext_language_xpath2_AdditiveExpr1333);
            a0_0=parse_org_emftext_language_xpath2_AdditiveExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[630]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[632]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[633]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[636]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[637]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[638]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[639]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[641]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[642]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[643]);
            	}

            // Xpath2.g:2322:2: ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==18||LA10_0==20) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // Xpath2.g:2323:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) )
            	    {
            	    // Xpath2.g:2323:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild ) )
            	    // Xpath2.g:2324:4: ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild )
            	    {
            	    // Xpath2.g:2324:4: ( (a1= '+' |a2= '-' ) )
            	    // Xpath2.g:2325:5: (a1= '+' |a2= '-' )
            	    {
            	    // Xpath2.g:2325:5: (a1= '+' |a2= '-' )
            	    int alt9=2;
            	    int LA9_0 = input.LA(1);

            	    if ( (LA9_0==18) ) {
            	        alt9=1;
            	    }
            	    else if ( (LA9_0==20) ) {
            	        alt9=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 9, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt9) {
            	        case 1 :
            	            // Xpath2.g:2326:6: a1= '+'
            	            {
            	            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath2_AdditiveExpr1373); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath2.AdditiveOpKind.ADDITION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:2339:12: a2= '-'
            	            {
            	            a2=(Token)match(input,20,FOLLOW_20_in_parse_org_emftext_language_xpath2_AdditiveExpr1392); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_1_0_0_0, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath2.AdditiveOpKind.SUBTRACTION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[644]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[645]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[646]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[647]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[648]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[649]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[650]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[651]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[652]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[653]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[654]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[655]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[656]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[657]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[658]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[659]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[660]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[661]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[662]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[663]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[664]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[665]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[666]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[667]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[668]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[669]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[670]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[671]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[672]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[673]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[674]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[675]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[676]);
            	    			}

            	    // Xpath2.g:2391:4: (a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild )
            	    // Xpath2.g:2392:5: a5_0= parse_org_emftext_language_xpath2_AdditiveExprChild
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExprChild_in_parse_org_emftext_language_xpath2_AdditiveExpr1429);
            	    a5_0=parse_org_emftext_language_xpath2_AdditiveExprChild();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_1_0_0_1, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[677]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[678]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[679]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[680]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[681]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[682]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[683]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[684]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[685]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[686]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[687]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[688]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[689]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[690]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[691]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[692]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[693]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[694]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[695]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[696]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[697]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[698]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[699]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[700]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[701]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[702]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[703]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[704]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[705]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[706]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[707]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[708]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_emftext_language_xpath2_AdditiveExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AdditiveExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralComp"
    // Xpath2.g:2456:1: parse_org_emftext_language_xpath2_GeneralComp returns [org.emftext.language.xpath2.GeneralComp element = null] : ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) ;
    public final org.emftext.language.xpath2.GeneralComp parse_org_emftext_language_xpath2_GeneralComp() throws RecognitionException {
        org.emftext.language.xpath2.GeneralComp element =  null;

        int parse_org_emftext_language_xpath2_GeneralComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xpath2.g:2459:2: ( ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) )
            // Xpath2.g:2460:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            {
            // Xpath2.g:2460:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xpath2.g:2461:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xpath2.g:2461:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt11=6;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt11=1;
                }
                break;
            case 13:
                {
                alt11=2;
                }
                break;
            case 27:
                {
                alt11=3;
                }
                break;
            case 29:
                {
                alt11=4;
                }
                break;
            case 31:
                {
                alt11=5;
                }
                break;
            case 32:
                {
                alt11=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;

            }

            switch (alt11) {
                case 1 :
                    // Xpath2.g:2462:4: a0= '='
                    {
                    a0=(Token)match(input,30,FOLLOW_30_in_parse_org_emftext_language_xpath2_GeneralComp1494); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2475:8: a1= '!='
                    {
                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_GeneralComp1509); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2488:8: a2= '<'
                    {
                    a2=(Token)match(input,27,FOLLOW_27_in_parse_org_emftext_language_xpath2_GeneralComp1524); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:2501:8: a3= '<='
                    {
                    a3=(Token)match(input,29,FOLLOW_29_in_parse_org_emftext_language_xpath2_GeneralComp1539); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:2514:8: a4= '>'
                    {
                    a4=(Token)match(input,31,FOLLOW_31_in_parse_org_emftext_language_xpath2_GeneralComp1554); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:2527:8: a5= '>='
                    {
                    a5=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath2_GeneralComp1569); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[709]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[710]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[711]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[712]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[713]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[714]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[715]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[716]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[717]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[718]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[719]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[720]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[721]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[722]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[723]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[726]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[736]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[737]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[738]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[739]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[740]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[741]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_emftext_language_xpath2_GeneralComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_ValueComp"
    // Xpath2.g:2581:1: parse_org_emftext_language_xpath2_ValueComp returns [org.emftext.language.xpath2.ValueComp element = null] : ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) ;
    public final org.emftext.language.xpath2.ValueComp parse_org_emftext_language_xpath2_ValueComp() throws RecognitionException {
        org.emftext.language.xpath2.ValueComp element =  null;

        int parse_org_emftext_language_xpath2_ValueComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xpath2.g:2584:2: ( ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) )
            // Xpath2.g:2585:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            {
            // Xpath2.g:2585:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            // Xpath2.g:2586:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            {
            // Xpath2.g:2586:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            int alt12=6;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt12=1;
                }
                break;
            case 64:
                {
                alt12=2;
                }
                break;
            case 62:
                {
                alt12=3;
                }
                break;
            case 61:
                {
                alt12=4;
                }
                break;
            case 56:
                {
                alt12=5;
                }
                break;
            case 55:
                {
                alt12=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;

            }

            switch (alt12) {
                case 1 :
                    // Xpath2.g:2587:4: a0= 'eq'
                    {
                    a0=(Token)match(input,50,FOLLOW_50_in_parse_org_emftext_language_xpath2_ValueComp1614); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2600:8: a1= 'ne'
                    {
                    a1=(Token)match(input,64,FOLLOW_64_in_parse_org_emftext_language_xpath2_ValueComp1629); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2613:8: a2= 'lt'
                    {
                    a2=(Token)match(input,62,FOLLOW_62_in_parse_org_emftext_language_xpath2_ValueComp1644); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:2626:8: a3= 'le'
                    {
                    a3=(Token)match(input,61,FOLLOW_61_in_parse_org_emftext_language_xpath2_ValueComp1659); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:2639:8: a4= 'gt'
                    {
                    a4=(Token)match(input,56,FOLLOW_56_in_parse_org_emftext_language_xpath2_ValueComp1674); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:2652:8: a5= 'ge'
                    {
                    a5=(Token)match(input,55,FOLLOW_55_in_parse_org_emftext_language_xpath2_ValueComp1689); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[742]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[743]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[744]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[745]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[746]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[747]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[748]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[749]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[750]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[751]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[752]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[753]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[754]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[755]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[756]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[757]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[758]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[770]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[771]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[772]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[773]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[774]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_emftext_language_xpath2_ValueComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ValueComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeComp"
    // Xpath2.g:2706:1: parse_org_emftext_language_xpath2_NodeComp returns [org.emftext.language.xpath2.NodeComp element = null] : ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) ;
    public final org.emftext.language.xpath2.NodeComp parse_org_emftext_language_xpath2_NodeComp() throws RecognitionException {
        org.emftext.language.xpath2.NodeComp element =  null;

        int parse_org_emftext_language_xpath2_NodeComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xpath2.g:2709:2: ( ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) )
            // Xpath2.g:2710:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            {
            // Xpath2.g:2710:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            // Xpath2.g:2711:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            {
            // Xpath2.g:2711:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            int alt13=3;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt13=1;
                }
                break;
            case 28:
                {
                alt13=2;
                }
                break;
            case 33:
                {
                alt13=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;

            }

            switch (alt13) {
                case 1 :
                    // Xpath2.g:2712:4: a0= 'is'
                    {
                    a0=(Token)match(input,59,FOLLOW_59_in_parse_org_emftext_language_xpath2_NodeComp1734); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.IS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2725:8: a1= '<<'
                    {
                    a1=(Token)match(input,28,FOLLOW_28_in_parse_org_emftext_language_xpath2_NodeComp1749); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.PRECEDES_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2738:8: a2= '>>'
                    {
                    a2=(Token)match(input,33,FOLLOW_33_in_parse_org_emftext_language_xpath2_NodeComp1764); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.FOLLOWS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[775]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[776]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[780]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[782]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[783]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[784]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[785]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[786]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[787]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[788]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[789]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[790]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[791]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[792]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[793]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[794]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[795]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[796]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[797]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[798]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[799]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[800]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[801]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[802]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[803]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[804]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[805]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[806]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[807]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_emftext_language_xpath2_NodeComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_SinglePathExpr"
    // Xpath2.g:2792:1: parse_org_emftext_language_xpath2_SinglePathExpr returns [org.emftext.language.xpath2.SinglePathExpr element = null] : a0= '/' ( (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr ) )? ;
    public final org.emftext.language.xpath2.SinglePathExpr parse_org_emftext_language_xpath2_SinglePathExpr() throws RecognitionException {
        org.emftext.language.xpath2.SinglePathExpr element =  null;

        int parse_org_emftext_language_xpath2_SinglePathExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.RelativePathExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xpath2.g:2795:2: (a0= '/' ( (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr ) )? )
            // Xpath2.g:2796:2: a0= '/' ( (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr ) )?
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath2_SinglePathExpr1800); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSinglePathExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[808]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[809]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[810]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[811]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[812]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[813]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[814]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[815]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[816]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[817]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[820]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[823]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[824]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[825]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[826]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[827]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[828]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[829]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[830]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[831]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[832]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[833]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[834]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[835]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[836]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[837]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSinglePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[838]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[839]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[840]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[841]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[842]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[843]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[845]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[846]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[847]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[848]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[849]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[853]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[854]);
            	}

            // Xpath2.g:2856:2: ( (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0 >= DECIMAL_LITERAL && LA14_0 <= INTEGER_LITERAL)||(LA14_0 >= NCNAME && LA14_0 <= TEXT)||(LA14_0 >= 14 && LA14_0 <= 15)||LA14_0==17||(LA14_0 >= 21 && LA14_0 <= 22)||LA14_0==35||(LA14_0 >= 38 && LA14_0 <= 39)||(LA14_0 >= 41 && LA14_0 <= 47)||(LA14_0 >= 52 && LA14_0 <= 53)||LA14_0==63||LA14_0==65||(LA14_0 >= 67 && LA14_0 <= 70)||(LA14_0 >= 73 && LA14_0 <= 75)||LA14_0==77) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // Xpath2.g:2857:3: (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr )
                    {
                    // Xpath2.g:2857:3: (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr )
                    // Xpath2.g:2858:4: a1_0= parse_org_emftext_language_xpath2_RelativePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_SinglePathExpr1823);
                    a1_0=parse_org_emftext_language_xpath2_RelativePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSinglePathExpr();
                    					startIncompleteElement(element);
                    				}
                    				if (a1_0 != null) {
                    					if (a1_0 != null) {
                    						Object value = a1_0;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_PATH_EXPR__RELATIVE_PATH_EXPR), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_1, a1_0, true);
                    					copyLocalizationInfos(a1_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[855]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[856]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[863]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[864]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[865]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[866]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[868]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[869]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[870]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_emftext_language_xpath2_SinglePathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SinglePathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_DoublePathExpr"
    // Xpath2.g:2901:1: parse_org_emftext_language_xpath2_DoublePathExpr returns [org.emftext.language.xpath2.DoublePathExpr element = null] : a0= '//' (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr ) ;
    public final org.emftext.language.xpath2.DoublePathExpr parse_org_emftext_language_xpath2_DoublePathExpr() throws RecognitionException {
        org.emftext.language.xpath2.DoublePathExpr element =  null;

        int parse_org_emftext_language_xpath2_DoublePathExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.RelativePathExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xpath2.g:2904:2: (a0= '//' (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr ) )
            // Xpath2.g:2905:2: a0= '//' (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr )
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_org_emftext_language_xpath2_DoublePathExpr1864); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDoublePathExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[871]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[872]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[873]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[874]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[875]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[876]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[879]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[880]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[884]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[885]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[886]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[887]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[888]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[889]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[890]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[891]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[892]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[893]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[894]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[895]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[896]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[897]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[900]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoublePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[901]);
            	}

            // Xpath2.g:2949:2: (a1_0= parse_org_emftext_language_xpath2_RelativePathExpr )
            // Xpath2.g:2950:3: a1_0= parse_org_emftext_language_xpath2_RelativePathExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_DoublePathExpr1882);
            a1_0=parse_org_emftext_language_xpath2_RelativePathExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDoublePathExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_PATH_EXPR__RELATIVE_PATH_EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[902]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[903]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[904]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[905]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[906]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[907]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[908]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[911]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[912]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[913]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[914]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[915]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[916]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[917]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_emftext_language_xpath2_DoublePathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DoublePathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_RelativePathExpr"
    // Xpath2.g:2992:1: parse_org_emftext_language_xpath2_RelativePathExpr returns [org.emftext.language.xpath2.RelativePathExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_StepExpr ) ( (a1_0= parse_org_emftext_language_xpath2_TailPathExpr ) )* ;
    public final org.emftext.language.xpath2.RelativePathExpr parse_org_emftext_language_xpath2_RelativePathExpr() throws RecognitionException {
        org.emftext.language.xpath2.RelativePathExpr element =  null;

        int parse_org_emftext_language_xpath2_RelativePathExpr_StartIndex = input.index();

        org.emftext.language.xpath2.StepExpr a0_0 =null;

        org.emftext.language.xpath2.TailPathExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xpath2.g:2995:2: ( (a0_0= parse_org_emftext_language_xpath2_StepExpr ) ( (a1_0= parse_org_emftext_language_xpath2_TailPathExpr ) )* )
            // Xpath2.g:2996:2: (a0_0= parse_org_emftext_language_xpath2_StepExpr ) ( (a1_0= parse_org_emftext_language_xpath2_TailPathExpr ) )*
            {
            // Xpath2.g:2996:2: (a0_0= parse_org_emftext_language_xpath2_StepExpr )
            // Xpath2.g:2997:3: a0_0= parse_org_emftext_language_xpath2_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_RelativePathExpr1919);
            a0_0=parse_org_emftext_language_xpath2_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRelativePathExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.RELATIVE_PATH_EXPR__HEAD), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[919]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[920]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[922]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[923]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[924]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[925]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[926]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[927]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[935]);
            	}

            // Xpath2.g:3039:2: ( (a1_0= parse_org_emftext_language_xpath2_TailPathExpr ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( ((LA15_0 >= 23 && LA15_0 <= 24)) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // Xpath2.g:3040:3: (a1_0= parse_org_emftext_language_xpath2_TailPathExpr )
            	    {
            	    // Xpath2.g:3040:3: (a1_0= parse_org_emftext_language_xpath2_TailPathExpr )
            	    // Xpath2.g:3041:4: a1_0= parse_org_emftext_language_xpath2_TailPathExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TailPathExpr_in_parse_org_emftext_language_xpath2_RelativePathExpr1946);
            	    a1_0=parse_org_emftext_language_xpath2_TailPathExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRelativePathExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.RELATIVE_PATH_EXPR__TAIL, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[937]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[938]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[939]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[943]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[945]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[946]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[947]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[948]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[949]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[950]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[951]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[952]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[953]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_emftext_language_xpath2_RelativePathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_RelativePathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_SingleTailPathExpr"
    // Xpath2.g:3086:1: parse_org_emftext_language_xpath2_SingleTailPathExpr returns [org.emftext.language.xpath2.SingleTailPathExpr element = null] : a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) ;
    public final org.emftext.language.xpath2.SingleTailPathExpr parse_org_emftext_language_xpath2_SingleTailPathExpr() throws RecognitionException {
        org.emftext.language.xpath2.SingleTailPathExpr element =  null;

        int parse_org_emftext_language_xpath2_SingleTailPathExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xpath2.g:3089:2: (a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) )
            // Xpath2.g:3090:2: a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            {
            a0=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath2_SingleTailPathExpr1987); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleTailPathExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[954]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[955]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[956]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[957]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[958]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[959]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[961]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[962]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[975]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[976]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[982]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSingleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[984]);
            	}

            // Xpath2.g:3134:2: (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            // Xpath2.g:3135:3: a1_0= parse_org_emftext_language_xpath2_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_SingleTailPathExpr2005);
            a1_0=parse_org_emftext_language_xpath2_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleTailPathExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TAIL_PATH_EXPR__STEP_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[985]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[986]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[987]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[988]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[989]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[990]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[991]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[992]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[993]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[994]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[995]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[996]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[997]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[998]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[999]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1000]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1001]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1002]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_emftext_language_xpath2_SingleTailPathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SingleTailPathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_DoubleTailPathExpr"
    // Xpath2.g:3179:1: parse_org_emftext_language_xpath2_DoubleTailPathExpr returns [org.emftext.language.xpath2.DoubleTailPathExpr element = null] : a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) ;
    public final org.emftext.language.xpath2.DoubleTailPathExpr parse_org_emftext_language_xpath2_DoubleTailPathExpr() throws RecognitionException {
        org.emftext.language.xpath2.DoubleTailPathExpr element =  null;

        int parse_org_emftext_language_xpath2_DoubleTailPathExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xpath2.g:3182:2: (a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) )
            // Xpath2.g:3183:2: a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            {
            a0=(Token)match(input,24,FOLLOW_24_in_parse_org_emftext_language_xpath2_DoubleTailPathExpr2038); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDoubleTailPathExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1003]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1004]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1005]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1006]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1007]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1008]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1009]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1010]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1011]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1012]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1013]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1014]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1015]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1016]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1017]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1018]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1019]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1020]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1021]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1022]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1023]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1024]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1025]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1026]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1027]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1028]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1029]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1030]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1031]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDoubleTailPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1033]);
            	}

            // Xpath2.g:3227:2: (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            // Xpath2.g:3228:3: a1_0= parse_org_emftext_language_xpath2_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_DoubleTailPathExpr2056);
            a1_0=parse_org_emftext_language_xpath2_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDoubleTailPathExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_TAIL_PATH_EXPR__STEP_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1034]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1043]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1044]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1045]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1046]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1047]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1048]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1049]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1050]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1051]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_emftext_language_xpath2_DoubleTailPathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DoubleTailPathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_AxisStep"
    // Xpath2.g:3272:1: parse_org_emftext_language_xpath2_AxisStep returns [org.emftext.language.xpath2.AxisStep element = null] : (a0_0= parse_org_emftext_language_xpath2_DirectionalStep ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.AxisStep parse_org_emftext_language_xpath2_AxisStep() throws RecognitionException {
        org.emftext.language.xpath2.AxisStep element =  null;

        int parse_org_emftext_language_xpath2_AxisStep_StartIndex = input.index();

        org.emftext.language.xpath2.DirectionalStep a0_0 =null;

        org.emftext.language.xpath2.Predicate a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xpath2.g:3275:2: ( (a0_0= parse_org_emftext_language_xpath2_DirectionalStep ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:3276:2: (a0_0= parse_org_emftext_language_xpath2_DirectionalStep ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:3276:2: (a0_0= parse_org_emftext_language_xpath2_DirectionalStep )
            // Xpath2.g:3277:3: a0_0= parse_org_emftext_language_xpath2_DirectionalStep
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DirectionalStep_in_parse_org_emftext_language_xpath2_AxisStep2093);
            a0_0=parse_org_emftext_language_xpath2_DirectionalStep();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAxisStep();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.AXIS_STEP__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1052]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1053]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1054]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1055]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1056]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1057]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1058]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1059]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1060]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1061]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1062]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1063]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1064]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1065]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1066]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1067]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1068]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1069]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1070]);
            	}

            // Xpath2.g:3320:2: ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==36) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // Xpath2.g:3321:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:3321:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:3322:4: a1_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AxisStep2120);
            	    a1_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAxisStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AXIS_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1071]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1072]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1073]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1074]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1075]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1076]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1077]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1078]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1079]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1080]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1081]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1082]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1083]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1084]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1085]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1086]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1087]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1088]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1089]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_emftext_language_xpath2_AxisStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AxisStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralForwardStep"
    // Xpath2.g:3368:1: parse_org_emftext_language_xpath2_GeneralForwardStep returns [org.emftext.language.xpath2.GeneralForwardStep element = null] : (a0_0= parse_org_emftext_language_xpath2_ForwardAxis ) (a1_0= parse_org_emftext_language_xpath2_NodeTest ) ;
    public final org.emftext.language.xpath2.GeneralForwardStep parse_org_emftext_language_xpath2_GeneralForwardStep() throws RecognitionException {
        org.emftext.language.xpath2.GeneralForwardStep element =  null;

        int parse_org_emftext_language_xpath2_GeneralForwardStep_StartIndex = input.index();

        org.emftext.language.xpath2.ForwardAxis a0_0 =null;

        org.emftext.language.xpath2.NodeTest a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xpath2.g:3371:2: ( (a0_0= parse_org_emftext_language_xpath2_ForwardAxis ) (a1_0= parse_org_emftext_language_xpath2_NodeTest ) )
            // Xpath2.g:3372:2: (a0_0= parse_org_emftext_language_xpath2_ForwardAxis ) (a1_0= parse_org_emftext_language_xpath2_NodeTest )
            {
            // Xpath2.g:3372:2: (a0_0= parse_org_emftext_language_xpath2_ForwardAxis )
            // Xpath2.g:3373:3: a0_0= parse_org_emftext_language_xpath2_ForwardAxis
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForwardAxis_in_parse_org_emftext_language_xpath2_GeneralForwardStep2165);
            a0_0=parse_org_emftext_language_xpath2_ForwardAxis();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1090]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1091]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1092]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1093]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1094]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1095]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1096]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1097]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1098]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1099]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1100]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1101]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1102]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1103]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1104]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1105]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1106]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1107]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1108]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1109]);
            	}

            // Xpath2.g:3417:2: (a1_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:3418:3: a1_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralForwardStep2187);
            a1_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1110]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1111]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1112]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1113]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1114]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1115]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1116]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1117]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1124]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1126]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1127]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1128]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_emftext_language_xpath2_GeneralForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_AbbrevForwardStep"
    // Xpath2.g:3463:1: parse_org_emftext_language_xpath2_AbbrevForwardStep returns [org.emftext.language.xpath2.AbbrevForwardStep element = null] : ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest ) ;
    public final org.emftext.language.xpath2.AbbrevForwardStep parse_org_emftext_language_xpath2_AbbrevForwardStep() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevForwardStep element =  null;

        int parse_org_emftext_language_xpath2_AbbrevForwardStep_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.NodeTest a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xpath2.g:3466:2: ( ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest ) )
            // Xpath2.g:3467:2: ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest )
            {
            // Xpath2.g:3467:2: ( (a0= '@' )? )
            // Xpath2.g:3468:3: (a0= '@' )?
            {
            // Xpath2.g:3468:3: (a0= '@' )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==35) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // Xpath2.g:3469:4: a0= '@'
                    {
                    a0=(Token)match(input,35,FOLLOW_35_in_parse_org_emftext_language_xpath2_AbbrevForwardStep2229); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevForwardStep();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__AT), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_21_0_0_0, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__AT), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1129]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1130]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1131]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1132]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1133]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1134]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1135]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1136]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1137]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1138]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1139]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1140]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1141]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1142]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1143]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1144]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1145]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1146]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1147]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1148]);
            	}

            // Xpath2.g:3512:2: (a3_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:3513:3: a3_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_AbbrevForwardStep2254);
            a3_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevForwardStep();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__AT), value);
            				}
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_21_0_0_1, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1149]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1150]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1151]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1152]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1153]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1154]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1155]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1156]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1157]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1158]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1159]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1160]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1161]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1162]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1163]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1164]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1165]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1166]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1167]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_emftext_language_xpath2_AbbrevForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AbbrevForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_ForwardAxis"
    // Xpath2.g:3563:1: parse_org_emftext_language_xpath2_ForwardAxis returns [org.emftext.language.xpath2.ForwardAxis element = null] : ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' ;
    public final org.emftext.language.xpath2.ForwardAxis parse_org_emftext_language_xpath2_ForwardAxis() throws RecognitionException {
        org.emftext.language.xpath2.ForwardAxis element =  null;

        int parse_org_emftext_language_xpath2_ForwardAxis_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a10=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xpath2.g:3566:2: ( ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' )
            // Xpath2.g:3567:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::'
            {
            // Xpath2.g:3567:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) )
            // Xpath2.g:3568:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            {
            // Xpath2.g:3568:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            int alt18=8;
            switch ( input.LA(1) ) {
            case 42:
                {
                alt18=1;
                }
                break;
            case 44:
                {
                alt18=2;
                }
                break;
            case 41:
                {
                alt18=3;
                }
                break;
            case 75:
                {
                alt18=4;
                }
                break;
            case 45:
                {
                alt18=5;
                }
                break;
            case 53:
                {
                alt18=6;
                }
                break;
            case 52:
                {
                alt18=7;
                }
                break;
            case 63:
                {
                alt18=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }

            switch (alt18) {
                case 1 :
                    // Xpath2.g:3569:4: a0= 'child'
                    {
                    a0=(Token)match(input,42,FOLLOW_42_in_parse_org_emftext_language_xpath2_ForwardAxis2296); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.CHILD_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:3582:8: a1= 'descendant'
                    {
                    a1=(Token)match(input,44,FOLLOW_44_in_parse_org_emftext_language_xpath2_ForwardAxis2311); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.DESCENDANT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:3595:8: a2= 'attribute'
                    {
                    a2=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_ForwardAxis2326); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.ATTRIBUTE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:3608:8: a3= 'self'
                    {
                    a3=(Token)match(input,75,FOLLOW_75_in_parse_org_emftext_language_xpath2_ForwardAxis2341); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:3621:8: a4= 'descendant-or-self'
                    {
                    a4=(Token)match(input,45,FOLLOW_45_in_parse_org_emftext_language_xpath2_ForwardAxis2356); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.DESCENDANT_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:3634:8: a5= 'following-sibling'
                    {
                    a5=(Token)match(input,53,FOLLOW_53_in_parse_org_emftext_language_xpath2_ForwardAxis2371); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.FOLLOWING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 7 :
                    // Xpath2.g:3647:8: a6= 'following'
                    {
                    a6=(Token)match(input,52,FOLLOW_52_in_parse_org_emftext_language_xpath2_ForwardAxis2386); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.FOLLOWING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 8 :
                    // Xpath2.g:3660:8: a7= 'namespace'
                    {
                    a7=(Token)match(input,63,FOLLOW_63_in_parse_org_emftext_language_xpath2_ForwardAxis2401); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.NAMESPACE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FORWARD_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1168]);
            	}

            a10=(Token)match(input,26,FOLLOW_26_in_parse_org_emftext_language_xpath2_ForwardAxis2422); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForwardAxis();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1169]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1170]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1171]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1172]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1173]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1174]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1175]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1176]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1177]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1178]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1179]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1180]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1181]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1182]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1183]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1184]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1185]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1186]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1187]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1188]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_emftext_language_xpath2_ForwardAxis_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ForwardAxis"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralReverseStep"
    // Xpath2.g:3715:1: parse_org_emftext_language_xpath2_GeneralReverseStep returns [org.emftext.language.xpath2.GeneralReverseStep element = null] : (a0_0= parse_org_emftext_language_xpath2_ReverseAxis ) (a1_0= parse_org_emftext_language_xpath2_NodeTest ) ;
    public final org.emftext.language.xpath2.GeneralReverseStep parse_org_emftext_language_xpath2_GeneralReverseStep() throws RecognitionException {
        org.emftext.language.xpath2.GeneralReverseStep element =  null;

        int parse_org_emftext_language_xpath2_GeneralReverseStep_StartIndex = input.index();

        org.emftext.language.xpath2.ReverseAxis a0_0 =null;

        org.emftext.language.xpath2.NodeTest a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xpath2.g:3718:2: ( (a0_0= parse_org_emftext_language_xpath2_ReverseAxis ) (a1_0= parse_org_emftext_language_xpath2_NodeTest ) )
            // Xpath2.g:3719:2: (a0_0= parse_org_emftext_language_xpath2_ReverseAxis ) (a1_0= parse_org_emftext_language_xpath2_NodeTest )
            {
            // Xpath2.g:3719:2: (a0_0= parse_org_emftext_language_xpath2_ReverseAxis )
            // Xpath2.g:3720:3: a0_0= parse_org_emftext_language_xpath2_ReverseAxis
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ReverseAxis_in_parse_org_emftext_language_xpath2_GeneralReverseStep2455);
            a0_0=parse_org_emftext_language_xpath2_ReverseAxis();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_23_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1189]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1190]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1191]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1192]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1193]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1194]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1195]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1196]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1197]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1198]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1199]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1200]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1201]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1202]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1203]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1204]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1205]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1206]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1207]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1208]);
            	}

            // Xpath2.g:3764:2: (a1_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:3765:3: a1_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralReverseStep2477);
            a1_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_23_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1209]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1210]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1211]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1212]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1213]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1214]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1215]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1216]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1217]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1218]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1219]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1220]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1221]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1222]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1223]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1224]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1225]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1226]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1227]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_emftext_language_xpath2_GeneralReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_AbbrevReverseStep"
    // Xpath2.g:3810:1: parse_org_emftext_language_xpath2_AbbrevReverseStep returns [org.emftext.language.xpath2.AbbrevReverseStep element = null] : a0= '..' ;
    public final org.emftext.language.xpath2.AbbrevReverseStep parse_org_emftext_language_xpath2_AbbrevReverseStep() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevReverseStep element =  null;

        int parse_org_emftext_language_xpath2_AbbrevReverseStep_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xpath2.g:3813:2: (a0= '..' )
            // Xpath2.g:3814:2: a0= '..'
            {
            a0=(Token)match(input,22,FOLLOW_22_in_parse_org_emftext_language_xpath2_AbbrevReverseStep2510); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevReverseStep();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_24_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1228]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1229]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1230]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1231]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1232]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1233]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1234]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1235]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1236]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1237]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1238]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1239]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1240]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1241]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1242]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1243]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1244]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1245]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1246]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_emftext_language_xpath2_AbbrevReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AbbrevReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_ReverseAxis"
    // Xpath2.g:3848:1: parse_org_emftext_language_xpath2_ReverseAxis returns [org.emftext.language.xpath2.ReverseAxis element = null] : ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' ;
    public final org.emftext.language.xpath2.ReverseAxis parse_org_emftext_language_xpath2_ReverseAxis() throws RecognitionException {
        org.emftext.language.xpath2.ReverseAxis element =  null;

        int parse_org_emftext_language_xpath2_ReverseAxis_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xpath2.g:3851:2: ( ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' )
            // Xpath2.g:3852:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::'
            {
            // Xpath2.g:3852:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) )
            // Xpath2.g:3853:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            {
            // Xpath2.g:3853:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            int alt19=5;
            switch ( input.LA(1) ) {
            case 67:
                {
                alt19=1;
                }
                break;
            case 38:
                {
                alt19=2;
                }
                break;
            case 69:
                {
                alt19=3;
                }
                break;
            case 68:
                {
                alt19=4;
                }
                break;
            case 39:
                {
                alt19=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }

            switch (alt19) {
                case 1 :
                    // Xpath2.g:3854:4: a0= 'parent'
                    {
                    a0=(Token)match(input,67,FOLLOW_67_in_parse_org_emftext_language_xpath2_ReverseAxis2548); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createReverseAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PARENT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.REVERSE_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:3867:8: a1= 'ancestor'
                    {
                    a1=(Token)match(input,38,FOLLOW_38_in_parse_org_emftext_language_xpath2_ReverseAxis2563); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createReverseAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.ANCESTOR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.REVERSE_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:3880:8: a2= 'preceding-sibling'
                    {
                    a2=(Token)match(input,69,FOLLOW_69_in_parse_org_emftext_language_xpath2_ReverseAxis2578); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createReverseAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PRECEDING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.REVERSE_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:3893:8: a3= 'preceding'
                    {
                    a3=(Token)match(input,68,FOLLOW_68_in_parse_org_emftext_language_xpath2_ReverseAxis2593); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createReverseAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PRECEDING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.REVERSE_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:3906:8: a4= 'ancestor-or-self'
                    {
                    a4=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath2_ReverseAxis2608); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createReverseAxis();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.ANCESTOR_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.REVERSE_AXIS__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1247]);
            	}

            a7=(Token)match(input,26,FOLLOW_26_in_parse_org_emftext_language_xpath2_ReverseAxis2629); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createReverseAxis();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1248]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1249]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1250]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1251]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1252]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1253]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1254]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1255]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1256]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1257]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1258]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1259]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1260]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1261]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1262]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1263]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1264]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1265]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1266]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1267]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_emftext_language_xpath2_ReverseAxis_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ReverseAxis"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeKindTest"
    // Xpath2.g:3961:1: parse_org_emftext_language_xpath2_NodeKindTest returns [org.emftext.language.xpath2.NodeKindTest element = null] : (a0_0= parse_org_emftext_language_xpath2_KindTest ) ;
    public final org.emftext.language.xpath2.NodeKindTest parse_org_emftext_language_xpath2_NodeKindTest() throws RecognitionException {
        org.emftext.language.xpath2.NodeKindTest element =  null;

        int parse_org_emftext_language_xpath2_NodeKindTest_StartIndex = input.index();

        org.emftext.language.xpath2.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xpath2.g:3964:2: ( (a0_0= parse_org_emftext_language_xpath2_KindTest ) )
            // Xpath2.g:3965:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            {
            // Xpath2.g:3965:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            // Xpath2.g:3966:3: a0_0= parse_org_emftext_language_xpath2_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_NodeKindTest2662);
            a0_0=parse_org_emftext_language_xpath2_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1268]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1269]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1270]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1271]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1272]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1273]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1274]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1275]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1276]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1277]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1278]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1279]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1280]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1281]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1282]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1283]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1284]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1285]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1286]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_emftext_language_xpath2_NodeKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_QNameTest"
    // Xpath2.g:4011:1: parse_org_emftext_language_xpath2_QNameTest returns [org.emftext.language.xpath2.QNameTest element = null] : (a0_0= parse_org_emftext_language_xpath2_QName ) ;
    public final org.emftext.language.xpath2.QNameTest parse_org_emftext_language_xpath2_QNameTest() throws RecognitionException {
        org.emftext.language.xpath2.QNameTest element =  null;

        int parse_org_emftext_language_xpath2_QNameTest_StartIndex = input.index();

        org.emftext.language.xpath2.QName a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xpath2.g:4014:2: ( (a0_0= parse_org_emftext_language_xpath2_QName ) )
            // Xpath2.g:4015:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            {
            // Xpath2.g:4015:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:4016:3: a0_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_QNameTest2699);
            a0_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQNameTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_27_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1287]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1288]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1289]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1290]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1291]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1292]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1293]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1294]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1295]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1296]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1297]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1298]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1299]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1300]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1301]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1302]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1303]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1304]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1305]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_emftext_language_xpath2_QNameTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QNameTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyWildcard"
    // Xpath2.g:4061:1: parse_org_emftext_language_xpath2_AnyWildcard returns [org.emftext.language.xpath2.AnyWildcard element = null] : a0= '*' ;
    public final org.emftext.language.xpath2.AnyWildcard parse_org_emftext_language_xpath2_AnyWildcard() throws RecognitionException {
        org.emftext.language.xpath2.AnyWildcard element =  null;

        int parse_org_emftext_language_xpath2_AnyWildcard_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xpath2.g:4064:2: (a0= '*' )
            // Xpath2.g:4065:2: a0= '*'
            {
            a0=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_AnyWildcard2732); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1306]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1307]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1308]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1309]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1310]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1311]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1312]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1313]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1314]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1315]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1316]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1317]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1318]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1319]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1320]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1321]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1322]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1323]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1324]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_emftext_language_xpath2_AnyWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_LocalNameWildcard"
    // Xpath2.g:4099:1: parse_org_emftext_language_xpath2_LocalNameWildcard returns [org.emftext.language.xpath2.LocalNameWildcard element = null] : (a0= TEXT ) a1= ':' a2= '*' ;
    public final org.emftext.language.xpath2.LocalNameWildcard parse_org_emftext_language_xpath2_LocalNameWildcard() throws RecognitionException {
        org.emftext.language.xpath2.LocalNameWildcard element =  null;

        int parse_org_emftext_language_xpath2_LocalNameWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xpath2.g:4102:2: ( (a0= TEXT ) a1= ':' a2= '*' )
            // Xpath2.g:4103:2: (a0= TEXT ) a1= ':' a2= '*'
            {
            // Xpath2.g:4103:2: (a0= TEXT )
            // Xpath2.g:4104:3: a0= TEXT
            {
            a0=(Token)match(input,TEXT,FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_LocalNameWildcard2765); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TEXT");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.LOCAL_NAME_WILDCARD__NAMESPACE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.LOCAL_NAME_WILDCARD__NAMESPACE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_29_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1325]);
            	}

            a1=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_LocalNameWildcard2786); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_29_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1326]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_LocalNameWildcard2800); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_29_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1327]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1328]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1329]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1330]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1331]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1332]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1333]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1334]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1335]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1336]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1337]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1338]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1339]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1340]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1341]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1342]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1343]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1344]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1345]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_emftext_language_xpath2_LocalNameWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_LocalNameWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_NamespaceWildcard"
    // Xpath2.g:4187:1: parse_org_emftext_language_xpath2_NamespaceWildcard returns [org.emftext.language.xpath2.NamespaceWildcard element = null] : a0= '*' a1= ':' (a2= TEXT ) ;
    public final org.emftext.language.xpath2.NamespaceWildcard parse_org_emftext_language_xpath2_NamespaceWildcard() throws RecognitionException {
        org.emftext.language.xpath2.NamespaceWildcard element =  null;

        int parse_org_emftext_language_xpath2_NamespaceWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xpath2.g:4190:2: (a0= '*' a1= ':' (a2= TEXT ) )
            // Xpath2.g:4191:2: a0= '*' a1= ':' (a2= TEXT )
            {
            a0=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_NamespaceWildcard2829); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1346]);
            	}

            a1=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_NamespaceWildcard2843); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1347]);
            	}

            // Xpath2.g:4219:2: (a2= TEXT )
            // Xpath2.g:4220:3: a2= TEXT
            {
            a2=(Token)match(input,TEXT,FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_NamespaceWildcard2861); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("TEXT");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAMESPACE_WILDCARD__LOCAL_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAMESPACE_WILDCARD__LOCAL_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1348]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1349]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1350]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1351]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1352]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1353]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1354]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1355]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1356]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1357]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1358]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1359]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1360]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1361]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1362]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1363]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1364]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1365]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1366]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_emftext_language_xpath2_NamespaceWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NamespaceWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_FilterExpr"
    // Xpath2.g:4275:1: parse_org_emftext_language_xpath2_FilterExpr returns [org.emftext.language.xpath2.FilterExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.FilterExpr parse_org_emftext_language_xpath2_FilterExpr() throws RecognitionException {
        org.emftext.language.xpath2.FilterExpr element =  null;

        int parse_org_emftext_language_xpath2_FilterExpr_StartIndex = input.index();

        org.emftext.language.xpath2.PrimaryExpr a0_0 =null;

        org.emftext.language.xpath2.Predicate a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xpath2.g:4278:2: ( (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:4279:2: (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:4279:2: (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr )
            // Xpath2.g:4280:3: a0_0= parse_org_emftext_language_xpath2_PrimaryExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PrimaryExpr_in_parse_org_emftext_language_xpath2_FilterExpr2901);
            a0_0=parse_org_emftext_language_xpath2_PrimaryExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFilterExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FILTER_EXPR__PRIMARY_EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_31_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1367]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1368]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1369]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1370]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1371]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1372]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1373]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1374]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1375]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1376]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1377]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1378]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1379]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1380]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1381]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1382]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1383]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1384]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1385]);
            	}

            // Xpath2.g:4323:2: ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==36) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // Xpath2.g:4324:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:4324:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:4325:4: a1_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_FilterExpr2928);
            	    a1_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFilterExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FILTER_EXPR__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_31_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1386]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1387]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1388]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1389]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1390]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1391]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1392]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1393]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1394]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1395]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1396]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1397]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1398]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1399]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1400]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1401]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1402]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1403]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1404]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_emftext_language_xpath2_FilterExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_FilterExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_Predicate"
    // Xpath2.g:4371:1: parse_org_emftext_language_xpath2_Predicate returns [org.emftext.language.xpath2.Predicate element = null] : a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']' ;
    public final org.emftext.language.xpath2.Predicate parse_org_emftext_language_xpath2_Predicate() throws RecognitionException {
        org.emftext.language.xpath2.Predicate element =  null;

        int parse_org_emftext_language_xpath2_Predicate_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xpath2.g:4374:2: (a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']' )
            // Xpath2.g:4375:2: a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']'
            {
            a0=(Token)match(input,36,FOLLOW_36_in_parse_org_emftext_language_xpath2_Predicate2969); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_32_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1405]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1406]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1407]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1408]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1409]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1410]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1411]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1412]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1413]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1414]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1415]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1416]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1417]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1418]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1419]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1420]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1421]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1422]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1423]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1424]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1425]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1426]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1427]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1428]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1429]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1430]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1431]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1432]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1433]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1434]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1435]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1436]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1437]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1438]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1439]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1440]);
            	}

            // Xpath2.g:4424:2: (a1_0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:4425:3: a1_0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_Predicate2987);
            a1_0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.PREDICATE__EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_32_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1441]);
            	}

            a2=(Token)match(input,37,FOLLOW_37_in_parse_org_emftext_language_xpath2_Predicate3005); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_32_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1442]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1443]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1444]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1445]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1446]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1447]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1448]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1449]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1450]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1451]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1452]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1453]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1454]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1455]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1456]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1457]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1458]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1459]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1460]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_emftext_language_xpath2_Predicate_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Predicate"



    // $ANTLR start "parse_org_emftext_language_xpath2_VarRef"
    // Xpath2.g:4484:1: parse_org_emftext_language_xpath2_VarRef returns [org.emftext.language.xpath2.VarRef element = null] : a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName ) ;
    public final org.emftext.language.xpath2.VarRef parse_org_emftext_language_xpath2_VarRef() throws RecognitionException {
        org.emftext.language.xpath2.VarRef element =  null;

        int parse_org_emftext_language_xpath2_VarRef_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.VarName a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xpath2.g:4487:2: (a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName ) )
            // Xpath2.g:4488:2: a0= '$' (a1_0= parse_org_emftext_language_xpath2_VarName )
            {
            a0=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_VarRef3034); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarRef();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_33_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getVarRef(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1461]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getVarRef(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1462]);
            	}

            // Xpath2.g:4503:2: (a1_0= parse_org_emftext_language_xpath2_VarName )
            // Xpath2.g:4504:3: a1_0= parse_org_emftext_language_xpath2_VarName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_VarRef3052);
            a1_0=parse_org_emftext_language_xpath2_VarName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarRef();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_REF__VAR_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_33_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1463]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1464]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1465]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1466]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1467]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1468]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1469]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1470]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1471]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1472]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1473]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1474]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1475]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1476]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1477]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1478]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1479]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1480]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1481]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_emftext_language_xpath2_VarRef_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_VarRef"



    // $ANTLR start "parse_org_emftext_language_xpath2_VarName"
    // Xpath2.g:4549:1: parse_org_emftext_language_xpath2_VarName returns [org.emftext.language.xpath2.VarName element = null] : (a0_0= parse_org_emftext_language_xpath2_QName ) ;
    public final org.emftext.language.xpath2.VarName parse_org_emftext_language_xpath2_VarName() throws RecognitionException {
        org.emftext.language.xpath2.VarName element =  null;

        int parse_org_emftext_language_xpath2_VarName_StartIndex = input.index();

        org.emftext.language.xpath2.QName a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xpath2.g:4552:2: ( (a0_0= parse_org_emftext_language_xpath2_QName ) )
            // Xpath2.g:4553:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            {
            // Xpath2.g:4553:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:4554:3: a0_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_VarName3089);
            a0_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarName();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_NAME__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_34_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1482]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1483]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1484]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1485]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1486]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1487]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1488]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1489]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1490]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1491]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1492]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1493]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1494]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1495]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1496]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1497]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1498]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1499]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1500]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_emftext_language_xpath2_VarName_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_VarName"



    // $ANTLR start "parse_org_emftext_language_xpath2_ParenthesizedExpr"
    // Xpath2.g:4599:1: parse_org_emftext_language_xpath2_ParenthesizedExpr returns [org.emftext.language.xpath2.ParenthesizedExpr element = null] : a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')' ;
    public final org.emftext.language.xpath2.ParenthesizedExpr parse_org_emftext_language_xpath2_ParenthesizedExpr() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr element =  null;

        int parse_org_emftext_language_xpath2_ParenthesizedExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xpath2.g:4602:2: (a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')' )
            // Xpath2.g:4603:2: a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_ParenthesizedExpr3122); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1501]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1502]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1503]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1504]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1505]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1506]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1507]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1508]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1509]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1510]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1511]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1512]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1513]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1514]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1515]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1516]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1517]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1518]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1519]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1520]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1521]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1522]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1523]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1524]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1525]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1526]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1527]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1528]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1529]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1530]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1531]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1532]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1533]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1534]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1535]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1536]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1537]);
            	}

            // Xpath2.g:4653:2: ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( ((LA21_0 >= DECIMAL_LITERAL && LA21_0 <= INTEGER_LITERAL)||(LA21_0 >= NCNAME && LA21_0 <= TEXT)||(LA21_0 >= 14 && LA21_0 <= 15)||LA21_0==17||(LA21_0 >= 21 && LA21_0 <= 24)||LA21_0==35||(LA21_0 >= 38 && LA21_0 <= 39)||(LA21_0 >= 41 && LA21_0 <= 47)||(LA21_0 >= 51 && LA21_0 <= 54)||LA21_0==57||LA21_0==63||LA21_0==65||(LA21_0 >= 67 && LA21_0 <= 70)||(LA21_0 >= 73 && LA21_0 <= 77)) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // Xpath2.g:4654:3: (a1_0= parse_org_emftext_language_xpath2_Expr )
                    {
                    // Xpath2.g:4654:3: (a1_0= parse_org_emftext_language_xpath2_Expr )
                    // Xpath2.g:4655:4: a1_0= parse_org_emftext_language_xpath2_Expr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_ParenthesizedExpr3145);
                    a1_0=parse_org_emftext_language_xpath2_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
                    					startIncompleteElement(element);
                    				}
                    				if (a1_0 != null) {
                    					if (a1_0 != null) {
                    						Object value = a1_0;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.PARENTHESIZED_EXPR__EXPR), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_1, a1_0, true);
                    					copyLocalizationInfos(a1_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1538]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_ParenthesizedExpr3171); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1539]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1540]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1541]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1542]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1543]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1544]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1545]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1546]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1547]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1548]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1549]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1550]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1551]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1552]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1553]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1554]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1555]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1556]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1557]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_emftext_language_xpath2_ParenthesizedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ParenthesizedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ContextItemExpr"
    // Xpath2.g:4715:1: parse_org_emftext_language_xpath2_ContextItemExpr returns [org.emftext.language.xpath2.ContextItemExpr element = null] : a0= '.' ;
    public final org.emftext.language.xpath2.ContextItemExpr parse_org_emftext_language_xpath2_ContextItemExpr() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr element =  null;

        int parse_org_emftext_language_xpath2_ContextItemExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xpath2.g:4718:2: (a0= '.' )
            // Xpath2.g:4719:2: a0= '.'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_org_emftext_language_xpath2_ContextItemExpr3200); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createContextItemExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_36_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1558]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1559]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1560]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1561]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1562]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1563]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1564]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1565]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1566]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1567]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1568]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1569]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1570]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1571]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1572]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1573]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1574]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1575]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1576]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_emftext_language_xpath2_ContextItemExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ContextItemExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_FunctionCall"
    // Xpath2.g:4753:1: parse_org_emftext_language_xpath2_FunctionCall returns [org.emftext.language.xpath2.FunctionCall element = null] : (a0_0= parse_org_emftext_language_xpath2_QName ) a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )? a5= ')' ;
    public final org.emftext.language.xpath2.FunctionCall parse_org_emftext_language_xpath2_FunctionCall() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall element =  null;

        int parse_org_emftext_language_xpath2_FunctionCall_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath2.QName a0_0 =null;

        org.emftext.language.xpath2.ExprSingle a2_0 =null;

        org.emftext.language.xpath2.ExprSingle a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xpath2.g:4756:2: ( (a0_0= parse_org_emftext_language_xpath2_QName ) a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )? a5= ')' )
            // Xpath2.g:4757:2: (a0_0= parse_org_emftext_language_xpath2_QName ) a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )? a5= ')'
            {
            // Xpath2.g:4757:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:4758:3: a0_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_FunctionCall3233);
            a0_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1577]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_FunctionCall3251); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1578]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1579]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1580]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1581]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1582]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1583]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1584]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1585]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1586]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1587]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1588]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1589]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1590]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1591]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1592]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1593]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1594]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1595]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1596]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1597]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1598]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1599]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1600]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1601]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1602]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1603]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1604]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1605]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1606]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1607]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1608]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1609]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1610]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1611]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1612]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1613]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1614]);
            	}

            // Xpath2.g:4833:2: ( ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( ((LA23_0 >= DECIMAL_LITERAL && LA23_0 <= INTEGER_LITERAL)||(LA23_0 >= NCNAME && LA23_0 <= TEXT)||(LA23_0 >= 14 && LA23_0 <= 15)||LA23_0==17||(LA23_0 >= 21 && LA23_0 <= 24)||LA23_0==35||(LA23_0 >= 38 && LA23_0 <= 39)||(LA23_0 >= 41 && LA23_0 <= 47)||(LA23_0 >= 51 && LA23_0 <= 54)||LA23_0==57||LA23_0==63||LA23_0==65||(LA23_0 >= 67 && LA23_0 <= 70)||(LA23_0 >= 73 && LA23_0 <= 77)) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // Xpath2.g:4834:3: ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* )
                    {
                    // Xpath2.g:4834:3: ( (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )* )
                    // Xpath2.g:4835:4: (a2_0= parse_org_emftext_language_xpath2_ExprSingle ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
                    {
                    // Xpath2.g:4835:4: (a2_0= parse_org_emftext_language_xpath2_ExprSingle )
                    // Xpath2.g:4836:5: a2_0= parse_org_emftext_language_xpath2_ExprSingle
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall3280);
                    a2_0=parse_org_emftext_language_xpath2_ExprSingle();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1615]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1616]);
                    			}

                    // Xpath2.g:4862:4: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==19) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // Xpath2.g:4863:5: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) )
                    	    {
                    	    // Xpath2.g:4863:5: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle ) )
                    	    // Xpath2.g:4864:6: a3= ',' (a4_0= parse_org_emftext_language_xpath2_ExprSingle )
                    	    {
                    	    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_FunctionCall3321); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1617]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1618]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1619]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1620]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1621]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1622]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1623]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1624]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1625]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1626]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1627]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1628]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1629]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1630]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1631]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1632]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1633]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1634]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1635]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1636]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1637]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1638]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1639]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1640]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1641]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1642]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1643]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1644]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1645]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1646]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1647]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1648]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1649]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1650]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1651]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1652]);
                    	    					}

                    	    // Xpath2.g:4913:6: (a4_0= parse_org_emftext_language_xpath2_ExprSingle )
                    	    // Xpath2.g:4914:7: a4_0= parse_org_emftext_language_xpath2_ExprSingle
                    	    {
                    	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall3355);
                    	    a4_0=parse_org_emftext_language_xpath2_ExprSingle();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a4_0 != null) {
                    	    								if (a4_0 != null) {
                    	    									Object value = a4_0;
                    	    									addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	    								copyLocalizationInfos(a4_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1653]);
                    	    						addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1654]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1655]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1656]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1657]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_FunctionCall3429); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1658]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1659]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1660]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1661]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1662]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1663]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1664]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1665]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1666]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1667]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1668]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1669]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1670]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1671]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1672]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1673]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1674]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1675]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1676]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_emftext_language_xpath2_FunctionCall_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_FunctionCall"



    // $ANTLR start "parse_org_emftext_language_xpath2_SingleType"
    // Xpath2.g:4989:1: parse_org_emftext_language_xpath2_SingleType returns [org.emftext.language.xpath2.SingleType element = null] : (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? ) ;
    public final org.emftext.language.xpath2.SingleType parse_org_emftext_language_xpath2_SingleType() throws RecognitionException {
        org.emftext.language.xpath2.SingleType element =  null;

        int parse_org_emftext_language_xpath2_SingleType_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xpath2.g:4992:2: ( (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? ) )
            // Xpath2.g:4993:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? )
            {
            // Xpath2.g:4993:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            // Xpath2.g:4994:3: a0_0= parse_org_emftext_language_xpath2_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_SingleType3462);
            a0_0=parse_org_emftext_language_xpath2_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleType();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
            				}
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1677]);
            	}

            // Xpath2.g:5024:2: ( (a1= '?' )? )
            // Xpath2.g:5025:3: (a1= '?' )?
            {
            // Xpath2.g:5025:3: (a1= '?' )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==34) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // Xpath2.g:5026:4: a1= '?'
                    {
                    a1=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_SingleType3489); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_1, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_emftext_language_xpath2_SingleType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SingleType"



    // $ANTLR start "parse_org_emftext_language_xpath2_EmptySequenceType"
    // Xpath2.g:5051:1: parse_org_emftext_language_xpath2_EmptySequenceType returns [org.emftext.language.xpath2.EmptySequenceType element = null] : a0= 'empty-sequence' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.EmptySequenceType parse_org_emftext_language_xpath2_EmptySequenceType() throws RecognitionException {
        org.emftext.language.xpath2.EmptySequenceType element =  null;

        int parse_org_emftext_language_xpath2_EmptySequenceType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xpath2.g:5054:2: (a0= 'empty-sequence' a1= '(' a2= ')' )
            // Xpath2.g:5055:2: a0= 'empty-sequence' a1= '(' a2= ')'
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath2_EmptySequenceType3525); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1678]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_EmptySequenceType3539); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1679]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_EmptySequenceType3553); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_emftext_language_xpath2_EmptySequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_EmptySequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemSequenceType"
    // Xpath2.g:5098:1: parse_org_emftext_language_xpath2_ItemSequenceType returns [org.emftext.language.xpath2.ItemSequenceType element = null] : (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) ;
    public final org.emftext.language.xpath2.ItemSequenceType parse_org_emftext_language_xpath2_ItemSequenceType() throws RecognitionException {
        org.emftext.language.xpath2.ItemSequenceType element =  null;

        int parse_org_emftext_language_xpath2_ItemSequenceType_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        org.emftext.language.xpath2.ItemType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xpath2.g:5101:2: ( (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) )
            // Xpath2.g:5102:2: (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? )
            {
            // Xpath2.g:5102:2: (a0_0= parse_org_emftext_language_xpath2_ItemType )
            // Xpath2.g:5103:3: a0_0= parse_org_emftext_language_xpath2_ItemType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemType_in_parse_org_emftext_language_xpath2_ItemSequenceType3586);
            a0_0=parse_org_emftext_language_xpath2_ItemType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__ITEM_TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_40_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1680]);
            	}

            // Xpath2.g:5131:2: ( (a1= '?' |a2= '*' |a3= '+' )? )
            // Xpath2.g:5132:3: (a1= '?' |a2= '*' |a3= '+' )?
            {
            // Xpath2.g:5132:3: (a1= '?' |a2= '*' |a3= '+' )?
            int alt25=4;
            switch ( input.LA(1) ) {
                case 34:
                    {
                    alt25=1;
                    }
                    break;
                case 17:
                    {
                    alt25=2;
                    }
                    break;
                case 18:
                    {
                    alt25=3;
                    }
                    break;
            }

            switch (alt25) {
                case 1 :
                    // Xpath2.g:5133:4: a1= '?'
                    {
                    a1=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_ItemSequenceType3613); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_40_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.OPTIONAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:5149:8: a2= '*'
                    {
                    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_ItemSequenceType3628); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_40_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.STAR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:5165:8: a3= '+'
                    {
                    a3=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath2_ItemSequenceType3643); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_40_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.PLUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_emftext_language_xpath2_ItemSequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemSequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemKindTest"
    // Xpath2.g:5188:1: parse_org_emftext_language_xpath2_ItemKindTest returns [org.emftext.language.xpath2.ItemKindTest element = null] : (a0_0= parse_org_emftext_language_xpath2_KindTest ) ;
    public final org.emftext.language.xpath2.ItemKindTest parse_org_emftext_language_xpath2_ItemKindTest() throws RecognitionException {
        org.emftext.language.xpath2.ItemKindTest element =  null;

        int parse_org_emftext_language_xpath2_ItemKindTest_StartIndex = input.index();

        org.emftext.language.xpath2.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xpath2.g:5191:2: ( (a0_0= parse_org_emftext_language_xpath2_KindTest ) )
            // Xpath2.g:5192:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            {
            // Xpath2.g:5192:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            // Xpath2.g:5193:3: a0_0= parse_org_emftext_language_xpath2_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_ItemKindTest3683);
            a0_0=parse_org_emftext_language_xpath2_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1681]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_emftext_language_xpath2_ItemKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyItemType"
    // Xpath2.g:5220:1: parse_org_emftext_language_xpath2_AnyItemType returns [org.emftext.language.xpath2.AnyItemType element = null] : a0= 'item' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.AnyItemType parse_org_emftext_language_xpath2_AnyItemType() throws RecognitionException {
        org.emftext.language.xpath2.AnyItemType element =  null;

        int parse_org_emftext_language_xpath2_AnyItemType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xpath2.g:5223:2: (a0= 'item' a1= '(' a2= ')' )
            // Xpath2.g:5224:2: a0= 'item' a1= '(' a2= ')'
            {
            a0=(Token)match(input,60,FOLLOW_60_in_parse_org_emftext_language_xpath2_AnyItemType3716); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1682]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyItemType3730); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1683]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyItemType3744); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1684]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_emftext_language_xpath2_AnyItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyItemType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AtomicItemType"
    // Xpath2.g:5268:1: parse_org_emftext_language_xpath2_AtomicItemType returns [org.emftext.language.xpath2.AtomicItemType element = null] : (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ;
    public final org.emftext.language.xpath2.AtomicItemType parse_org_emftext_language_xpath2_AtomicItemType() throws RecognitionException {
        org.emftext.language.xpath2.AtomicItemType element =  null;

        int parse_org_emftext_language_xpath2_AtomicItemType_StartIndex = input.index();

        org.emftext.language.xpath2.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xpath2.g:5271:2: ( (a0_0= parse_org_emftext_language_xpath2_AtomicType ) )
            // Xpath2.g:5272:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            {
            // Xpath2.g:5272:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            // Xpath2.g:5273:3: a0_0= parse_org_emftext_language_xpath2_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_AtomicItemType3777);
            a0_0=parse_org_emftext_language_xpath2_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAtomicItemType();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_ITEM_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1685]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_emftext_language_xpath2_AtomicItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AtomicItemType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AtomicType"
    // Xpath2.g:5300:1: parse_org_emftext_language_xpath2_AtomicType returns [org.emftext.language.xpath2.AtomicType element = null] : (a0_0= parse_org_emftext_language_xpath2_QName ) ;
    public final org.emftext.language.xpath2.AtomicType parse_org_emftext_language_xpath2_AtomicType() throws RecognitionException {
        org.emftext.language.xpath2.AtomicType element =  null;

        int parse_org_emftext_language_xpath2_AtomicType_StartIndex = input.index();

        org.emftext.language.xpath2.QName a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xpath2.g:5303:2: ( (a0_0= parse_org_emftext_language_xpath2_QName ) )
            // Xpath2.g:5304:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            {
            // Xpath2.g:5304:2: (a0_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:5305:3: a0_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_AtomicType3814);
            a0_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAtomicType();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_TYPE__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_44_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1686]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1687]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_emftext_language_xpath2_AtomicType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AtomicType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyKindTest"
    // Xpath2.g:5333:1: parse_org_emftext_language_xpath2_AnyKindTest returns [org.emftext.language.xpath2.AnyKindTest element = null] : a0= 'node' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.AnyKindTest parse_org_emftext_language_xpath2_AnyKindTest() throws RecognitionException {
        org.emftext.language.xpath2.AnyKindTest element =  null;

        int parse_org_emftext_language_xpath2_AnyKindTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xpath2.g:5336:2: (a0= 'node' a1= '(' a2= ')' )
            // Xpath2.g:5337:2: a0= 'node' a1= '(' a2= ')'
            {
            a0=(Token)match(input,65,FOLLOW_65_in_parse_org_emftext_language_xpath2_AnyKindTest3847); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_45_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1688]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyKindTest3861); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_45_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1689]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyKindTest3875); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_45_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1690]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1691]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1692]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1693]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1694]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1695]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1696]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1697]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1698]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1699]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1700]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1701]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1702]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1703]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1704]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1705]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1706]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1707]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1708]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1709]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_emftext_language_xpath2_AnyKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_DocumentTest"
    // Xpath2.g:5400:1: parse_org_emftext_language_xpath2_DocumentTest returns [org.emftext.language.xpath2.DocumentTest element = null] : a0= 'document-node' a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )? a3= ')' ;
    public final org.emftext.language.xpath2.DocumentTest parse_org_emftext_language_xpath2_DocumentTest() throws RecognitionException {
        org.emftext.language.xpath2.DocumentTest element =  null;

        int parse_org_emftext_language_xpath2_DocumentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath2.ElementTest a2_0 =null;

        org.emftext.language.xpath2.SchemaElementTest a2_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xpath2.g:5403:2: (a0= 'document-node' a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )? a3= ')' )
            // Xpath2.g:5404:2: a0= 'document-node' a1= '(' ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )? a3= ')'
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_org_emftext_language_xpath2_DocumentTest3904); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1710]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_DocumentTest3918); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1711]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1712]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1713]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1714]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1715]);
            	}

            // Xpath2.g:5436:2: ( ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==47||LA27_0==74) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // Xpath2.g:5437:3: ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )
                    {
                    // Xpath2.g:5437:3: ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )
                    // Xpath2.g:5438:4: (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest )
                    {
                    // Xpath2.g:5438:4: (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest )
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==47) ) {
                        alt26=1;
                    }
                    else if ( (LA26_0==74) ) {
                        alt26=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;

                    }
                    switch (alt26) {
                        case 1 :
                            // Xpath2.g:5439:5: a2_0= parse_org_emftext_language_xpath2_ElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_DocumentTest3947);
                            a2_0=parse_org_emftext_language_xpath2_ElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_0 != null) {
                            						if (a2_0 != null) {
                            							Object value = a2_0;
                            							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOCUMENT_TEST__TEST), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_2_0_0_0, a2_0, true);
                            						copyLocalizationInfos(a2_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath2.g:5458:10: a2_1= parse_org_emftext_language_xpath2_SchemaElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_DocumentTest3967);
                            a2_1=parse_org_emftext_language_xpath2_SchemaElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
                            						startIncompleteElement(element);
                            					}
                            					if (a2_1 != null) {
                            						if (a2_1 != null) {
                            							Object value = a2_1;
                            							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOCUMENT_TEST__TEST), value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_2_0_0_0, a2_1, true);
                            						copyLocalizationInfos(a2_1, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1716]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1717]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_DocumentTest4008); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1718]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1719]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1720]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1721]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1722]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1723]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1724]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1725]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1726]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1727]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1728]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1729]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1730]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1731]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1732]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1733]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1734]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1735]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1736]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1737]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_emftext_language_xpath2_DocumentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DocumentTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_TextTest"
    // Xpath2.g:5525:1: parse_org_emftext_language_xpath2_TextTest returns [org.emftext.language.xpath2.TextTest element = null] : a0= 'text' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.TextTest parse_org_emftext_language_xpath2_TextTest() throws RecognitionException {
        org.emftext.language.xpath2.TextTest element =  null;

        int parse_org_emftext_language_xpath2_TextTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xpath2.g:5528:2: (a0= 'text' a1= '(' a2= ')' )
            // Xpath2.g:5529:2: a0= 'text' a1= '(' a2= ')'
            {
            a0=(Token)match(input,77,FOLLOW_77_in_parse_org_emftext_language_xpath2_TextTest4037); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_47_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1738]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_TextTest4051); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_47_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1739]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_TextTest4065); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_47_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1740]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1741]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1742]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1743]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1744]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1745]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1746]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1747]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1748]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1749]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1750]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1751]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1752]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1753]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1754]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1755]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1756]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1757]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1758]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1759]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_emftext_language_xpath2_TextTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_TextTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_CommentTest"
    // Xpath2.g:5592:1: parse_org_emftext_language_xpath2_CommentTest returns [org.emftext.language.xpath2.CommentTest element = null] : a0= 'comment' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.CommentTest parse_org_emftext_language_xpath2_CommentTest() throws RecognitionException {
        org.emftext.language.xpath2.CommentTest element =  null;

        int parse_org_emftext_language_xpath2_CommentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xpath2.g:5595:2: (a0= 'comment' a1= '(' a2= ')' )
            // Xpath2.g:5596:2: a0= 'comment' a1= '(' a2= ')'
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_org_emftext_language_xpath2_CommentTest4094); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_48_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1760]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_CommentTest4108); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_48_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1761]);
            	}

            a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_CommentTest4122); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_48_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1762]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1763]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1764]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1765]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1766]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1767]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1768]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1769]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1770]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1771]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1772]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1773]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1774]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1775]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1776]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1777]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1778]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1779]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1780]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1781]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_emftext_language_xpath2_CommentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_CommentTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_PITest"
    // Xpath2.g:5659:1: parse_org_emftext_language_xpath2_PITest returns [org.emftext.language.xpath2.PITest element = null] : (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_NCNamePITest |c1= parse_org_emftext_language_xpath2_StringLiteralPITest );
    public final org.emftext.language.xpath2.PITest parse_org_emftext_language_xpath2_PITest() throws RecognitionException {
        org.emftext.language.xpath2.PITest element =  null;

        int parse_org_emftext_language_xpath2_PITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.NCNamePITest c0 =null;

        org.emftext.language.xpath2.StringLiteralPITest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xpath2.g:5662:2: (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_NCNamePITest |c1= parse_org_emftext_language_xpath2_StringLiteralPITest )
            int alt28=3;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==70) ) {
                int LA28_1 = input.LA(2);

                if ( (LA28_1==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt28=1;
                        }
                        break;
                    case NCNAME:
                        {
                        alt28=2;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt28=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 28, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;

            }
            switch (alt28) {
                case 1 :
                    // Xpath2.g:5663:2: a0= 'processing-instruction' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,70,FOLLOW_70_in_parse_org_emftext_language_xpath2_PITest4151); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1782]);
                    	}

                    a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_PITest4165); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1783]);
                    	}

                    a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_PITest4179); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1784]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1785]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1786]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1787]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1788]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1789]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1790]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1791]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1792]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1793]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1794]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1795]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1796]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1797]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1798]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1799]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1800]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1801]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1802]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1803]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:5726:2: c0= parse_org_emftext_language_xpath2_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_PITest4198);
                    c0=parse_org_emftext_language_xpath2_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:5727:4: c1= parse_org_emftext_language_xpath2_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_PITest4208);
                    c1=parse_org_emftext_language_xpath2_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_emftext_language_xpath2_PITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NCNamePITest"
    // Xpath2.g:5731:1: parse_org_emftext_language_xpath2_NCNamePITest returns [org.emftext.language.xpath2.NCNamePITest element = null] : a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' ;
    public final org.emftext.language.xpath2.NCNamePITest parse_org_emftext_language_xpath2_NCNamePITest() throws RecognitionException {
        org.emftext.language.xpath2.NCNamePITest element =  null;

        int parse_org_emftext_language_xpath2_NCNamePITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Xpath2.g:5734:2: (a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' )
            // Xpath2.g:5735:2: a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')'
            {
            a0=(Token)match(input,70,FOLLOW_70_in_parse_org_emftext_language_xpath2_NCNamePITest4233); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1804]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_NCNamePITest4247); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1805]);
            	}

            // Xpath2.g:5763:2: (a2= NCNAME )
            // Xpath2.g:5764:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NCNamePITest4265); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NC_NAME_PI_TEST__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NC_NAME_PI_TEST__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1806]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_NCNamePITest4286); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1807]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1808]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1809]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1810]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1811]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1812]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1813]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1814]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1815]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1816]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1817]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1818]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1819]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1820]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1821]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1822]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1823]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1824]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1825]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1826]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_emftext_language_xpath2_NCNamePITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NCNamePITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_StringLiteralPITest"
    // Xpath2.g:5834:1: parse_org_emftext_language_xpath2_StringLiteralPITest returns [org.emftext.language.xpath2.StringLiteralPITest element = null] : a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' ;
    public final org.emftext.language.xpath2.StringLiteralPITest parse_org_emftext_language_xpath2_StringLiteralPITest() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteralPITest element =  null;

        int parse_org_emftext_language_xpath2_StringLiteralPITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }

            // Xpath2.g:5837:2: (a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' )
            // Xpath2.g:5838:2: a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')'
            {
            a0=(Token)match(input,70,FOLLOW_70_in_parse_org_emftext_language_xpath2_StringLiteralPITest4315); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1827]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_StringLiteralPITest4329); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1828]);
            	}

            // Xpath2.g:5866:2: (a2= STRING_LITERAL )
            // Xpath2.g:5867:3: a2= STRING_LITERAL
            {
            a2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteralPITest4347); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.emftext.language.xpath2.StringLiteral proxy = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContextDependentURIFragmentFactory<org.emftext.language.xpath2.StringLiteralPITest, org.emftext.language.xpath2.StringLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getStringLiteralPITestLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1829]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_StringLiteralPITest4368); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1830]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1831]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1832]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1833]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1834]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1835]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1836]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1837]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1838]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1839]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1840]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1841]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1842]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1843]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1844]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1845]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1846]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1847]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1848]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1849]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_emftext_language_xpath2_StringLiteralPITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StringLiteralPITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AttributeTest"
    // Xpath2.g:5941:1: parse_org_emftext_language_xpath2_AttributeTest returns [org.emftext.language.xpath2.AttributeTest element = null] : (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardAttributeTest |c1= parse_org_emftext_language_xpath2_NameAttributeTest );
    public final org.emftext.language.xpath2.AttributeTest parse_org_emftext_language_xpath2_AttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.AttributeTest element =  null;

        int parse_org_emftext_language_xpath2_AttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.WildcardAttributeTest c0 =null;

        org.emftext.language.xpath2.NameAttributeTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return element; }

            // Xpath2.g:5944:2: (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardAttributeTest |c1= parse_org_emftext_language_xpath2_NameAttributeTest )
            int alt29=3;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==41) ) {
                int LA29_1 = input.LA(2);

                if ( (LA29_1==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt29=1;
                        }
                        break;
                    case 17:
                        {
                        alt29=2;
                        }
                        break;
                    case NCNAME:
                        {
                        alt29=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 29, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;

            }
            switch (alt29) {
                case 1 :
                    // Xpath2.g:5945:2: a0= 'attribute' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_AttributeTest4397); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1850]);
                    	}

                    a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_AttributeTest4411); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1851]);
                    	}

                    a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_AttributeTest4425); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1852]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1853]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1854]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1855]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1856]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1857]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1858]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1859]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1860]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1861]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1862]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1863]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1864]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1865]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1866]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1867]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1868]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1869]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1870]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1871]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:6008:2: c0= parse_org_emftext_language_xpath2_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest4444);
                    c0=parse_org_emftext_language_xpath2_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:6009:4: c1= parse_org_emftext_language_xpath2_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest4454);
                    c1=parse_org_emftext_language_xpath2_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 54, parse_org_emftext_language_xpath2_AttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_WildcardAttributeTest"
    // Xpath2.g:6013:1: parse_org_emftext_language_xpath2_WildcardAttributeTest returns [org.emftext.language.xpath2.WildcardAttributeTest element = null] : a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' ;
    public final org.emftext.language.xpath2.WildcardAttributeTest parse_org_emftext_language_xpath2_WildcardAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.WildcardAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_WildcardAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return element; }

            // Xpath2.g:6016:2: (a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' )
            // Xpath2.g:6017:2: a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')'
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4479); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1872]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4493); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1873]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4507); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1874]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1875]);
            	}

            // Xpath2.g:6060:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==19) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // Xpath2.g:6061:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    {
                    // Xpath2.g:6061:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    // Xpath2.g:6062:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4530); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1876]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1877]);
                    			}

                    // Xpath2.g:6077:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:6078:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4556);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ATTRIBUTE_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1878]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1879]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4597); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1880]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1881]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1882]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1883]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1884]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1885]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1886]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1887]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1888]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1889]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1890]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1891]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1892]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1893]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1894]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1895]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1896]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1897]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1898]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1899]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 55, parse_org_emftext_language_xpath2_WildcardAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_WildcardAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NameAttributeTest"
    // Xpath2.g:6145:1: parse_org_emftext_language_xpath2_NameAttributeTest returns [org.emftext.language.xpath2.NameAttributeTest element = null] : a0= 'attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' ;
    public final org.emftext.language.xpath2.NameAttributeTest parse_org_emftext_language_xpath2_NameAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.NameAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_NameAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath2.QName a2_0 =null;

        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return element; }

            // Xpath2.g:6148:2: (a0= 'attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')' )
            // Xpath2.g:6149:2: a0= 'attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )? a5= ')'
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_NameAttributeTest4626); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1900]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_NameAttributeTest4640); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1901]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1902]);
            	}

            // Xpath2.g:6178:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:6179:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest4658);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1903]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1904]);
            	}

            // Xpath2.g:6205:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==19) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // Xpath2.g:6206:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    {
                    // Xpath2.g:6206:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) )
                    // Xpath2.g:6207:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_NameAttributeTest4685); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1905]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1906]);
                    			}

                    // Xpath2.g:6222:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:6223:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest4711);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1907]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1908]);
            	}

            a5=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_NameAttributeTest4752); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1909]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1910]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1911]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1912]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1913]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1914]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1915]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1916]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1917]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1918]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1919]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1920]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1921]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1922]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1923]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1924]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1925]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1926]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1927]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1928]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 56, parse_org_emftext_language_xpath2_NameAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NameAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_SchemaAttributeTest"
    // Xpath2.g:6290:1: parse_org_emftext_language_xpath2_SchemaAttributeTest returns [org.emftext.language.xpath2.SchemaAttributeTest element = null] : a0= 'schema-attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' ;
    public final org.emftext.language.xpath2.SchemaAttributeTest parse_org_emftext_language_xpath2_SchemaAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.SchemaAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_SchemaAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath2.QName a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return element; }

            // Xpath2.g:6293:2: (a0= 'schema-attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' )
            // Xpath2.g:6294:2: a0= 'schema-attribute' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')'
            {
            a0=(Token)match(input,73,FOLLOW_73_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4781); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1929]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4795); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1930]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaAttributeTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1931]);
            	}

            // Xpath2.g:6323:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:6324:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4813);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ATTRIBUTE_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1932]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4831); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1933]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1934]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1935]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1936]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1937]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1938]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1939]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1940]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1941]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1942]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1943]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1944]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1945]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1946]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1947]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1948]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1949]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1950]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1951]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1952]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 57, parse_org_emftext_language_xpath2_SchemaAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SchemaAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_ElementTest"
    // Xpath2.g:6384:1: parse_org_emftext_language_xpath2_ElementTest returns [org.emftext.language.xpath2.ElementTest element = null] : (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardElementTest |c1= parse_org_emftext_language_xpath2_NameElementTest );
    public final org.emftext.language.xpath2.ElementTest parse_org_emftext_language_xpath2_ElementTest() throws RecognitionException {
        org.emftext.language.xpath2.ElementTest element =  null;

        int parse_org_emftext_language_xpath2_ElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.WildcardElementTest c0 =null;

        org.emftext.language.xpath2.NameElementTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return element; }

            // Xpath2.g:6387:2: (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardElementTest |c1= parse_org_emftext_language_xpath2_NameElementTest )
            int alt32=3;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==47) ) {
                int LA32_1 = input.LA(2);

                if ( (LA32_1==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt32=1;
                        }
                        break;
                    case 17:
                        {
                        alt32=2;
                        }
                        break;
                    case NCNAME:
                        {
                        alt32=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;

            }
            switch (alt32) {
                case 1 :
                    // Xpath2.g:6388:2: a0= 'element' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,47,FOLLOW_47_in_parse_org_emftext_language_xpath2_ElementTest4860); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1953]);
                    	}

                    a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_ElementTest4874); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1954]);
                    	}

                    a2=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_ElementTest4888); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1955]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1956]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1957]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1958]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1959]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1960]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1961]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1962]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1963]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1964]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1965]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1966]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1967]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1968]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1969]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1970]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1971]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1972]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1973]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1974]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1975]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:6452:2: c0= parse_org_emftext_language_xpath2_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_ElementTest4907);
                    c0=parse_org_emftext_language_xpath2_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:6453:4: c1= parse_org_emftext_language_xpath2_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_ElementTest4917);
                    c1=parse_org_emftext_language_xpath2_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 58, parse_org_emftext_language_xpath2_ElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_WildcardElementTest"
    // Xpath2.g:6457:1: parse_org_emftext_language_xpath2_WildcardElementTest returns [org.emftext.language.xpath2.WildcardElementTest element = null] : a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' ;
    public final org.emftext.language.xpath2.WildcardElementTest parse_org_emftext_language_xpath2_WildcardElementTest() throws RecognitionException {
        org.emftext.language.xpath2.WildcardElementTest element =  null;

        int parse_org_emftext_language_xpath2_WildcardElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        Token a8=null;
        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return element; }

            // Xpath2.g:6460:2: (a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' )
            // Xpath2.g:6461:2: a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')'
            {
            a0=(Token)match(input,47,FOLLOW_47_in_parse_org_emftext_language_xpath2_WildcardElementTest4942); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1976]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardElementTest4956); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1977]);
            	}

            a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardElementTest4970); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1978]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1979]);
            	}

            // Xpath2.g:6519:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==19) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // Xpath2.g:6520:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    {
                    // Xpath2.g:6520:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    // Xpath2.g:6521:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardElementTest4993); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1980]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1981]);
                    			}

                    // Xpath2.g:6541:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:6542:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardElementTest5019);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						}
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1982]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1983]);
                    			}

                    // Xpath2.g:6573:4: ( (a5= '?' ) )
                    // Xpath2.g:6574:5: (a5= '?' )
                    {
                    // Xpath2.g:6574:5: (a5= '?' )
                    // Xpath2.g:6575:6: a5= '?'
                    {
                    a5=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_WildcardElementTest5060); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    						if (element == null) {
                    							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    							startIncompleteElement(element);
                    							// initialize boolean attribute
                    							{
                    								Object value = false;
                    								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    							}
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_2, true, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    						// set value of boolean attribute
                    						Object value = true;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						completedElement(value, false);
                    					}

                    }


                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1984]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1985]);
            	}

            a8=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardElementTest5104); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1986]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1987]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1988]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1989]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1990]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1991]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1992]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1993]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1994]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1995]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1996]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1997]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1998]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1999]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2000]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2001]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2002]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2003]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2004]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2005]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2006]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 59, parse_org_emftext_language_xpath2_WildcardElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_WildcardElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NameElementTest"
    // Xpath2.g:6648:1: parse_org_emftext_language_xpath2_NameElementTest returns [org.emftext.language.xpath2.NameElementTest element = null] : a0= 'element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' ;
    public final org.emftext.language.xpath2.NameElementTest parse_org_emftext_language_xpath2_NameElementTest() throws RecognitionException {
        org.emftext.language.xpath2.NameElementTest element =  null;

        int parse_org_emftext_language_xpath2_NameElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        Token a8=null;
        org.emftext.language.xpath2.QName a2_0 =null;

        org.emftext.language.xpath2.QName a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return element; }

            // Xpath2.g:6651:2: (a0= 'element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')' )
            // Xpath2.g:6652:2: a0= 'element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )? a8= ')'
            {
            a0=(Token)match(input,47,FOLLOW_47_in_parse_org_emftext_language_xpath2_NameElementTest5133); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2007]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_NameElementTest5147); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2008]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2009]);
            	}

            // Xpath2.g:6691:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:6692:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest5165);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            				}
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2010]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2011]);
            	}

            // Xpath2.g:6723:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==19) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // Xpath2.g:6724:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    {
                    // Xpath2.g:6724:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) ) )
                    // Xpath2.g:6725:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_QName ) ( (a5= '?' ) )
                    {
                    a3=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_NameElementTest5192); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2012]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2013]);
                    			}

                    // Xpath2.g:6745:4: (a4_0= parse_org_emftext_language_xpath2_QName )
                    // Xpath2.g:6746:5: a4_0= parse_org_emftext_language_xpath2_QName
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest5218);
                    a4_0=parse_org_emftext_language_xpath2_QName();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    						startIncompleteElement(element);
                    						// initialize boolean attribute
                    						{
                    							Object value = false;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						}
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_1, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2014]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2015]);
                    			}

                    // Xpath2.g:6777:4: ( (a5= '?' ) )
                    // Xpath2.g:6778:5: (a5= '?' )
                    {
                    // Xpath2.g:6778:5: (a5= '?' )
                    // Xpath2.g:6779:6: a5= '?'
                    {
                    a5=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_NameElementTest5259); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    						if (element == null) {
                    							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    							startIncompleteElement(element);
                    							// initialize boolean attribute
                    							{
                    								Object value = false;
                    								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    							}
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_2, true, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    						// set value of boolean attribute
                    						Object value = true;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
                    						completedElement(value, false);
                    					}

                    }


                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2016]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2017]);
            	}

            a8=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_NameElementTest5303); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            			// initialize boolean attribute
            			{
            				Object value = false;
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE_IS_OPTIONAL), value);
            			}
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2018]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2019]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2020]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2021]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2022]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2023]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2024]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2025]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2026]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2027]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2028]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2029]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2030]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2031]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2032]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2033]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2034]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2035]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2036]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2037]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2038]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 60, parse_org_emftext_language_xpath2_NameElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NameElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_SchemaElementTest"
    // Xpath2.g:6852:1: parse_org_emftext_language_xpath2_SchemaElementTest returns [org.emftext.language.xpath2.SchemaElementTest element = null] : a0= 'schema-element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' ;
    public final org.emftext.language.xpath2.SchemaElementTest parse_org_emftext_language_xpath2_SchemaElementTest() throws RecognitionException {
        org.emftext.language.xpath2.SchemaElementTest element =  null;

        int parse_org_emftext_language_xpath2_SchemaElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath2.QName a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return element; }

            // Xpath2.g:6855:2: (a0= 'schema-element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')' )
            // Xpath2.g:6856:2: a0= 'schema-element' a1= '(' (a2_0= parse_org_emftext_language_xpath2_QName ) a3= ')'
            {
            a0=(Token)match(input,74,FOLLOW_74_in_parse_org_emftext_language_xpath2_SchemaElementTest5332); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2039]);
            	}

            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaElementTest5346); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2040]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getSchemaElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2041]);
            	}

            // Xpath2.g:6885:2: (a2_0= parse_org_emftext_language_xpath2_QName )
            // Xpath2.g:6886:3: a2_0= parse_org_emftext_language_xpath2_QName
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaElementTest5364);
            a2_0=parse_org_emftext_language_xpath2_QName();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ELEMENT_TEST__NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2042]);
            	}

            a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaElementTest5382); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2043]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2044]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2045]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2046]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2047]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2048]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2049]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2050]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2051]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2052]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2053]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2054]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2055]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2056]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2057]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2058]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2059]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2060]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2061]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2062]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2063]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 61, parse_org_emftext_language_xpath2_SchemaElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SchemaElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_IntegerLiteral"
    // Xpath2.g:6947:1: parse_org_emftext_language_xpath2_IntegerLiteral returns [org.emftext.language.xpath2.IntegerLiteral element = null] : (a0= INTEGER_LITERAL ) ;
    public final org.emftext.language.xpath2.IntegerLiteral parse_org_emftext_language_xpath2_IntegerLiteral() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral element =  null;

        int parse_org_emftext_language_xpath2_IntegerLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return element; }

            // Xpath2.g:6950:2: ( (a0= INTEGER_LITERAL ) )
            // Xpath2.g:6951:2: (a0= INTEGER_LITERAL )
            {
            // Xpath2.g:6951:2: (a0= INTEGER_LITERAL )
            // Xpath2.g:6952:3: a0= INTEGER_LITERAL
            {
            a0=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath2_IntegerLiteral5415); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntegerLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INTEGER_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INTEGER_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_60_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2064]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2065]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2066]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2067]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2068]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2069]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2070]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2071]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2072]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2073]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2074]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2075]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2076]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2077]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2078]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2079]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2080]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2081]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2082]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 62, parse_org_emftext_language_xpath2_IntegerLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IntegerLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_DecimalLiteral"
    // Xpath2.g:7007:1: parse_org_emftext_language_xpath2_DecimalLiteral returns [org.emftext.language.xpath2.DecimalLiteral element = null] : (a0= DECIMAL_LITERAL ) ;
    public final org.emftext.language.xpath2.DecimalLiteral parse_org_emftext_language_xpath2_DecimalLiteral() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral element =  null;

        int parse_org_emftext_language_xpath2_DecimalLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return element; }

            // Xpath2.g:7010:2: ( (a0= DECIMAL_LITERAL ) )
            // Xpath2.g:7011:2: (a0= DECIMAL_LITERAL )
            {
            // Xpath2.g:7011:2: (a0= DECIMAL_LITERAL )
            // Xpath2.g:7012:3: a0= DECIMAL_LITERAL
            {
            a0=(Token)match(input,DECIMAL_LITERAL,FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath2_DecimalLiteral5455); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDecimalLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DECIMAL_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DECIMAL_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Float resolved = (java.lang.Float) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DECIMAL_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2083]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2084]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2085]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2086]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2087]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2088]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2089]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2090]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2091]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2092]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2093]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2094]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2095]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2096]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2097]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2098]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2099]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2100]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2101]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 63, parse_org_emftext_language_xpath2_DecimalLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DecimalLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_DoubleLiteral"
    // Xpath2.g:7067:1: parse_org_emftext_language_xpath2_DoubleLiteral returns [org.emftext.language.xpath2.DoubleLiteral element = null] : (a0= DOUBLE_LITERAL ) ;
    public final org.emftext.language.xpath2.DoubleLiteral parse_org_emftext_language_xpath2_DoubleLiteral() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral element =  null;

        int parse_org_emftext_language_xpath2_DoubleLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return element; }

            // Xpath2.g:7070:2: ( (a0= DOUBLE_LITERAL ) )
            // Xpath2.g:7071:2: (a0= DOUBLE_LITERAL )
            {
            // Xpath2.g:7071:2: (a0= DOUBLE_LITERAL )
            // Xpath2.g:7072:3: a0= DOUBLE_LITERAL
            {
            a0=(Token)match(input,DOUBLE_LITERAL,FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath2_DoubleLiteral5495); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDoubleLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DOUBLE_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Double resolved = (java.lang.Double) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2102]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2103]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2104]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2105]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2106]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2107]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2108]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2109]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2110]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2111]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2112]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2113]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2114]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2115]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2116]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2117]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2118]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2119]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2120]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 64, parse_org_emftext_language_xpath2_DoubleLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DoubleLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_StringLiteral"
    // Xpath2.g:7127:1: parse_org_emftext_language_xpath2_StringLiteral returns [org.emftext.language.xpath2.StringLiteral element = null] : (a0= STRING_LITERAL ) ;
    public final org.emftext.language.xpath2.StringLiteral parse_org_emftext_language_xpath2_StringLiteral() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteral element =  null;

        int parse_org_emftext_language_xpath2_StringLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return element; }

            // Xpath2.g:7130:2: ( (a0= STRING_LITERAL ) )
            // Xpath2.g:7131:2: (a0= STRING_LITERAL )
            {
            // Xpath2.g:7131:2: (a0= STRING_LITERAL )
            // Xpath2.g:7132:3: a0= STRING_LITERAL
            {
            a0=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteral5535); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2121]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2122]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2123]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2124]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2125]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2126]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2127]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2128]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2129]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2130]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2131]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2132]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2133]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2134]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2135]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2136]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2137]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2138]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2139]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 65, parse_org_emftext_language_xpath2_StringLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StringLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_QName"
    // Xpath2.g:7187:1: parse_org_emftext_language_xpath2_QName returns [org.emftext.language.xpath2.QName element = null] : ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME ) ;
    public final org.emftext.language.xpath2.QName parse_org_emftext_language_xpath2_QName() throws RecognitionException {
        org.emftext.language.xpath2.QName element =  null;

        int parse_org_emftext_language_xpath2_QName_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return element; }

            // Xpath2.g:7190:2: ( ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME ) )
            // Xpath2.g:7191:2: ( ( (a0= NCNAME ) a1= ':' ) )? (a2= NCNAME )
            {
            // Xpath2.g:7191:2: ( ( (a0= NCNAME ) a1= ':' ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==NCNAME) ) {
                int LA35_1 = input.LA(2);

                if ( (LA35_1==25) ) {
                    alt35=1;
                }
            }
            switch (alt35) {
                case 1 :
                    // Xpath2.g:7192:3: ( (a0= NCNAME ) a1= ':' )
                    {
                    // Xpath2.g:7192:3: ( (a0= NCNAME ) a1= ':' )
                    // Xpath2.g:7193:4: (a0= NCNAME ) a1= ':'
                    {
                    // Xpath2.g:7193:4: (a0= NCNAME )
                    // Xpath2.g:7194:5: a0= NCNAME
                    {
                    a0=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName5586); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQName();
                    						startIncompleteElement(element);
                    					}
                    					if (a0 != null) {
                    						org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    						tokenResolver.setOptions(getOptions());
                    						org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__PREFIX), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    						}
                    						java.lang.String resolved = (java.lang.String) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__PREFIX), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_64_0_0_0_0_0_0, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2140]);
                    			}

                    a1=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_QName5619); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQName();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_64_0_0_0_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2141]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2142]);
            	}

            // Xpath2.g:7250:2: (a2= NCNAME )
            // Xpath2.g:7251:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName5656); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQName();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__LOCAL_PART), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME__LOCAL_PART), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_64_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAxisStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2143]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2144]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRelativePathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2145]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2146]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2147]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2148]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2149]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2150]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2151]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2152]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2153]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2154]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2155]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2156]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2157]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2158]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2159]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2160]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2161]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2162]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2163]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2164]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2165]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2166]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2167]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2168]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2169]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2170]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2171]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2172]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 66, parse_org_emftext_language_xpath2_QName_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QName"



    // $ANTLR start "parse_org_emftext_language_xpath2_ExprSingle"
    // Xpath2.g:7317:1: parse_org_emftext_language_xpath2_ExprSingle returns [org.emftext.language.xpath2.ExprSingle element = null] : (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_SinglePathExpr |c9= parse_org_emftext_language_xpath2_DoublePathExpr |c10= parse_org_emftext_language_xpath2_RelativePathExpr );
    public final org.emftext.language.xpath2.ExprSingle parse_org_emftext_language_xpath2_ExprSingle() throws RecognitionException {
        org.emftext.language.xpath2.ExprSingle element =  null;

        int parse_org_emftext_language_xpath2_ExprSingle_StartIndex = input.index();

        org.emftext.language.xpath2.ForExpr c0 =null;

        org.emftext.language.xpath2.QuantifiedExpr c1 =null;

        org.emftext.language.xpath2.IfExpr c2 =null;

        org.emftext.language.xpath2.OrExpr c3 =null;

        org.emftext.language.xpath2.AndExpr c4 =null;

        org.emftext.language.xpath2.ComparisonExpr c5 =null;

        org.emftext.language.xpath2.RangeExpr c6 =null;

        org.emftext.language.xpath2.AdditiveExpr c7 =null;

        org.emftext.language.xpath2.SinglePathExpr c8 =null;

        org.emftext.language.xpath2.DoublePathExpr c9 =null;

        org.emftext.language.xpath2.RelativePathExpr c10 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return element; }

            // Xpath2.g:7318:2: (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_SinglePathExpr |c9= parse_org_emftext_language_xpath2_DoublePathExpr |c10= parse_org_emftext_language_xpath2_RelativePathExpr )
            int alt36=11;
            switch ( input.LA(1) ) {
            case 54:
                {
                alt36=1;
                }
                break;
            case 51:
            case 76:
                {
                alt36=2;
                }
                break;
            case 57:
                {
                alt36=3;
                }
                break;
            case 23:
                {
                int LA36_5 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (synpred67_Xpath2()) ) {
                    alt36=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 5, input);

                    throw nvae;

                }
                }
                break;
            case 24:
                {
                int LA36_6 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (synpred68_Xpath2()) ) {
                    alt36=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 6, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                int LA36_7 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 7, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA36_8 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 8, input);

                    throw nvae;

                }
                }
                break;
            case 41:
                {
                int LA36_9 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 9, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA36_10 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 10, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA36_11 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 11, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA36_12 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 12, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA36_13 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 13, input);

                    throw nvae;

                }
                }
                break;
            case 63:
                {
                int LA36_14 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 14, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA36_15 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 15, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA36_16 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 16, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA36_17 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 17, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA36_18 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 18, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA36_19 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 19, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA36_20 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 20, input);

                    throw nvae;

                }
                }
                break;
            case 73:
                {
                int LA36_21 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 21, input);

                    throw nvae;

                }
                }
                break;
            case 47:
                {
                int LA36_22 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 22, input);

                    throw nvae;

                }
                }
                break;
            case 74:
                {
                int LA36_23 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 23, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA36_24 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 24, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA36_25 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 25, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                int LA36_26 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 26, input);

                    throw nvae;

                }
                }
                break;
            case 67:
                {
                int LA36_27 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 27, input);

                    throw nvae;

                }
                }
                break;
            case 38:
                {
                int LA36_28 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 28, input);

                    throw nvae;

                }
                }
                break;
            case 69:
                {
                int LA36_29 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 29, input);

                    throw nvae;

                }
                }
                break;
            case 68:
                {
                int LA36_30 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 30, input);

                    throw nvae;

                }
                }
                break;
            case 39:
                {
                int LA36_31 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 31, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA36_32 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 32, input);

                    throw nvae;

                }
                }
                break;
            case 14:
                {
                int LA36_33 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 33, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA36_34 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 34, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA36_35 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 35, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA36_36 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 36, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA36_37 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 37, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA36_38 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 38, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA36_39 = input.LA(2);

                if ( (synpred62_Xpath2()) ) {
                    alt36=4;
                }
                else if ( (synpred63_Xpath2()) ) {
                    alt36=5;
                }
                else if ( (synpred64_Xpath2()) ) {
                    alt36=6;
                }
                else if ( (synpred65_Xpath2()) ) {
                    alt36=7;
                }
                else if ( (synpred66_Xpath2()) ) {
                    alt36=8;
                }
                else if ( (true) ) {
                    alt36=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 39, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }

            switch (alt36) {
                case 1 :
                    // Xpath2.g:7319:2: c0= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_ExprSingle5688);
                    c0=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7320:4: c1= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_ExprSingle5698);
                    c1=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7321:4: c2= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_ExprSingle5708);
                    c2=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7322:4: c3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_ExprSingle5718);
                    c3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:7323:4: c4= parse_org_emftext_language_xpath2_AndExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_ExprSingle5728);
                    c4=parse_org_emftext_language_xpath2_AndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:7324:4: c5= parse_org_emftext_language_xpath2_ComparisonExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_ExprSingle5738);
                    c5=parse_org_emftext_language_xpath2_ComparisonExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:7325:4: c6= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ExprSingle5748);
                    c6=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:7326:4: c7= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ExprSingle5758);
                    c7=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:7327:4: c8= parse_org_emftext_language_xpath2_SinglePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_ExprSingle5768);
                    c8=parse_org_emftext_language_xpath2_SinglePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:7328:4: c9= parse_org_emftext_language_xpath2_DoublePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_ExprSingle5778);
                    c9=parse_org_emftext_language_xpath2_DoublePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:7329:4: c10= parse_org_emftext_language_xpath2_RelativePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_ExprSingle5788);
                    c10=parse_org_emftext_language_xpath2_RelativePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 67, parse_org_emftext_language_xpath2_ExprSingle_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ExprSingle"



    // $ANTLR start "parse_org_emftext_language_xpath2_OrExprChild"
    // Xpath2.g:7333:1: parse_org_emftext_language_xpath2_OrExprChild returns [org.emftext.language.xpath2.OrExprChild element = null] : (c0= parse_org_emftext_language_xpath2_AndExpr |c1= parse_org_emftext_language_xpath2_ComparisonExpr |c2= parse_org_emftext_language_xpath2_RangeExpr |c3= parse_org_emftext_language_xpath2_AdditiveExpr |c4= parse_org_emftext_language_xpath2_SinglePathExpr |c5= parse_org_emftext_language_xpath2_DoublePathExpr |c6= parse_org_emftext_language_xpath2_RelativePathExpr );
    public final org.emftext.language.xpath2.OrExprChild parse_org_emftext_language_xpath2_OrExprChild() throws RecognitionException {
        org.emftext.language.xpath2.OrExprChild element =  null;

        int parse_org_emftext_language_xpath2_OrExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.AndExpr c0 =null;

        org.emftext.language.xpath2.ComparisonExpr c1 =null;

        org.emftext.language.xpath2.RangeExpr c2 =null;

        org.emftext.language.xpath2.AdditiveExpr c3 =null;

        org.emftext.language.xpath2.SinglePathExpr c4 =null;

        org.emftext.language.xpath2.DoublePathExpr c5 =null;

        org.emftext.language.xpath2.RelativePathExpr c6 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return element; }

            // Xpath2.g:7334:2: (c0= parse_org_emftext_language_xpath2_AndExpr |c1= parse_org_emftext_language_xpath2_ComparisonExpr |c2= parse_org_emftext_language_xpath2_RangeExpr |c3= parse_org_emftext_language_xpath2_AdditiveExpr |c4= parse_org_emftext_language_xpath2_SinglePathExpr |c5= parse_org_emftext_language_xpath2_DoublePathExpr |c6= parse_org_emftext_language_xpath2_RelativePathExpr )
            int alt37=7;
            switch ( input.LA(1) ) {
            case 23:
                {
                int LA37_1 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (synpred73_Xpath2()) ) {
                    alt37=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 1, input);

                    throw nvae;

                }
                }
                break;
            case 24:
                {
                int LA37_2 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (synpred74_Xpath2()) ) {
                    alt37=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 2, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                int LA37_3 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 3, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA37_4 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 4, input);

                    throw nvae;

                }
                }
                break;
            case 41:
                {
                int LA37_5 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 5, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA37_6 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 6, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA37_7 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 7, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA37_8 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 8, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA37_9 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 9, input);

                    throw nvae;

                }
                }
                break;
            case 63:
                {
                int LA37_10 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 10, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA37_11 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 11, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA37_12 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 12, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA37_13 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 13, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA37_14 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 14, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA37_15 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 15, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA37_16 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 16, input);

                    throw nvae;

                }
                }
                break;
            case 73:
                {
                int LA37_17 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 17, input);

                    throw nvae;

                }
                }
                break;
            case 47:
                {
                int LA37_18 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 18, input);

                    throw nvae;

                }
                }
                break;
            case 74:
                {
                int LA37_19 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 19, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA37_20 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 20, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA37_21 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 21, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                int LA37_22 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 22, input);

                    throw nvae;

                }
                }
                break;
            case 67:
                {
                int LA37_23 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 23, input);

                    throw nvae;

                }
                }
                break;
            case 38:
                {
                int LA37_24 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 24, input);

                    throw nvae;

                }
                }
                break;
            case 69:
                {
                int LA37_25 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 25, input);

                    throw nvae;

                }
                }
                break;
            case 68:
                {
                int LA37_26 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 26, input);

                    throw nvae;

                }
                }
                break;
            case 39:
                {
                int LA37_27 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 27, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA37_28 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 28, input);

                    throw nvae;

                }
                }
                break;
            case 14:
                {
                int LA37_29 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 29, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA37_30 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 30, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA37_31 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 31, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA37_32 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 32, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA37_33 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 33, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA37_34 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 34, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA37_35 = input.LA(2);

                if ( (synpred69_Xpath2()) ) {
                    alt37=1;
                }
                else if ( (synpred70_Xpath2()) ) {
                    alt37=2;
                }
                else if ( (synpred71_Xpath2()) ) {
                    alt37=3;
                }
                else if ( (synpred72_Xpath2()) ) {
                    alt37=4;
                }
                else if ( (true) ) {
                    alt37=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 35, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;

            }

            switch (alt37) {
                case 1 :
                    // Xpath2.g:7335:2: c0= parse_org_emftext_language_xpath2_AndExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExprChild5809);
                    c0=parse_org_emftext_language_xpath2_AndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7336:4: c1= parse_org_emftext_language_xpath2_ComparisonExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_OrExprChild5819);
                    c1=parse_org_emftext_language_xpath2_ComparisonExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7337:4: c2= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_OrExprChild5829);
                    c2=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7338:4: c3= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_OrExprChild5839);
                    c3=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:7339:4: c4= parse_org_emftext_language_xpath2_SinglePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_OrExprChild5849);
                    c4=parse_org_emftext_language_xpath2_SinglePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:7340:4: c5= parse_org_emftext_language_xpath2_DoublePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_OrExprChild5859);
                    c5=parse_org_emftext_language_xpath2_DoublePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:7341:4: c6= parse_org_emftext_language_xpath2_RelativePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_OrExprChild5869);
                    c6=parse_org_emftext_language_xpath2_RelativePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 68, parse_org_emftext_language_xpath2_OrExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_OrExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_AndExprChild"
    // Xpath2.g:7345:1: parse_org_emftext_language_xpath2_AndExprChild returns [org.emftext.language.xpath2.AndExprChild element = null] : (c0= parse_org_emftext_language_xpath2_ComparisonExpr |c1= parse_org_emftext_language_xpath2_RangeExpr |c2= parse_org_emftext_language_xpath2_AdditiveExpr |c3= parse_org_emftext_language_xpath2_SinglePathExpr |c4= parse_org_emftext_language_xpath2_DoublePathExpr |c5= parse_org_emftext_language_xpath2_RelativePathExpr );
    public final org.emftext.language.xpath2.AndExprChild parse_org_emftext_language_xpath2_AndExprChild() throws RecognitionException {
        org.emftext.language.xpath2.AndExprChild element =  null;

        int parse_org_emftext_language_xpath2_AndExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.ComparisonExpr c0 =null;

        org.emftext.language.xpath2.RangeExpr c1 =null;

        org.emftext.language.xpath2.AdditiveExpr c2 =null;

        org.emftext.language.xpath2.SinglePathExpr c3 =null;

        org.emftext.language.xpath2.DoublePathExpr c4 =null;

        org.emftext.language.xpath2.RelativePathExpr c5 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return element; }

            // Xpath2.g:7346:2: (c0= parse_org_emftext_language_xpath2_ComparisonExpr |c1= parse_org_emftext_language_xpath2_RangeExpr |c2= parse_org_emftext_language_xpath2_AdditiveExpr |c3= parse_org_emftext_language_xpath2_SinglePathExpr |c4= parse_org_emftext_language_xpath2_DoublePathExpr |c5= parse_org_emftext_language_xpath2_RelativePathExpr )
            int alt38=6;
            switch ( input.LA(1) ) {
            case 23:
                {
                int LA38_1 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (synpred78_Xpath2()) ) {
                    alt38=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;

                }
                }
                break;
            case 24:
                {
                int LA38_2 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (synpred79_Xpath2()) ) {
                    alt38=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 2, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                int LA38_3 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 3, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA38_4 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 4, input);

                    throw nvae;

                }
                }
                break;
            case 41:
                {
                int LA38_5 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 5, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA38_6 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 6, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA38_7 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 7, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA38_8 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 8, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA38_9 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 9, input);

                    throw nvae;

                }
                }
                break;
            case 63:
                {
                int LA38_10 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 10, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA38_11 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 11, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA38_12 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 12, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA38_13 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 13, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA38_14 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 14, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA38_15 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 15, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA38_16 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 16, input);

                    throw nvae;

                }
                }
                break;
            case 73:
                {
                int LA38_17 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 17, input);

                    throw nvae;

                }
                }
                break;
            case 47:
                {
                int LA38_18 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 18, input);

                    throw nvae;

                }
                }
                break;
            case 74:
                {
                int LA38_19 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 19, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA38_20 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 20, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA38_21 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 21, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                int LA38_22 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 22, input);

                    throw nvae;

                }
                }
                break;
            case 67:
                {
                int LA38_23 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 23, input);

                    throw nvae;

                }
                }
                break;
            case 38:
                {
                int LA38_24 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 24, input);

                    throw nvae;

                }
                }
                break;
            case 69:
                {
                int LA38_25 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 25, input);

                    throw nvae;

                }
                }
                break;
            case 68:
                {
                int LA38_26 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 26, input);

                    throw nvae;

                }
                }
                break;
            case 39:
                {
                int LA38_27 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 27, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA38_28 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 28, input);

                    throw nvae;

                }
                }
                break;
            case 14:
                {
                int LA38_29 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 29, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA38_30 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 30, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA38_31 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 31, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA38_32 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 32, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA38_33 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 33, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA38_34 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 34, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA38_35 = input.LA(2);

                if ( (synpred75_Xpath2()) ) {
                    alt38=1;
                }
                else if ( (synpred76_Xpath2()) ) {
                    alt38=2;
                }
                else if ( (synpred77_Xpath2()) ) {
                    alt38=3;
                }
                else if ( (true) ) {
                    alt38=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 35, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;

            }

            switch (alt38) {
                case 1 :
                    // Xpath2.g:7347:2: c0= parse_org_emftext_language_xpath2_ComparisonExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExprChild5890);
                    c0=parse_org_emftext_language_xpath2_ComparisonExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7348:4: c1= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_AndExprChild5900);
                    c1=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7349:4: c2= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_AndExprChild5910);
                    c2=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7350:4: c3= parse_org_emftext_language_xpath2_SinglePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_AndExprChild5920);
                    c3=parse_org_emftext_language_xpath2_SinglePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:7351:4: c4= parse_org_emftext_language_xpath2_DoublePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_AndExprChild5930);
                    c4=parse_org_emftext_language_xpath2_DoublePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:7352:4: c5= parse_org_emftext_language_xpath2_RelativePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_AndExprChild5940);
                    c5=parse_org_emftext_language_xpath2_RelativePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 69, parse_org_emftext_language_xpath2_AndExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AndExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_ComparisonExprChild"
    // Xpath2.g:7356:1: parse_org_emftext_language_xpath2_ComparisonExprChild returns [org.emftext.language.xpath2.ComparisonExprChild element = null] : (c0= parse_org_emftext_language_xpath2_RangeExpr |c1= parse_org_emftext_language_xpath2_AdditiveExpr |c2= parse_org_emftext_language_xpath2_SinglePathExpr |c3= parse_org_emftext_language_xpath2_DoublePathExpr |c4= parse_org_emftext_language_xpath2_RelativePathExpr );
    public final org.emftext.language.xpath2.ComparisonExprChild parse_org_emftext_language_xpath2_ComparisonExprChild() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExprChild element =  null;

        int parse_org_emftext_language_xpath2_ComparisonExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.RangeExpr c0 =null;

        org.emftext.language.xpath2.AdditiveExpr c1 =null;

        org.emftext.language.xpath2.SinglePathExpr c2 =null;

        org.emftext.language.xpath2.DoublePathExpr c3 =null;

        org.emftext.language.xpath2.RelativePathExpr c4 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return element; }

            // Xpath2.g:7357:2: (c0= parse_org_emftext_language_xpath2_RangeExpr |c1= parse_org_emftext_language_xpath2_AdditiveExpr |c2= parse_org_emftext_language_xpath2_SinglePathExpr |c3= parse_org_emftext_language_xpath2_DoublePathExpr |c4= parse_org_emftext_language_xpath2_RelativePathExpr )
            int alt39=5;
            switch ( input.LA(1) ) {
            case 23:
                {
                int LA39_1 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (synpred82_Xpath2()) ) {
                    alt39=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 1, input);

                    throw nvae;

                }
                }
                break;
            case 24:
                {
                int LA39_2 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (synpred83_Xpath2()) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 2, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                int LA39_3 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 3, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA39_4 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 4, input);

                    throw nvae;

                }
                }
                break;
            case 41:
                {
                int LA39_5 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 5, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA39_6 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 6, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA39_7 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 7, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA39_8 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 8, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA39_9 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 9, input);

                    throw nvae;

                }
                }
                break;
            case 63:
                {
                int LA39_10 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 10, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA39_11 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 11, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA39_12 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 12, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA39_13 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 13, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA39_14 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 14, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA39_15 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 15, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA39_16 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 16, input);

                    throw nvae;

                }
                }
                break;
            case 73:
                {
                int LA39_17 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 17, input);

                    throw nvae;

                }
                }
                break;
            case 47:
                {
                int LA39_18 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 18, input);

                    throw nvae;

                }
                }
                break;
            case 74:
                {
                int LA39_19 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 19, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA39_20 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 20, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA39_21 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 21, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                int LA39_22 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 22, input);

                    throw nvae;

                }
                }
                break;
            case 67:
                {
                int LA39_23 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 23, input);

                    throw nvae;

                }
                }
                break;
            case 38:
                {
                int LA39_24 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 24, input);

                    throw nvae;

                }
                }
                break;
            case 69:
                {
                int LA39_25 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 25, input);

                    throw nvae;

                }
                }
                break;
            case 68:
                {
                int LA39_26 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 26, input);

                    throw nvae;

                }
                }
                break;
            case 39:
                {
                int LA39_27 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 27, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA39_28 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 28, input);

                    throw nvae;

                }
                }
                break;
            case 14:
                {
                int LA39_29 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 29, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA39_30 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 30, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA39_31 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 31, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA39_32 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 32, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA39_33 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 33, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA39_34 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 34, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA39_35 = input.LA(2);

                if ( (synpred80_Xpath2()) ) {
                    alt39=1;
                }
                else if ( (synpred81_Xpath2()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 35, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }

            switch (alt39) {
                case 1 :
                    // Xpath2.g:7358:2: c0= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5961);
                    c0=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7359:4: c1= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5971);
                    c1=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7360:4: c2= parse_org_emftext_language_xpath2_SinglePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5981);
                    c2=parse_org_emftext_language_xpath2_SinglePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7361:4: c3= parse_org_emftext_language_xpath2_DoublePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5991);
                    c3=parse_org_emftext_language_xpath2_DoublePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:7362:4: c4= parse_org_emftext_language_xpath2_RelativePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild6001);
                    c4=parse_org_emftext_language_xpath2_RelativePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 70, parse_org_emftext_language_xpath2_ComparisonExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ComparisonExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_Comp"
    // Xpath2.g:7366:1: parse_org_emftext_language_xpath2_Comp returns [org.emftext.language.xpath2.Comp element = null] : (c0= parse_org_emftext_language_xpath2_GeneralComp |c1= parse_org_emftext_language_xpath2_ValueComp |c2= parse_org_emftext_language_xpath2_NodeComp );
    public final org.emftext.language.xpath2.Comp parse_org_emftext_language_xpath2_Comp() throws RecognitionException {
        org.emftext.language.xpath2.Comp element =  null;

        int parse_org_emftext_language_xpath2_Comp_StartIndex = input.index();

        org.emftext.language.xpath2.GeneralComp c0 =null;

        org.emftext.language.xpath2.ValueComp c1 =null;

        org.emftext.language.xpath2.NodeComp c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return element; }

            // Xpath2.g:7367:2: (c0= parse_org_emftext_language_xpath2_GeneralComp |c1= parse_org_emftext_language_xpath2_ValueComp |c2= parse_org_emftext_language_xpath2_NodeComp )
            int alt40=3;
            switch ( input.LA(1) ) {
            case 13:
            case 27:
            case 29:
            case 30:
            case 31:
            case 32:
                {
                alt40=1;
                }
                break;
            case 50:
            case 55:
            case 56:
            case 61:
            case 62:
            case 64:
                {
                alt40=2;
                }
                break;
            case 28:
            case 33:
            case 59:
                {
                alt40=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }

            switch (alt40) {
                case 1 :
                    // Xpath2.g:7368:2: c0= parse_org_emftext_language_xpath2_GeneralComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralComp_in_parse_org_emftext_language_xpath2_Comp6022);
                    c0=parse_org_emftext_language_xpath2_GeneralComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7369:4: c1= parse_org_emftext_language_xpath2_ValueComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ValueComp_in_parse_org_emftext_language_xpath2_Comp6032);
                    c1=parse_org_emftext_language_xpath2_ValueComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7370:4: c2= parse_org_emftext_language_xpath2_NodeComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeComp_in_parse_org_emftext_language_xpath2_Comp6042);
                    c2=parse_org_emftext_language_xpath2_NodeComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 71, parse_org_emftext_language_xpath2_Comp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Comp"



    // $ANTLR start "parse_org_emftext_language_xpath2_RangeExprChild"
    // Xpath2.g:7374:1: parse_org_emftext_language_xpath2_RangeExprChild returns [org.emftext.language.xpath2.RangeExprChild element = null] : (c0= parse_org_emftext_language_xpath2_AdditiveExpr |c1= parse_org_emftext_language_xpath2_SinglePathExpr |c2= parse_org_emftext_language_xpath2_DoublePathExpr |c3= parse_org_emftext_language_xpath2_RelativePathExpr );
    public final org.emftext.language.xpath2.RangeExprChild parse_org_emftext_language_xpath2_RangeExprChild() throws RecognitionException {
        org.emftext.language.xpath2.RangeExprChild element =  null;

        int parse_org_emftext_language_xpath2_RangeExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.AdditiveExpr c0 =null;

        org.emftext.language.xpath2.SinglePathExpr c1 =null;

        org.emftext.language.xpath2.DoublePathExpr c2 =null;

        org.emftext.language.xpath2.RelativePathExpr c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return element; }

            // Xpath2.g:7375:2: (c0= parse_org_emftext_language_xpath2_AdditiveExpr |c1= parse_org_emftext_language_xpath2_SinglePathExpr |c2= parse_org_emftext_language_xpath2_DoublePathExpr |c3= parse_org_emftext_language_xpath2_RelativePathExpr )
            int alt41=4;
            switch ( input.LA(1) ) {
            case 23:
                {
                int LA41_1 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (synpred87_Xpath2()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;

                }
                }
                break;
            case 24:
                {
                int LA41_2 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (synpred88_Xpath2()) ) {
                    alt41=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 2, input);

                    throw nvae;

                }
                }
                break;
            case 42:
                {
                int LA41_3 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 3, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA41_4 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 4, input);

                    throw nvae;

                }
                }
                break;
            case 41:
                {
                int LA41_5 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 5, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA41_6 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 6, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA41_7 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 7, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA41_8 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 8, input);

                    throw nvae;

                }
                }
                break;
            case 52:
                {
                int LA41_9 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 9, input);

                    throw nvae;

                }
                }
                break;
            case 63:
                {
                int LA41_10 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 10, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA41_11 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 11, input);

                    throw nvae;

                }
                }
                break;
            case 65:
                {
                int LA41_12 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 12, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA41_13 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 13, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA41_14 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 14, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA41_15 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 15, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA41_16 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 16, input);

                    throw nvae;

                }
                }
                break;
            case 73:
                {
                int LA41_17 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 17, input);

                    throw nvae;

                }
                }
                break;
            case 47:
                {
                int LA41_18 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 18, input);

                    throw nvae;

                }
                }
                break;
            case 74:
                {
                int LA41_19 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 19, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA41_20 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 20, input);

                    throw nvae;

                }
                }
                break;
            case 17:
                {
                int LA41_21 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 21, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                int LA41_22 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 22, input);

                    throw nvae;

                }
                }
                break;
            case 67:
                {
                int LA41_23 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 23, input);

                    throw nvae;

                }
                }
                break;
            case 38:
                {
                int LA41_24 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 24, input);

                    throw nvae;

                }
                }
                break;
            case 69:
                {
                int LA41_25 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 25, input);

                    throw nvae;

                }
                }
                break;
            case 68:
                {
                int LA41_26 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 26, input);

                    throw nvae;

                }
                }
                break;
            case 39:
                {
                int LA41_27 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 27, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA41_28 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 28, input);

                    throw nvae;

                }
                }
                break;
            case 14:
                {
                int LA41_29 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 29, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA41_30 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 30, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA41_31 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 31, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA41_32 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 32, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA41_33 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 33, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA41_34 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 34, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA41_35 = input.LA(2);

                if ( (synpred86_Xpath2()) ) {
                    alt41=1;
                }
                else if ( (true) ) {
                    alt41=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 35, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;

            }

            switch (alt41) {
                case 1 :
                    // Xpath2.g:7376:2: c0= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6063);
                    c0=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7377:4: c1= parse_org_emftext_language_xpath2_SinglePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6073);
                    c1=parse_org_emftext_language_xpath2_SinglePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7378:4: c2= parse_org_emftext_language_xpath2_DoublePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6083);
                    c2=parse_org_emftext_language_xpath2_DoublePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7379:4: c3= parse_org_emftext_language_xpath2_RelativePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6093);
                    c3=parse_org_emftext_language_xpath2_RelativePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 72, parse_org_emftext_language_xpath2_RangeExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_RangeExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_AdditiveExprChild"
    // Xpath2.g:7383:1: parse_org_emftext_language_xpath2_AdditiveExprChild returns [org.emftext.language.xpath2.AdditiveExprChild element = null] : (c0= parse_org_emftext_language_xpath2_SinglePathExpr |c1= parse_org_emftext_language_xpath2_DoublePathExpr |c2= parse_org_emftext_language_xpath2_RelativePathExpr );
    public final org.emftext.language.xpath2.AdditiveExprChild parse_org_emftext_language_xpath2_AdditiveExprChild() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExprChild element =  null;

        int parse_org_emftext_language_xpath2_AdditiveExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.SinglePathExpr c0 =null;

        org.emftext.language.xpath2.DoublePathExpr c1 =null;

        org.emftext.language.xpath2.RelativePathExpr c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return element; }

            // Xpath2.g:7384:2: (c0= parse_org_emftext_language_xpath2_SinglePathExpr |c1= parse_org_emftext_language_xpath2_DoublePathExpr |c2= parse_org_emftext_language_xpath2_RelativePathExpr )
            int alt42=3;
            switch ( input.LA(1) ) {
            case 23:
                {
                alt42=1;
                }
                break;
            case 24:
                {
                alt42=2;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case STRING_LITERAL:
            case TEXT:
            case 14:
            case 15:
            case 17:
            case 21:
            case 22:
            case 35:
            case 38:
            case 39:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 52:
            case 53:
            case 63:
            case 65:
            case 67:
            case 68:
            case 69:
            case 70:
            case 73:
            case 74:
            case 75:
            case 77:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // Xpath2.g:7385:2: c0= parse_org_emftext_language_xpath2_SinglePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_AdditiveExprChild6114);
                    c0=parse_org_emftext_language_xpath2_SinglePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7386:4: c1= parse_org_emftext_language_xpath2_DoublePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_AdditiveExprChild6124);
                    c1=parse_org_emftext_language_xpath2_DoublePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7387:4: c2= parse_org_emftext_language_xpath2_RelativePathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_AdditiveExprChild6134);
                    c2=parse_org_emftext_language_xpath2_RelativePathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 73, parse_org_emftext_language_xpath2_AdditiveExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AdditiveExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_StepExpr"
    // Xpath2.g:7391:1: parse_org_emftext_language_xpath2_StepExpr returns [org.emftext.language.xpath2.StepExpr element = null] : (c0= parse_org_emftext_language_xpath2_AxisStep |c1= parse_org_emftext_language_xpath2_FilterExpr );
    public final org.emftext.language.xpath2.StepExpr parse_org_emftext_language_xpath2_StepExpr() throws RecognitionException {
        org.emftext.language.xpath2.StepExpr element =  null;

        int parse_org_emftext_language_xpath2_StepExpr_StartIndex = input.index();

        org.emftext.language.xpath2.AxisStep c0 =null;

        org.emftext.language.xpath2.FilterExpr c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return element; }

            // Xpath2.g:7392:2: (c0= parse_org_emftext_language_xpath2_AxisStep |c1= parse_org_emftext_language_xpath2_FilterExpr )
            int alt43=2;
            switch ( input.LA(1) ) {
            case TEXT:
            case 17:
            case 22:
            case 35:
            case 38:
            case 39:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 52:
            case 53:
            case 63:
            case 65:
            case 67:
            case 68:
            case 69:
            case 70:
            case 73:
            case 74:
            case 75:
            case 77:
                {
                alt43=1;
                }
                break;
            case NCNAME:
                {
                switch ( input.LA(2) ) {
                case 25:
                    {
                    int LA43_4 = input.LA(3);

                    if ( (LA43_4==NCNAME) ) {
                        int LA43_5 = input.LA(4);

                        if ( (LA43_5==EOF||LA43_5==13||LA43_5==16||(LA43_5 >= 18 && LA43_5 <= 20)||(LA43_5 >= 23 && LA43_5 <= 24)||(LA43_5 >= 27 && LA43_5 <= 33)||(LA43_5 >= 36 && LA43_5 <= 37)||LA43_5==40||LA43_5==48||LA43_5==50||(LA43_5 >= 55 && LA43_5 <= 56)||LA43_5==59||(LA43_5 >= 61 && LA43_5 <= 62)||LA43_5==64||LA43_5==66||(LA43_5 >= 71 && LA43_5 <= 72)||LA43_5==79) ) {
                            alt43=1;
                        }
                        else if ( (LA43_5==15) ) {
                            alt43=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 43, 5, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 4, input);

                        throw nvae;

                    }
                    }
                    break;
                case EOF:
                case 13:
                case 16:
                case 18:
                case 19:
                case 20:
                case 23:
                case 24:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 36:
                case 37:
                case 40:
                case 48:
                case 50:
                case 55:
                case 56:
                case 59:
                case 61:
                case 62:
                case 64:
                case 66:
                case 71:
                case 72:
                case 79:
                    {
                    alt43=1;
                    }
                    break;
                case 15:
                    {
                    alt43=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;

                }

                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case STRING_LITERAL:
            case 14:
            case 15:
            case 21:
                {
                alt43=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }

            switch (alt43) {
                case 1 :
                    // Xpath2.g:7393:2: c0= parse_org_emftext_language_xpath2_AxisStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_StepExpr6155);
                    c0=parse_org_emftext_language_xpath2_AxisStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7394:4: c1= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_StepExpr6165);
                    c1=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 74, parse_org_emftext_language_xpath2_StepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_TailPathExpr"
    // Xpath2.g:7398:1: parse_org_emftext_language_xpath2_TailPathExpr returns [org.emftext.language.xpath2.TailPathExpr element = null] : (c0= parse_org_emftext_language_xpath2_SingleTailPathExpr |c1= parse_org_emftext_language_xpath2_DoubleTailPathExpr );
    public final org.emftext.language.xpath2.TailPathExpr parse_org_emftext_language_xpath2_TailPathExpr() throws RecognitionException {
        org.emftext.language.xpath2.TailPathExpr element =  null;

        int parse_org_emftext_language_xpath2_TailPathExpr_StartIndex = input.index();

        org.emftext.language.xpath2.SingleTailPathExpr c0 =null;

        org.emftext.language.xpath2.DoubleTailPathExpr c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return element; }

            // Xpath2.g:7399:2: (c0= parse_org_emftext_language_xpath2_SingleTailPathExpr |c1= parse_org_emftext_language_xpath2_DoubleTailPathExpr )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==23) ) {
                alt44=1;
            }
            else if ( (LA44_0==24) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;

            }
            switch (alt44) {
                case 1 :
                    // Xpath2.g:7400:2: c0= parse_org_emftext_language_xpath2_SingleTailPathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SingleTailPathExpr_in_parse_org_emftext_language_xpath2_TailPathExpr6186);
                    c0=parse_org_emftext_language_xpath2_SingleTailPathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7401:4: c1= parse_org_emftext_language_xpath2_DoubleTailPathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleTailPathExpr_in_parse_org_emftext_language_xpath2_TailPathExpr6196);
                    c1=parse_org_emftext_language_xpath2_DoubleTailPathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 75, parse_org_emftext_language_xpath2_TailPathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_TailPathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_DirectionalStep"
    // Xpath2.g:7405:1: parse_org_emftext_language_xpath2_DirectionalStep returns [org.emftext.language.xpath2.DirectionalStep element = null] : (c0= parse_org_emftext_language_xpath2_GeneralForwardStep |c1= parse_org_emftext_language_xpath2_AbbrevForwardStep |c2= parse_org_emftext_language_xpath2_GeneralReverseStep |c3= parse_org_emftext_language_xpath2_AbbrevReverseStep );
    public final org.emftext.language.xpath2.DirectionalStep parse_org_emftext_language_xpath2_DirectionalStep() throws RecognitionException {
        org.emftext.language.xpath2.DirectionalStep element =  null;

        int parse_org_emftext_language_xpath2_DirectionalStep_StartIndex = input.index();

        org.emftext.language.xpath2.GeneralForwardStep c0 =null;

        org.emftext.language.xpath2.AbbrevForwardStep c1 =null;

        org.emftext.language.xpath2.GeneralReverseStep c2 =null;

        org.emftext.language.xpath2.AbbrevReverseStep c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return element; }

            // Xpath2.g:7406:2: (c0= parse_org_emftext_language_xpath2_GeneralForwardStep |c1= parse_org_emftext_language_xpath2_AbbrevForwardStep |c2= parse_org_emftext_language_xpath2_GeneralReverseStep |c3= parse_org_emftext_language_xpath2_AbbrevReverseStep )
            int alt45=4;
            switch ( input.LA(1) ) {
            case 42:
            case 44:
            case 45:
            case 52:
            case 53:
            case 63:
            case 75:
                {
                alt45=1;
                }
                break;
            case 41:
                {
                int LA45_2 = input.LA(2);

                if ( (LA45_2==26) ) {
                    alt45=1;
                }
                else if ( (LA45_2==15) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
            case TEXT:
            case 17:
            case 35:
            case 43:
            case 46:
            case 47:
            case 65:
            case 70:
            case 73:
            case 74:
            case 77:
                {
                alt45=2;
                }
                break;
            case 38:
            case 39:
            case 67:
            case 68:
            case 69:
                {
                alt45=3;
                }
                break;
            case 22:
                {
                alt45=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;

            }

            switch (alt45) {
                case 1 :
                    // Xpath2.g:7407:2: c0= parse_org_emftext_language_xpath2_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep6217);
                    c0=parse_org_emftext_language_xpath2_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7408:4: c1= parse_org_emftext_language_xpath2_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep6227);
                    c1=parse_org_emftext_language_xpath2_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7409:4: c2= parse_org_emftext_language_xpath2_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep6237);
                    c2=parse_org_emftext_language_xpath2_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7410:4: c3= parse_org_emftext_language_xpath2_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep6247);
                    c3=parse_org_emftext_language_xpath2_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 76, parse_org_emftext_language_xpath2_DirectionalStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DirectionalStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeTest"
    // Xpath2.g:7414:1: parse_org_emftext_language_xpath2_NodeTest returns [org.emftext.language.xpath2.NodeTest element = null] : (c0= parse_org_emftext_language_xpath2_NodeKindTest |c1= parse_org_emftext_language_xpath2_QNameTest |c2= parse_org_emftext_language_xpath2_AnyWildcard |c3= parse_org_emftext_language_xpath2_LocalNameWildcard |c4= parse_org_emftext_language_xpath2_NamespaceWildcard );
    public final org.emftext.language.xpath2.NodeTest parse_org_emftext_language_xpath2_NodeTest() throws RecognitionException {
        org.emftext.language.xpath2.NodeTest element =  null;

        int parse_org_emftext_language_xpath2_NodeTest_StartIndex = input.index();

        org.emftext.language.xpath2.NodeKindTest c0 =null;

        org.emftext.language.xpath2.QNameTest c1 =null;

        org.emftext.language.xpath2.AnyWildcard c2 =null;

        org.emftext.language.xpath2.LocalNameWildcard c3 =null;

        org.emftext.language.xpath2.NamespaceWildcard c4 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return element; }

            // Xpath2.g:7415:2: (c0= parse_org_emftext_language_xpath2_NodeKindTest |c1= parse_org_emftext_language_xpath2_QNameTest |c2= parse_org_emftext_language_xpath2_AnyWildcard |c3= parse_org_emftext_language_xpath2_LocalNameWildcard |c4= parse_org_emftext_language_xpath2_NamespaceWildcard )
            int alt46=5;
            switch ( input.LA(1) ) {
            case 41:
            case 43:
            case 46:
            case 47:
            case 65:
            case 70:
            case 73:
            case 74:
            case 77:
                {
                alt46=1;
                }
                break;
            case NCNAME:
                {
                alt46=2;
                }
                break;
            case 17:
                {
                int LA46_3 = input.LA(2);

                if ( (LA46_3==EOF||LA46_3==13||LA46_3==16||(LA46_3 >= 18 && LA46_3 <= 20)||(LA46_3 >= 23 && LA46_3 <= 24)||(LA46_3 >= 27 && LA46_3 <= 33)||(LA46_3 >= 36 && LA46_3 <= 37)||LA46_3==40||LA46_3==48||LA46_3==50||(LA46_3 >= 55 && LA46_3 <= 56)||LA46_3==59||(LA46_3 >= 61 && LA46_3 <= 62)||LA46_3==64||LA46_3==66||(LA46_3 >= 71 && LA46_3 <= 72)||LA46_3==79) ) {
                    alt46=3;
                }
                else if ( (LA46_3==25) ) {
                    alt46=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 3, input);

                    throw nvae;

                }
                }
                break;
            case TEXT:
                {
                alt46=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }

            switch (alt46) {
                case 1 :
                    // Xpath2.g:7416:2: c0= parse_org_emftext_language_xpath2_NodeKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeKindTest_in_parse_org_emftext_language_xpath2_NodeTest6268);
                    c0=parse_org_emftext_language_xpath2_NodeKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7417:4: c1= parse_org_emftext_language_xpath2_QNameTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QNameTest_in_parse_org_emftext_language_xpath2_NodeTest6278);
                    c1=parse_org_emftext_language_xpath2_QNameTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7418:4: c2= parse_org_emftext_language_xpath2_AnyWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyWildcard_in_parse_org_emftext_language_xpath2_NodeTest6288);
                    c2=parse_org_emftext_language_xpath2_AnyWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7419:4: c3= parse_org_emftext_language_xpath2_LocalNameWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_LocalNameWildcard_in_parse_org_emftext_language_xpath2_NodeTest6298);
                    c3=parse_org_emftext_language_xpath2_LocalNameWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:7420:4: c4= parse_org_emftext_language_xpath2_NamespaceWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NamespaceWildcard_in_parse_org_emftext_language_xpath2_NodeTest6308);
                    c4=parse_org_emftext_language_xpath2_NamespaceWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 77, parse_org_emftext_language_xpath2_NodeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_KindTest"
    // Xpath2.g:7424:1: parse_org_emftext_language_xpath2_KindTest returns [org.emftext.language.xpath2.KindTest element = null] : (c0= parse_org_emftext_language_xpath2_AnyKindTest |c1= parse_org_emftext_language_xpath2_DocumentTest |c2= parse_org_emftext_language_xpath2_TextTest |c3= parse_org_emftext_language_xpath2_CommentTest |c4= parse_org_emftext_language_xpath2_PITest |c5= parse_org_emftext_language_xpath2_NCNamePITest |c6= parse_org_emftext_language_xpath2_StringLiteralPITest |c7= parse_org_emftext_language_xpath2_AttributeTest |c8= parse_org_emftext_language_xpath2_WildcardAttributeTest |c9= parse_org_emftext_language_xpath2_NameAttributeTest |c10= parse_org_emftext_language_xpath2_SchemaAttributeTest |c11= parse_org_emftext_language_xpath2_ElementTest |c12= parse_org_emftext_language_xpath2_WildcardElementTest |c13= parse_org_emftext_language_xpath2_NameElementTest |c14= parse_org_emftext_language_xpath2_SchemaElementTest );
    public final org.emftext.language.xpath2.KindTest parse_org_emftext_language_xpath2_KindTest() throws RecognitionException {
        org.emftext.language.xpath2.KindTest element =  null;

        int parse_org_emftext_language_xpath2_KindTest_StartIndex = input.index();

        org.emftext.language.xpath2.AnyKindTest c0 =null;

        org.emftext.language.xpath2.DocumentTest c1 =null;

        org.emftext.language.xpath2.TextTest c2 =null;

        org.emftext.language.xpath2.CommentTest c3 =null;

        org.emftext.language.xpath2.PITest c4 =null;

        org.emftext.language.xpath2.NCNamePITest c5 =null;

        org.emftext.language.xpath2.StringLiteralPITest c6 =null;

        org.emftext.language.xpath2.AttributeTest c7 =null;

        org.emftext.language.xpath2.WildcardAttributeTest c8 =null;

        org.emftext.language.xpath2.NameAttributeTest c9 =null;

        org.emftext.language.xpath2.SchemaAttributeTest c10 =null;

        org.emftext.language.xpath2.ElementTest c11 =null;

        org.emftext.language.xpath2.WildcardElementTest c12 =null;

        org.emftext.language.xpath2.NameElementTest c13 =null;

        org.emftext.language.xpath2.SchemaElementTest c14 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return element; }

            // Xpath2.g:7425:2: (c0= parse_org_emftext_language_xpath2_AnyKindTest |c1= parse_org_emftext_language_xpath2_DocumentTest |c2= parse_org_emftext_language_xpath2_TextTest |c3= parse_org_emftext_language_xpath2_CommentTest |c4= parse_org_emftext_language_xpath2_PITest |c5= parse_org_emftext_language_xpath2_NCNamePITest |c6= parse_org_emftext_language_xpath2_StringLiteralPITest |c7= parse_org_emftext_language_xpath2_AttributeTest |c8= parse_org_emftext_language_xpath2_WildcardAttributeTest |c9= parse_org_emftext_language_xpath2_NameAttributeTest |c10= parse_org_emftext_language_xpath2_SchemaAttributeTest |c11= parse_org_emftext_language_xpath2_ElementTest |c12= parse_org_emftext_language_xpath2_WildcardElementTest |c13= parse_org_emftext_language_xpath2_NameElementTest |c14= parse_org_emftext_language_xpath2_SchemaElementTest )
            int alt47=15;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt47=1;
                }
                break;
            case 46:
                {
                alt47=2;
                }
                break;
            case 77:
                {
                alt47=3;
                }
                break;
            case 43:
                {
                alt47=4;
                }
                break;
            case 70:
                {
                int LA47_5 = input.LA(2);

                if ( (LA47_5==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt47=5;
                        }
                        break;
                    case NCNAME:
                        {
                        int LA47_14 = input.LA(4);

                        if ( (LA47_14==16) ) {
                            int LA47_22 = input.LA(5);

                            if ( (synpred104_Xpath2()) ) {
                                alt47=5;
                            }
                            else if ( (synpred105_Xpath2()) ) {
                                alt47=6;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 22, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 47, 14, input);

                            throw nvae;

                        }
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        int LA47_15 = input.LA(4);

                        if ( (LA47_15==16) ) {
                            int LA47_23 = input.LA(5);

                            if ( (synpred104_Xpath2()) ) {
                                alt47=5;
                            }
                            else if ( (synpred106_Xpath2()) ) {
                                alt47=7;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 23, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 47, 15, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 10, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 5, input);

                    throw nvae;

                }
                }
                break;
            case 41:
                {
                int LA47_6 = input.LA(2);

                if ( (LA47_6==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt47=8;
                        }
                        break;
                    case 17:
                        {
                        int LA47_17 = input.LA(4);

                        if ( (LA47_17==19) ) {
                            int LA47_24 = input.LA(5);

                            if ( (LA47_24==NCNAME) ) {
                                int LA47_36 = input.LA(6);

                                if ( (LA47_36==25) ) {
                                    int LA47_46 = input.LA(7);

                                    if ( (LA47_46==NCNAME) ) {
                                        int LA47_52 = input.LA(8);

                                        if ( (LA47_52==16) ) {
                                            int LA47_25 = input.LA(9);

                                            if ( (synpred107_Xpath2()) ) {
                                                alt47=8;
                                            }
                                            else if ( (synpred108_Xpath2()) ) {
                                                alt47=9;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 25, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 52, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 46, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA47_36==16) ) {
                                    int LA47_25 = input.LA(7);

                                    if ( (synpred107_Xpath2()) ) {
                                        alt47=8;
                                    }
                                    else if ( (synpred108_Xpath2()) ) {
                                        alt47=9;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 25, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 47, 36, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 24, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA47_17==16) ) {
                            int LA47_25 = input.LA(5);

                            if ( (synpred107_Xpath2()) ) {
                                alt47=8;
                            }
                            else if ( (synpred108_Xpath2()) ) {
                                alt47=9;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 25, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 47, 17, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        switch ( input.LA(4) ) {
                        case 25:
                            {
                            int LA47_26 = input.LA(5);

                            if ( (LA47_26==NCNAME) ) {
                                int LA47_38 = input.LA(6);

                                if ( (LA47_38==19) ) {
                                    int LA47_27 = input.LA(7);

                                    if ( (LA47_27==NCNAME) ) {
                                        int LA47_39 = input.LA(8);

                                        if ( (LA47_39==25) ) {
                                            int LA47_47 = input.LA(9);

                                            if ( (LA47_47==NCNAME) ) {
                                                int LA47_53 = input.LA(10);

                                                if ( (LA47_53==16) ) {
                                                    int LA47_28 = input.LA(11);

                                                    if ( (synpred107_Xpath2()) ) {
                                                        alt47=8;
                                                    }
                                                    else if ( (synpred109_Xpath2()) ) {
                                                        alt47=10;
                                                    }
                                                    else {
                                                        if (state.backtracking>0) {state.failed=true; return element;}
                                                        NoViableAltException nvae =
                                                            new NoViableAltException("", 47, 28, input);

                                                        throw nvae;

                                                    }
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 47, 53, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 47, input);

                                                throw nvae;

                                            }
                                        }
                                        else if ( (LA47_39==16) ) {
                                            int LA47_28 = input.LA(9);

                                            if ( (synpred107_Xpath2()) ) {
                                                alt47=8;
                                            }
                                            else if ( (synpred109_Xpath2()) ) {
                                                alt47=10;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 28, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 39, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 27, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA47_38==16) ) {
                                    int LA47_28 = input.LA(7);

                                    if ( (synpred107_Xpath2()) ) {
                                        alt47=8;
                                    }
                                    else if ( (synpred109_Xpath2()) ) {
                                        alt47=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 28, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 47, 38, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 26, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 19:
                            {
                            int LA47_27 = input.LA(5);

                            if ( (LA47_27==NCNAME) ) {
                                int LA47_39 = input.LA(6);

                                if ( (LA47_39==25) ) {
                                    int LA47_47 = input.LA(7);

                                    if ( (LA47_47==NCNAME) ) {
                                        int LA47_53 = input.LA(8);

                                        if ( (LA47_53==16) ) {
                                            int LA47_28 = input.LA(9);

                                            if ( (synpred107_Xpath2()) ) {
                                                alt47=8;
                                            }
                                            else if ( (synpred109_Xpath2()) ) {
                                                alt47=10;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 28, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 53, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 47, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA47_39==16) ) {
                                    int LA47_28 = input.LA(7);

                                    if ( (synpred107_Xpath2()) ) {
                                        alt47=8;
                                    }
                                    else if ( (synpred109_Xpath2()) ) {
                                        alt47=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 28, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 47, 39, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 27, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 16:
                            {
                            int LA47_28 = input.LA(5);

                            if ( (synpred107_Xpath2()) ) {
                                alt47=8;
                            }
                            else if ( (synpred109_Xpath2()) ) {
                                alt47=10;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 28, input);

                                throw nvae;

                            }
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 47, 18, input);

                            throw nvae;

                        }

                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 11, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 6, input);

                    throw nvae;

                }
                }
                break;
            case 73:
                {
                alt47=11;
                }
                break;
            case 47:
                {
                int LA47_8 = input.LA(2);

                if ( (LA47_8==15) ) {
                    switch ( input.LA(3) ) {
                    case 16:
                        {
                        alt47=12;
                        }
                        break;
                    case 17:
                        {
                        int LA47_20 = input.LA(4);

                        if ( (LA47_20==19) ) {
                            int LA47_29 = input.LA(5);

                            if ( (LA47_29==NCNAME) ) {
                                int LA47_41 = input.LA(6);

                                if ( (LA47_41==25) ) {
                                    int LA47_48 = input.LA(7);

                                    if ( (LA47_48==NCNAME) ) {
                                        int LA47_54 = input.LA(8);

                                        if ( (LA47_54==34) ) {
                                            int LA47_49 = input.LA(9);

                                            if ( (LA47_49==16) ) {
                                                int LA47_30 = input.LA(10);

                                                if ( (synpred111_Xpath2()) ) {
                                                    alt47=12;
                                                }
                                                else if ( (synpred112_Xpath2()) ) {
                                                    alt47=13;
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 47, 30, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 49, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 54, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 48, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA47_41==34) ) {
                                    int LA47_49 = input.LA(7);

                                    if ( (LA47_49==16) ) {
                                        int LA47_30 = input.LA(8);

                                        if ( (synpred111_Xpath2()) ) {
                                            alt47=12;
                                        }
                                        else if ( (synpred112_Xpath2()) ) {
                                            alt47=13;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 30, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 49, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 47, 41, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 29, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA47_20==16) ) {
                            int LA47_30 = input.LA(5);

                            if ( (synpred111_Xpath2()) ) {
                                alt47=12;
                            }
                            else if ( (synpred112_Xpath2()) ) {
                                alt47=13;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 30, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 47, 20, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        switch ( input.LA(4) ) {
                        case 25:
                            {
                            int LA47_31 = input.LA(5);

                            if ( (LA47_31==NCNAME) ) {
                                int LA47_43 = input.LA(6);

                                if ( (LA47_43==19) ) {
                                    int LA47_32 = input.LA(7);

                                    if ( (LA47_32==NCNAME) ) {
                                        int LA47_44 = input.LA(8);

                                        if ( (LA47_44==25) ) {
                                            int LA47_50 = input.LA(9);

                                            if ( (LA47_50==NCNAME) ) {
                                                int LA47_55 = input.LA(10);

                                                if ( (LA47_55==34) ) {
                                                    int LA47_51 = input.LA(11);

                                                    if ( (LA47_51==16) ) {
                                                        int LA47_33 = input.LA(12);

                                                        if ( (synpred111_Xpath2()) ) {
                                                            alt47=12;
                                                        }
                                                        else if ( (synpred113_Xpath2()) ) {
                                                            alt47=14;
                                                        }
                                                        else {
                                                            if (state.backtracking>0) {state.failed=true; return element;}
                                                            NoViableAltException nvae =
                                                                new NoViableAltException("", 47, 33, input);

                                                            throw nvae;

                                                        }
                                                    }
                                                    else {
                                                        if (state.backtracking>0) {state.failed=true; return element;}
                                                        NoViableAltException nvae =
                                                            new NoViableAltException("", 47, 51, input);

                                                        throw nvae;

                                                    }
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 47, 55, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 50, input);

                                                throw nvae;

                                            }
                                        }
                                        else if ( (LA47_44==34) ) {
                                            int LA47_51 = input.LA(9);

                                            if ( (LA47_51==16) ) {
                                                int LA47_33 = input.LA(10);

                                                if ( (synpred111_Xpath2()) ) {
                                                    alt47=12;
                                                }
                                                else if ( (synpred113_Xpath2()) ) {
                                                    alt47=14;
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 47, 33, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 51, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 44, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 32, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA47_43==16) ) {
                                    int LA47_33 = input.LA(7);

                                    if ( (synpred111_Xpath2()) ) {
                                        alt47=12;
                                    }
                                    else if ( (synpred113_Xpath2()) ) {
                                        alt47=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 47, 43, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 31, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 19:
                            {
                            int LA47_32 = input.LA(5);

                            if ( (LA47_32==NCNAME) ) {
                                int LA47_44 = input.LA(6);

                                if ( (LA47_44==25) ) {
                                    int LA47_50 = input.LA(7);

                                    if ( (LA47_50==NCNAME) ) {
                                        int LA47_55 = input.LA(8);

                                        if ( (LA47_55==34) ) {
                                            int LA47_51 = input.LA(9);

                                            if ( (LA47_51==16) ) {
                                                int LA47_33 = input.LA(10);

                                                if ( (synpred111_Xpath2()) ) {
                                                    alt47=12;
                                                }
                                                else if ( (synpred113_Xpath2()) ) {
                                                    alt47=14;
                                                }
                                                else {
                                                    if (state.backtracking>0) {state.failed=true; return element;}
                                                    NoViableAltException nvae =
                                                        new NoViableAltException("", 47, 33, input);

                                                    throw nvae;

                                                }
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return element;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 47, 51, input);

                                                throw nvae;

                                            }
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 55, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 50, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA47_44==34) ) {
                                    int LA47_51 = input.LA(7);

                                    if ( (LA47_51==16) ) {
                                        int LA47_33 = input.LA(8);

                                        if ( (synpred111_Xpath2()) ) {
                                            alt47=12;
                                        }
                                        else if ( (synpred113_Xpath2()) ) {
                                            alt47=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 47, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 47, 51, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 47, 44, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 32, input);

                                throw nvae;

                            }
                            }
                            break;
                        case 16:
                            {
                            int LA47_33 = input.LA(5);

                            if ( (synpred111_Xpath2()) ) {
                                alt47=12;
                            }
                            else if ( (synpred113_Xpath2()) ) {
                                alt47=14;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 47, 33, input);

                                throw nvae;

                            }
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 47, 21, input);

                            throw nvae;

                        }

                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 12, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 8, input);

                    throw nvae;

                }
                }
                break;
            case 74:
                {
                alt47=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;

            }

            switch (alt47) {
                case 1 :
                    // Xpath2.g:7426:2: c0= parse_org_emftext_language_xpath2_AnyKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyKindTest_in_parse_org_emftext_language_xpath2_KindTest6329);
                    c0=parse_org_emftext_language_xpath2_AnyKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7427:4: c1= parse_org_emftext_language_xpath2_DocumentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DocumentTest_in_parse_org_emftext_language_xpath2_KindTest6339);
                    c1=parse_org_emftext_language_xpath2_DocumentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7428:4: c2= parse_org_emftext_language_xpath2_TextTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TextTest_in_parse_org_emftext_language_xpath2_KindTest6349);
                    c2=parse_org_emftext_language_xpath2_TextTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7429:4: c3= parse_org_emftext_language_xpath2_CommentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CommentTest_in_parse_org_emftext_language_xpath2_KindTest6359);
                    c3=parse_org_emftext_language_xpath2_CommentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:7430:4: c4= parse_org_emftext_language_xpath2_PITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PITest_in_parse_org_emftext_language_xpath2_KindTest6369);
                    c4=parse_org_emftext_language_xpath2_PITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:7431:4: c5= parse_org_emftext_language_xpath2_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_KindTest6379);
                    c5=parse_org_emftext_language_xpath2_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:7432:4: c6= parse_org_emftext_language_xpath2_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_KindTest6389);
                    c6=parse_org_emftext_language_xpath2_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:7433:4: c7= parse_org_emftext_language_xpath2_AttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_parse_org_emftext_language_xpath2_KindTest6399);
                    c7=parse_org_emftext_language_xpath2_AttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:7434:4: c8= parse_org_emftext_language_xpath2_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_KindTest6409);
                    c8=parse_org_emftext_language_xpath2_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:7435:4: c9= parse_org_emftext_language_xpath2_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_KindTest6419);
                    c9=parse_org_emftext_language_xpath2_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:7436:4: c10= parse_org_emftext_language_xpath2_SchemaAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaAttributeTest_in_parse_org_emftext_language_xpath2_KindTest6429);
                    c10=parse_org_emftext_language_xpath2_SchemaAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath2.g:7437:4: c11= parse_org_emftext_language_xpath2_ElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_KindTest6439);
                    c11=parse_org_emftext_language_xpath2_ElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath2.g:7438:4: c12= parse_org_emftext_language_xpath2_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_KindTest6449);
                    c12=parse_org_emftext_language_xpath2_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath2.g:7439:4: c13= parse_org_emftext_language_xpath2_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_KindTest6459);
                    c13=parse_org_emftext_language_xpath2_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath2.g:7440:4: c14= parse_org_emftext_language_xpath2_SchemaElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_KindTest6469);
                    c14=parse_org_emftext_language_xpath2_SchemaElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 78, parse_org_emftext_language_xpath2_KindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_KindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_PrimaryExpr"
    // Xpath2.g:7444:1: parse_org_emftext_language_xpath2_PrimaryExpr returns [org.emftext.language.xpath2.PrimaryExpr element = null] : (c0= parse_org_emftext_language_xpath2_VarRef |c1= parse_org_emftext_language_xpath2_ParenthesizedExpr |c2= parse_org_emftext_language_xpath2_ContextItemExpr |c3= parse_org_emftext_language_xpath2_FunctionCall |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral );
    public final org.emftext.language.xpath2.PrimaryExpr parse_org_emftext_language_xpath2_PrimaryExpr() throws RecognitionException {
        org.emftext.language.xpath2.PrimaryExpr element =  null;

        int parse_org_emftext_language_xpath2_PrimaryExpr_StartIndex = input.index();

        org.emftext.language.xpath2.VarRef c0 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c1 =null;

        org.emftext.language.xpath2.ContextItemExpr c2 =null;

        org.emftext.language.xpath2.FunctionCall c3 =null;

        org.emftext.language.xpath2.IntegerLiteral c4 =null;

        org.emftext.language.xpath2.DecimalLiteral c5 =null;

        org.emftext.language.xpath2.DoubleLiteral c6 =null;

        org.emftext.language.xpath2.StringLiteral c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return element; }

            // Xpath2.g:7445:2: (c0= parse_org_emftext_language_xpath2_VarRef |c1= parse_org_emftext_language_xpath2_ParenthesizedExpr |c2= parse_org_emftext_language_xpath2_ContextItemExpr |c3= parse_org_emftext_language_xpath2_FunctionCall |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral )
            int alt48=8;
            switch ( input.LA(1) ) {
            case 14:
                {
                alt48=1;
                }
                break;
            case 15:
                {
                alt48=2;
                }
                break;
            case 21:
                {
                alt48=3;
                }
                break;
            case NCNAME:
                {
                alt48=4;
                }
                break;
            case INTEGER_LITERAL:
                {
                alt48=5;
                }
                break;
            case DECIMAL_LITERAL:
                {
                alt48=6;
                }
                break;
            case DOUBLE_LITERAL:
                {
                alt48=7;
                }
                break;
            case STRING_LITERAL:
                {
                alt48=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;

            }

            switch (alt48) {
                case 1 :
                    // Xpath2.g:7446:2: c0= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PrimaryExpr6490);
                    c0=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7447:4: c1= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr6500);
                    c1=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7448:4: c2= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr6510);
                    c2=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:7449:4: c3= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PrimaryExpr6520);
                    c3=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:7450:4: c4= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6530);
                    c4=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:7451:4: c5= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6540);
                    c5=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:7452:4: c6= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6550);
                    c6=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:7453:4: c7= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6560);
                    c7=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 79, parse_org_emftext_language_xpath2_PrimaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PrimaryExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemType"
    // Xpath2.g:7457:1: parse_org_emftext_language_xpath2_ItemType returns [org.emftext.language.xpath2.ItemType element = null] : (c0= parse_org_emftext_language_xpath2_ItemKindTest |c1= parse_org_emftext_language_xpath2_AnyItemType |c2= parse_org_emftext_language_xpath2_AtomicItemType );
    public final org.emftext.language.xpath2.ItemType parse_org_emftext_language_xpath2_ItemType() throws RecognitionException {
        org.emftext.language.xpath2.ItemType element =  null;

        int parse_org_emftext_language_xpath2_ItemType_StartIndex = input.index();

        org.emftext.language.xpath2.ItemKindTest c0 =null;

        org.emftext.language.xpath2.AnyItemType c1 =null;

        org.emftext.language.xpath2.AtomicItemType c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return element; }

            // Xpath2.g:7458:2: (c0= parse_org_emftext_language_xpath2_ItemKindTest |c1= parse_org_emftext_language_xpath2_AnyItemType |c2= parse_org_emftext_language_xpath2_AtomicItemType )
            int alt49=3;
            switch ( input.LA(1) ) {
            case 41:
            case 43:
            case 46:
            case 47:
            case 65:
            case 70:
            case 73:
            case 74:
            case 77:
                {
                alt49=1;
                }
                break;
            case 60:
                {
                alt49=2;
                }
                break;
            case NCNAME:
                {
                alt49=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;

            }

            switch (alt49) {
                case 1 :
                    // Xpath2.g:7459:2: c0= parse_org_emftext_language_xpath2_ItemKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemKindTest_in_parse_org_emftext_language_xpath2_ItemType6581);
                    c0=parse_org_emftext_language_xpath2_ItemKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:7460:4: c1= parse_org_emftext_language_xpath2_AnyItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyItemType_in_parse_org_emftext_language_xpath2_ItemType6591);
                    c1=parse_org_emftext_language_xpath2_AnyItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7461:4: c2= parse_org_emftext_language_xpath2_AtomicItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicItemType_in_parse_org_emftext_language_xpath2_ItemType6601);
                    c2=parse_org_emftext_language_xpath2_AtomicItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 80, parse_org_emftext_language_xpath2_ItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemType"

    // $ANTLR start synpred62_Xpath2
    public final void synpred62_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.OrExpr c3 =null;


        // Xpath2.g:7322:4: (c3= parse_org_emftext_language_xpath2_OrExpr )
        // Xpath2.g:7322:4: c3= parse_org_emftext_language_xpath2_OrExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_synpred62_Xpath25718);
        c3=parse_org_emftext_language_xpath2_OrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred62_Xpath2

    // $ANTLR start synpred63_Xpath2
    public final void synpred63_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AndExpr c4 =null;


        // Xpath2.g:7323:4: (c4= parse_org_emftext_language_xpath2_AndExpr )
        // Xpath2.g:7323:4: c4= parse_org_emftext_language_xpath2_AndExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred63_Xpath25728);
        c4=parse_org_emftext_language_xpath2_AndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred63_Xpath2

    // $ANTLR start synpred64_Xpath2
    public final void synpred64_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr c5 =null;


        // Xpath2.g:7324:4: (c5= parse_org_emftext_language_xpath2_ComparisonExpr )
        // Xpath2.g:7324:4: c5= parse_org_emftext_language_xpath2_ComparisonExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred64_Xpath25738);
        c5=parse_org_emftext_language_xpath2_ComparisonExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred64_Xpath2

    // $ANTLR start synpred65_Xpath2
    public final void synpred65_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr c6 =null;


        // Xpath2.g:7325:4: (c6= parse_org_emftext_language_xpath2_RangeExpr )
        // Xpath2.g:7325:4: c6= parse_org_emftext_language_xpath2_RangeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred65_Xpath25748);
        c6=parse_org_emftext_language_xpath2_RangeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred65_Xpath2

    // $ANTLR start synpred66_Xpath2
    public final void synpred66_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr c7 =null;


        // Xpath2.g:7326:4: (c7= parse_org_emftext_language_xpath2_AdditiveExpr )
        // Xpath2.g:7326:4: c7= parse_org_emftext_language_xpath2_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred66_Xpath25758);
        c7=parse_org_emftext_language_xpath2_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred66_Xpath2

    // $ANTLR start synpred67_Xpath2
    public final void synpred67_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SinglePathExpr c8 =null;


        // Xpath2.g:7327:4: (c8= parse_org_emftext_language_xpath2_SinglePathExpr )
        // Xpath2.g:7327:4: c8= parse_org_emftext_language_xpath2_SinglePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred67_Xpath25768);
        c8=parse_org_emftext_language_xpath2_SinglePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred67_Xpath2

    // $ANTLR start synpred68_Xpath2
    public final void synpred68_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoublePathExpr c9 =null;


        // Xpath2.g:7328:4: (c9= parse_org_emftext_language_xpath2_DoublePathExpr )
        // Xpath2.g:7328:4: c9= parse_org_emftext_language_xpath2_DoublePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred68_Xpath25778);
        c9=parse_org_emftext_language_xpath2_DoublePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred68_Xpath2

    // $ANTLR start synpred69_Xpath2
    public final void synpred69_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AndExpr c0 =null;


        // Xpath2.g:7335:2: (c0= parse_org_emftext_language_xpath2_AndExpr )
        // Xpath2.g:7335:2: c0= parse_org_emftext_language_xpath2_AndExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred69_Xpath25809);
        c0=parse_org_emftext_language_xpath2_AndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred69_Xpath2

    // $ANTLR start synpred70_Xpath2
    public final void synpred70_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr c1 =null;


        // Xpath2.g:7336:4: (c1= parse_org_emftext_language_xpath2_ComparisonExpr )
        // Xpath2.g:7336:4: c1= parse_org_emftext_language_xpath2_ComparisonExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred70_Xpath25819);
        c1=parse_org_emftext_language_xpath2_ComparisonExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred70_Xpath2

    // $ANTLR start synpred71_Xpath2
    public final void synpred71_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr c2 =null;


        // Xpath2.g:7337:4: (c2= parse_org_emftext_language_xpath2_RangeExpr )
        // Xpath2.g:7337:4: c2= parse_org_emftext_language_xpath2_RangeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred71_Xpath25829);
        c2=parse_org_emftext_language_xpath2_RangeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred71_Xpath2

    // $ANTLR start synpred72_Xpath2
    public final void synpred72_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr c3 =null;


        // Xpath2.g:7338:4: (c3= parse_org_emftext_language_xpath2_AdditiveExpr )
        // Xpath2.g:7338:4: c3= parse_org_emftext_language_xpath2_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred72_Xpath25839);
        c3=parse_org_emftext_language_xpath2_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred72_Xpath2

    // $ANTLR start synpred73_Xpath2
    public final void synpred73_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SinglePathExpr c4 =null;


        // Xpath2.g:7339:4: (c4= parse_org_emftext_language_xpath2_SinglePathExpr )
        // Xpath2.g:7339:4: c4= parse_org_emftext_language_xpath2_SinglePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred73_Xpath25849);
        c4=parse_org_emftext_language_xpath2_SinglePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred73_Xpath2

    // $ANTLR start synpred74_Xpath2
    public final void synpred74_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoublePathExpr c5 =null;


        // Xpath2.g:7340:4: (c5= parse_org_emftext_language_xpath2_DoublePathExpr )
        // Xpath2.g:7340:4: c5= parse_org_emftext_language_xpath2_DoublePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred74_Xpath25859);
        c5=parse_org_emftext_language_xpath2_DoublePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred74_Xpath2

    // $ANTLR start synpred75_Xpath2
    public final void synpred75_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr c0 =null;


        // Xpath2.g:7347:2: (c0= parse_org_emftext_language_xpath2_ComparisonExpr )
        // Xpath2.g:7347:2: c0= parse_org_emftext_language_xpath2_ComparisonExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred75_Xpath25890);
        c0=parse_org_emftext_language_xpath2_ComparisonExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred75_Xpath2

    // $ANTLR start synpred76_Xpath2
    public final void synpred76_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr c1 =null;


        // Xpath2.g:7348:4: (c1= parse_org_emftext_language_xpath2_RangeExpr )
        // Xpath2.g:7348:4: c1= parse_org_emftext_language_xpath2_RangeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred76_Xpath25900);
        c1=parse_org_emftext_language_xpath2_RangeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred76_Xpath2

    // $ANTLR start synpred77_Xpath2
    public final void synpred77_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr c2 =null;


        // Xpath2.g:7349:4: (c2= parse_org_emftext_language_xpath2_AdditiveExpr )
        // Xpath2.g:7349:4: c2= parse_org_emftext_language_xpath2_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred77_Xpath25910);
        c2=parse_org_emftext_language_xpath2_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred77_Xpath2

    // $ANTLR start synpred78_Xpath2
    public final void synpred78_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SinglePathExpr c3 =null;


        // Xpath2.g:7350:4: (c3= parse_org_emftext_language_xpath2_SinglePathExpr )
        // Xpath2.g:7350:4: c3= parse_org_emftext_language_xpath2_SinglePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred78_Xpath25920);
        c3=parse_org_emftext_language_xpath2_SinglePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred78_Xpath2

    // $ANTLR start synpred79_Xpath2
    public final void synpred79_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoublePathExpr c4 =null;


        // Xpath2.g:7351:4: (c4= parse_org_emftext_language_xpath2_DoublePathExpr )
        // Xpath2.g:7351:4: c4= parse_org_emftext_language_xpath2_DoublePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred79_Xpath25930);
        c4=parse_org_emftext_language_xpath2_DoublePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred79_Xpath2

    // $ANTLR start synpred80_Xpath2
    public final void synpred80_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr c0 =null;


        // Xpath2.g:7358:2: (c0= parse_org_emftext_language_xpath2_RangeExpr )
        // Xpath2.g:7358:2: c0= parse_org_emftext_language_xpath2_RangeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred80_Xpath25961);
        c0=parse_org_emftext_language_xpath2_RangeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred80_Xpath2

    // $ANTLR start synpred81_Xpath2
    public final void synpred81_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr c1 =null;


        // Xpath2.g:7359:4: (c1= parse_org_emftext_language_xpath2_AdditiveExpr )
        // Xpath2.g:7359:4: c1= parse_org_emftext_language_xpath2_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred81_Xpath25971);
        c1=parse_org_emftext_language_xpath2_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred81_Xpath2

    // $ANTLR start synpred82_Xpath2
    public final void synpred82_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SinglePathExpr c2 =null;


        // Xpath2.g:7360:4: (c2= parse_org_emftext_language_xpath2_SinglePathExpr )
        // Xpath2.g:7360:4: c2= parse_org_emftext_language_xpath2_SinglePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred82_Xpath25981);
        c2=parse_org_emftext_language_xpath2_SinglePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred82_Xpath2

    // $ANTLR start synpred83_Xpath2
    public final void synpred83_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoublePathExpr c3 =null;


        // Xpath2.g:7361:4: (c3= parse_org_emftext_language_xpath2_DoublePathExpr )
        // Xpath2.g:7361:4: c3= parse_org_emftext_language_xpath2_DoublePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred83_Xpath25991);
        c3=parse_org_emftext_language_xpath2_DoublePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred83_Xpath2

    // $ANTLR start synpred86_Xpath2
    public final void synpred86_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr c0 =null;


        // Xpath2.g:7376:2: (c0= parse_org_emftext_language_xpath2_AdditiveExpr )
        // Xpath2.g:7376:2: c0= parse_org_emftext_language_xpath2_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred86_Xpath26063);
        c0=parse_org_emftext_language_xpath2_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred86_Xpath2

    // $ANTLR start synpred87_Xpath2
    public final void synpred87_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SinglePathExpr c1 =null;


        // Xpath2.g:7377:4: (c1= parse_org_emftext_language_xpath2_SinglePathExpr )
        // Xpath2.g:7377:4: c1= parse_org_emftext_language_xpath2_SinglePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred87_Xpath26073);
        c1=parse_org_emftext_language_xpath2_SinglePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred87_Xpath2

    // $ANTLR start synpred88_Xpath2
    public final void synpred88_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoublePathExpr c2 =null;


        // Xpath2.g:7378:4: (c2= parse_org_emftext_language_xpath2_DoublePathExpr )
        // Xpath2.g:7378:4: c2= parse_org_emftext_language_xpath2_DoublePathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred88_Xpath26083);
        c2=parse_org_emftext_language_xpath2_DoublePathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred88_Xpath2

    // $ANTLR start synpred104_Xpath2
    public final void synpred104_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.PITest c4 =null;


        // Xpath2.g:7430:4: (c4= parse_org_emftext_language_xpath2_PITest )
        // Xpath2.g:7430:4: c4= parse_org_emftext_language_xpath2_PITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PITest_in_synpred104_Xpath26369);
        c4=parse_org_emftext_language_xpath2_PITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred104_Xpath2

    // $ANTLR start synpred105_Xpath2
    public final void synpred105_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NCNamePITest c5 =null;


        // Xpath2.g:7431:4: (c5= parse_org_emftext_language_xpath2_NCNamePITest )
        // Xpath2.g:7431:4: c5= parse_org_emftext_language_xpath2_NCNamePITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_synpred105_Xpath26379);
        c5=parse_org_emftext_language_xpath2_NCNamePITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred105_Xpath2

    // $ANTLR start synpred106_Xpath2
    public final void synpred106_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteralPITest c6 =null;


        // Xpath2.g:7432:4: (c6= parse_org_emftext_language_xpath2_StringLiteralPITest )
        // Xpath2.g:7432:4: c6= parse_org_emftext_language_xpath2_StringLiteralPITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_synpred106_Xpath26389);
        c6=parse_org_emftext_language_xpath2_StringLiteralPITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred106_Xpath2

    // $ANTLR start synpred107_Xpath2
    public final void synpred107_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AttributeTest c7 =null;


        // Xpath2.g:7433:4: (c7= parse_org_emftext_language_xpath2_AttributeTest )
        // Xpath2.g:7433:4: c7= parse_org_emftext_language_xpath2_AttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_synpred107_Xpath26399);
        c7=parse_org_emftext_language_xpath2_AttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_Xpath2

    // $ANTLR start synpred108_Xpath2
    public final void synpred108_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.WildcardAttributeTest c8 =null;


        // Xpath2.g:7434:4: (c8= parse_org_emftext_language_xpath2_WildcardAttributeTest )
        // Xpath2.g:7434:4: c8= parse_org_emftext_language_xpath2_WildcardAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_synpred108_Xpath26409);
        c8=parse_org_emftext_language_xpath2_WildcardAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred108_Xpath2

    // $ANTLR start synpred109_Xpath2
    public final void synpred109_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NameAttributeTest c9 =null;


        // Xpath2.g:7435:4: (c9= parse_org_emftext_language_xpath2_NameAttributeTest )
        // Xpath2.g:7435:4: c9= parse_org_emftext_language_xpath2_NameAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_synpred109_Xpath26419);
        c9=parse_org_emftext_language_xpath2_NameAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred109_Xpath2

    // $ANTLR start synpred111_Xpath2
    public final void synpred111_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ElementTest c11 =null;


        // Xpath2.g:7437:4: (c11= parse_org_emftext_language_xpath2_ElementTest )
        // Xpath2.g:7437:4: c11= parse_org_emftext_language_xpath2_ElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_synpred111_Xpath26439);
        c11=parse_org_emftext_language_xpath2_ElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred111_Xpath2

    // $ANTLR start synpred112_Xpath2
    public final void synpred112_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.WildcardElementTest c12 =null;


        // Xpath2.g:7438:4: (c12= parse_org_emftext_language_xpath2_WildcardElementTest )
        // Xpath2.g:7438:4: c12= parse_org_emftext_language_xpath2_WildcardElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_synpred112_Xpath26449);
        c12=parse_org_emftext_language_xpath2_WildcardElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred112_Xpath2

    // $ANTLR start synpred113_Xpath2
    public final void synpred113_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NameElementTest c13 =null;


        // Xpath2.g:7439:4: (c13= parse_org_emftext_language_xpath2_NameElementTest )
        // Xpath2.g:7439:4: c13= parse_org_emftext_language_xpath2_NameElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_synpred113_Xpath26459);
        c13=parse_org_emftext_language_xpath2_NameElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred113_Xpath2

    // Delegated rules

    public final boolean synpred76_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred82_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred82_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr119 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_Expr146 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_Expr172 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SimpleForClause_in_parse_org_emftext_language_xpath2_ForExpr232 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_parse_org_emftext_language_xpath2_ForExpr250 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_ForExpr268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_org_emftext_language_xpath2_SimpleForClause301 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_SimpleForClause319 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_SimpleForClause346 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_SimpleForClause372 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator428 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator446 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_58_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator467 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_SimpleForClauseIterator485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_parse_org_emftext_language_xpath2_QuantifiedExpr527 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_51_in_parse_org_emftext_language_xpath2_QuantifiedExpr542 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr567 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000100L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_QuantifiedExpr594 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SimpleForClauseIterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr620 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_parse_org_emftext_language_xpath2_QuantifiedExpr661 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_QuantifiedExpr679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_org_emftext_language_xpath2_IfExpr712 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_IfExpr726 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_IfExpr744 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_IfExpr762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath2_IfExpr776 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr794 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_parse_org_emftext_language_xpath2_IfExpr812 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_IfExpr830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExprChild_in_parse_org_emftext_language_xpath2_OrExpr867 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_parse_org_emftext_language_xpath2_OrExpr894 = new BitSet(new long[]{0x8030FEC801E2CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExprChild_in_parse_org_emftext_language_xpath2_OrExpr920 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExprChild_in_parse_org_emftext_language_xpath2_AndExpr980 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath2_AndExpr1007 = new BitSet(new long[]{0x8030FEC801E2CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExprChild_in_parse_org_emftext_language_xpath2_AndExpr1033 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExprChild_in_parse_org_emftext_language_xpath2_ComparisonExpr1093 = new BitSet(new long[]{0x69840003F8002002L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Comp_in_parse_org_emftext_language_xpath2_ComparisonExpr1126 = new BitSet(new long[]{0x8030FEC801E2CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExprChild_in_parse_org_emftext_language_xpath2_ComparisonExpr1160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExprChild_in_parse_org_emftext_language_xpath2_RangeExpr1220 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_parse_org_emftext_language_xpath2_RangeExpr1247 = new BitSet(new long[]{0x8030FEC801E2CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExprChild_in_parse_org_emftext_language_xpath2_RangeExpr1273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExprChild_in_parse_org_emftext_language_xpath2_AdditiveExpr1333 = new BitSet(new long[]{0x0000000000140002L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath2_AdditiveExpr1373 = new BitSet(new long[]{0x8030FEC801E2CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_20_in_parse_org_emftext_language_xpath2_AdditiveExpr1392 = new BitSet(new long[]{0x8030FEC801E2CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExprChild_in_parse_org_emftext_language_xpath2_AdditiveExpr1429 = new BitSet(new long[]{0x0000000000140002L});
    public static final BitSet FOLLOW_30_in_parse_org_emftext_language_xpath2_GeneralComp1494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_GeneralComp1509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_parse_org_emftext_language_xpath2_GeneralComp1524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_parse_org_emftext_language_xpath2_GeneralComp1539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_parse_org_emftext_language_xpath2_GeneralComp1554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath2_GeneralComp1569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_org_emftext_language_xpath2_ValueComp1614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_parse_org_emftext_language_xpath2_ValueComp1629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_org_emftext_language_xpath2_ValueComp1644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_emftext_language_xpath2_ValueComp1659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_parse_org_emftext_language_xpath2_ValueComp1674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_org_emftext_language_xpath2_ValueComp1689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_org_emftext_language_xpath2_NodeComp1734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_org_emftext_language_xpath2_NodeComp1749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_parse_org_emftext_language_xpath2_NodeComp1764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath2_SinglePathExpr1800 = new BitSet(new long[]{0x8030FEC80062CEE2L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_SinglePathExpr1823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_org_emftext_language_xpath2_DoublePathExpr1864 = new BitSet(new long[]{0x8030FEC80062CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_DoublePathExpr1882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_RelativePathExpr1919 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TailPathExpr_in_parse_org_emftext_language_xpath2_RelativePathExpr1946 = new BitSet(new long[]{0x0000000001800002L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath2_SingleTailPathExpr1987 = new BitSet(new long[]{0x8030FEC80062CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_SingleTailPathExpr2005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_parse_org_emftext_language_xpath2_DoubleTailPathExpr2038 = new BitSet(new long[]{0x8030FEC80062CEE0L,0x0000000000002E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_DoubleTailPathExpr2056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DirectionalStep_in_parse_org_emftext_language_xpath2_AxisStep2093 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AxisStep2120 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForwardAxis_in_parse_org_emftext_language_xpath2_GeneralForwardStep2165 = new BitSet(new long[]{0x0000CA0000020A00L,0x0000000000002642L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralForwardStep2187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_org_emftext_language_xpath2_AbbrevForwardStep2229 = new BitSet(new long[]{0x0000CA0000020A00L,0x0000000000002642L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_AbbrevForwardStep2254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_org_emftext_language_xpath2_ForwardAxis2296 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_44_in_parse_org_emftext_language_xpath2_ForwardAxis2311 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_ForwardAxis2326 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_75_in_parse_org_emftext_language_xpath2_ForwardAxis2341 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_45_in_parse_org_emftext_language_xpath2_ForwardAxis2356 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_53_in_parse_org_emftext_language_xpath2_ForwardAxis2371 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_52_in_parse_org_emftext_language_xpath2_ForwardAxis2386 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_63_in_parse_org_emftext_language_xpath2_ForwardAxis2401 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_org_emftext_language_xpath2_ForwardAxis2422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ReverseAxis_in_parse_org_emftext_language_xpath2_GeneralReverseStep2455 = new BitSet(new long[]{0x0000CA0000020A00L,0x0000000000002642L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralReverseStep2477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_parse_org_emftext_language_xpath2_AbbrevReverseStep2510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_org_emftext_language_xpath2_ReverseAxis2548 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_38_in_parse_org_emftext_language_xpath2_ReverseAxis2563 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_69_in_parse_org_emftext_language_xpath2_ReverseAxis2578 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_68_in_parse_org_emftext_language_xpath2_ReverseAxis2593 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath2_ReverseAxis2608 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_26_in_parse_org_emftext_language_xpath2_ReverseAxis2629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_NodeKindTest2662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_QNameTest2699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_AnyWildcard2732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_LocalNameWildcard2765 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_LocalNameWildcard2786 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_LocalNameWildcard2800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_NamespaceWildcard2829 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_NamespaceWildcard2843 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_TEXT_in_parse_org_emftext_language_xpath2_NamespaceWildcard2861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PrimaryExpr_in_parse_org_emftext_language_xpath2_FilterExpr2901 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_FilterExpr2928 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_36_in_parse_org_emftext_language_xpath2_Predicate2969 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_Predicate2987 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_37_in_parse_org_emftext_language_xpath2_Predicate3005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_VarRef3034 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarName_in_parse_org_emftext_language_xpath2_VarRef3052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_VarName3089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_ParenthesizedExpr3122 = new BitSet(new long[]{0x8278FEC801E3CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_ParenthesizedExpr3145 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_ParenthesizedExpr3171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_org_emftext_language_xpath2_ContextItemExpr3200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_FunctionCall3233 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_FunctionCall3251 = new BitSet(new long[]{0x8278FEC801E3CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall3280 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_FunctionCall3321 = new BitSet(new long[]{0x8278FEC801E2CEE0L,0x0000000000003E7AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_FunctionCall3355 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_FunctionCall3429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_SingleType3462 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_SingleType3489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath2_EmptySequenceType3525 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_EmptySequenceType3539 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_EmptySequenceType3553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemType_in_parse_org_emftext_language_xpath2_ItemSequenceType3586 = new BitSet(new long[]{0x0000000400060002L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_ItemSequenceType3613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_ItemSequenceType3628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath2_ItemSequenceType3643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_ItemKindTest3683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_parse_org_emftext_language_xpath2_AnyItemType3716 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyItemType3730 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyItemType3744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_AtomicItemType3777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_AtomicType3814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_org_emftext_language_xpath2_AnyKindTest3847 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyKindTest3861 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_AnyKindTest3875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_parse_org_emftext_language_xpath2_DocumentTest3904 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_DocumentTest3918 = new BitSet(new long[]{0x0000800000010000L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_DocumentTest3947 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_DocumentTest3967 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_DocumentTest4008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_parse_org_emftext_language_xpath2_TextTest4037 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_TextTest4051 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_TextTest4065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_org_emftext_language_xpath2_CommentTest4094 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_CommentTest4108 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_CommentTest4122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_parse_org_emftext_language_xpath2_PITest4151 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_PITest4165 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_PITest4179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_PITest4198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_PITest4208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_parse_org_emftext_language_xpath2_NCNamePITest4233 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_NCNamePITest4247 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NCNamePITest4265 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_NCNamePITest4286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_parse_org_emftext_language_xpath2_StringLiteralPITest4315 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_StringLiteralPITest4329 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteralPITest4347 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_StringLiteralPITest4368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_AttributeTest4397 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_AttributeTest4411 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_AttributeTest4425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest4444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest4454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4479 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4493 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4507 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4530 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4556 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardAttributeTest4597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_NameAttributeTest4626 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_NameAttributeTest4640 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest4658 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_NameAttributeTest4685 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameAttributeTest4711 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_NameAttributeTest4752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4781 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4795 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4813 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaAttributeTest4831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_parse_org_emftext_language_xpath2_ElementTest4860 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_ElementTest4874 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_ElementTest4888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_ElementTest4907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_ElementTest4917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_parse_org_emftext_language_xpath2_WildcardElementTest4942 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardElementTest4956 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardElementTest4970 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_WildcardElementTest4993 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_WildcardElementTest5019 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_WildcardElementTest5060 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_WildcardElementTest5104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_parse_org_emftext_language_xpath2_NameElementTest5133 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_NameElementTest5147 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest5165 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_NameElementTest5192 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_NameElementTest5218 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_NameElementTest5259 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_NameElementTest5303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_parse_org_emftext_language_xpath2_SchemaElementTest5332 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_SchemaElementTest5346 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QName_in_parse_org_emftext_language_xpath2_SchemaElementTest5364 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_SchemaElementTest5382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath2_IntegerLiteral5415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath2_DecimalLiteral5455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath2_DoubleLiteral5495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteral5535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName5586 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_QName5619 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QName5656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_ExprSingle5688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_ExprSingle5698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_ExprSingle5708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_ExprSingle5718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_ExprSingle5728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_ExprSingle5738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ExprSingle5748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ExprSingle5758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_ExprSingle5768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_ExprSingle5778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_ExprSingle5788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExprChild5809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_OrExprChild5819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_OrExprChild5829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_OrExprChild5839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_OrExprChild5849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_OrExprChild5859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_OrExprChild5869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExprChild5890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_AndExprChild5900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_AndExprChild5910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_AndExprChild5920 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_AndExprChild5930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_AndExprChild5940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild5991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_ComparisonExprChild6001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralComp_in_parse_org_emftext_language_xpath2_Comp6022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ValueComp_in_parse_org_emftext_language_xpath2_Comp6032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeComp_in_parse_org_emftext_language_xpath2_Comp6042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_RangeExprChild6093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_parse_org_emftext_language_xpath2_AdditiveExprChild6114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_parse_org_emftext_language_xpath2_AdditiveExprChild6124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RelativePathExpr_in_parse_org_emftext_language_xpath2_AdditiveExprChild6134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AxisStep_in_parse_org_emftext_language_xpath2_StepExpr6155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_StepExpr6165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SingleTailPathExpr_in_parse_org_emftext_language_xpath2_TailPathExpr6186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleTailPathExpr_in_parse_org_emftext_language_xpath2_TailPathExpr6196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep6217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_DirectionalStep6227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep6237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_DirectionalStep6247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeKindTest_in_parse_org_emftext_language_xpath2_NodeTest6268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QNameTest_in_parse_org_emftext_language_xpath2_NodeTest6278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyWildcard_in_parse_org_emftext_language_xpath2_NodeTest6288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_LocalNameWildcard_in_parse_org_emftext_language_xpath2_NodeTest6298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NamespaceWildcard_in_parse_org_emftext_language_xpath2_NodeTest6308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyKindTest_in_parse_org_emftext_language_xpath2_KindTest6329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DocumentTest_in_parse_org_emftext_language_xpath2_KindTest6339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TextTest_in_parse_org_emftext_language_xpath2_KindTest6349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CommentTest_in_parse_org_emftext_language_xpath2_KindTest6359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PITest_in_parse_org_emftext_language_xpath2_KindTest6369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_KindTest6379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_KindTest6389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_parse_org_emftext_language_xpath2_KindTest6399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_KindTest6409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_KindTest6419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaAttributeTest_in_parse_org_emftext_language_xpath2_KindTest6429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_KindTest6439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_KindTest6449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_KindTest6459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_KindTest6469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PrimaryExpr6490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr6500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr6510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PrimaryExpr6520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr6560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemKindTest_in_parse_org_emftext_language_xpath2_ItemType6581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyItemType_in_parse_org_emftext_language_xpath2_ItemType6591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicItemType_in_parse_org_emftext_language_xpath2_ItemType6601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_synpred62_Xpath25718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred63_Xpath25728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred64_Xpath25738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred65_Xpath25748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred66_Xpath25758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred67_Xpath25768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred68_Xpath25778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred69_Xpath25809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred70_Xpath25819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred71_Xpath25829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred72_Xpath25839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred73_Xpath25849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred74_Xpath25859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred75_Xpath25890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred76_Xpath25900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred77_Xpath25910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred78_Xpath25920 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred79_Xpath25930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred80_Xpath25961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred81_Xpath25971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred82_Xpath25981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred83_Xpath25991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred86_Xpath26063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SinglePathExpr_in_synpred87_Xpath26073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoublePathExpr_in_synpred88_Xpath26083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PITest_in_synpred104_Xpath26369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_synpred105_Xpath26379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_synpred106_Xpath26389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_synpred107_Xpath26399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_synpred108_Xpath26409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_synpred109_Xpath26419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_synpred111_Xpath26439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_synpred112_Xpath26449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_synpred113_Xpath26459 = new BitSet(new long[]{0x0000000000000002L});

}