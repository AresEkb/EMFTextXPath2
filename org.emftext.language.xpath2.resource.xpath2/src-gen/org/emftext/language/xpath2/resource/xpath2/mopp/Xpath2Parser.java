// $ANTLR 3.4

	package org.emftext.language.xpath2.resource.xpath2.mopp;


import org.antlr.runtime3_4_0.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class Xpath2Parser extends Xpath2ANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "DECIMAL_LITERAL", "DOUBLE_LITERAL", "INTEGER_LITERAL", "NCNAME", "QNAME", "STRING_LITERAL", "WHITESPACE", "'!='", "'$'", "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'..'", "'/'", "'//'", "':'", "'::'", "'<'", "'<<'", "'<='", "'='", "'>'", "'>='", "'>>'", "'?'", "'@'", "'['", "']'", "'ancestor'", "'ancestor-or-self'", "'and'", "'as'", "'attribute'", "'cast'", "'castable'", "'child'", "'comment'", "'descendant'", "'descendant-or-self'", "'div'", "'document-node'", "'element'", "'else'", "'empty-sequence'", "'eq'", "'every'", "'except'", "'following'", "'following-sibling'", "'for'", "'ge'", "'gt'", "'idiv'", "'if'", "'in'", "'instance'", "'intersect'", "'is'", "'item'", "'le'", "'lt'", "'mod'", "'namespace'", "'ne'", "'node'", "'of'", "'or'", "'parent'", "'preceding'", "'preceding-sibling'", "'processing-instruction'", "'return'", "'satisfies'", "'schema-attribute'", "'schema-element'", "'self'", "'some'", "'text'", "'then'", "'to'", "'treat'", "'union'", "'|'"
    };

    public static final int EOF=-1;
    public static final int T__11=11;
    public static final int T__12=12;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__19=19;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__90=90;
    public static final int DECIMAL_LITERAL=4;
    public static final int DOUBLE_LITERAL=5;
    public static final int INTEGER_LITERAL=6;
    public static final int NCNAME=7;
    public static final int QNAME=8;
    public static final int STRING_LITERAL=9;
    public static final int WHITESPACE=10;

    // delegates
    public Xpath2ANTLRParserBase[] getDelegates() {
        return new Xpath2ANTLRParserBase[] {};
    }

    // delegators


    public Xpath2Parser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public Xpath2Parser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(290 + 1);
         

    }

    public String[] getTokenNames() { return Xpath2Parser.tokenNames; }
    public String getGrammarFileName() { return "Xpath2.g"; }


    	private org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolverFactory tokenResolverFactory = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> expectedElements = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new org.emftext.language.xpath2.resource.xpath2.IXpath2Problem() {
    					public org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemSeverity getSeverity() {
    						return org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemSeverity.ERROR;
    					}
    					public org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemType getType() {
    						return org.emftext.language.xpath2.resource.xpath2.Xpath2EProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<org.emftext.language.xpath2.resource.xpath2.IXpath2QuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement terminal = org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2FollowSetProvider.TERMINALS[terminalID];
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[] containmentFeatures = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2FollowSetProvider.LINKS[ids[i]];
    		}
    		org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace containmentTrace = new org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElement = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>() {
    			public boolean execute(org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource resource) {
    				org.emftext.language.xpath2.resource.xpath2.IXpath2LocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public org.emftext.language.xpath2.resource.xpath2.IXpath2TextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new Xpath2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xpath2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Xpath2Parser(new org.antlr.runtime3_4_0.CommonTokenStream(new Xpath2Lexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new org.emftext.language.xpath2.resource.xpath2.util.Xpath2RuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public Xpath2Parser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Xpath2Lexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Xpath2Lexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Expr.class) {
    				return parse_org_emftext_language_xpath2_Expr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ForExpr.class) {
    				return parse_org_emftext_language_xpath2_ForExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QuantifiedExpr.class) {
    				return parse_org_emftext_language_xpath2_QuantifiedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Iterator.class) {
    				return parse_org_emftext_language_xpath2_Iterator();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IfExpr.class) {
    				return parse_org_emftext_language_xpath2_IfExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.OrExpr.class) {
    				return parse_org_emftext_language_xpath2_OrExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AndExpr.class) {
    				return parse_org_emftext_language_xpath2_AndExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ComparisonExpr.class) {
    				return parse_org_emftext_language_xpath2_ComparisonExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.RangeExpr.class) {
    				return parse_org_emftext_language_xpath2_RangeExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralComp.class) {
    				return parse_org_emftext_language_xpath2_GeneralComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ValueComp.class) {
    				return parse_org_emftext_language_xpath2_ValueComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NodeComp.class) {
    				return parse_org_emftext_language_xpath2_NodeComp();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AdditiveExpr.class) {
    				return parse_org_emftext_language_xpath2_AdditiveExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.MultiplicativeExpr.class) {
    				return parse_org_emftext_language_xpath2_MultiplicativeExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.UnionExpr.class) {
    				return parse_org_emftext_language_xpath2_UnionExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IntersectExceptExpr.class) {
    				return parse_org_emftext_language_xpath2_IntersectExceptExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.InstanceofExpr.class) {
    				return parse_org_emftext_language_xpath2_InstanceofExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.TreatExpr.class) {
    				return parse_org_emftext_language_xpath2_TreatExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.CastableExpr.class) {
    				return parse_org_emftext_language_xpath2_CastableExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.CastExpr.class) {
    				return parse_org_emftext_language_xpath2_CastExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.UnaryExpr.class) {
    				return parse_org_emftext_language_xpath2_UnaryExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.FilterExpr.class) {
    				return parse_org_emftext_language_xpath2_FilterExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.FunctionCall.class) {
    				return parse_org_emftext_language_xpath2_FunctionCall();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.PathExpr.class) {
    				return parse_org_emftext_language_xpath2_PathExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ChildStepExpr.class) {
    				return parse_org_emftext_language_xpath2_ChildStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DescOrSelfStepExpr.class) {
    				return parse_org_emftext_language_xpath2_DescOrSelfStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.RootStepExpr.class) {
    				return parse_org_emftext_language_xpath2_RootStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SelfStepExpr.class) {
    				return parse_org_emftext_language_xpath2_SelfStepExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralForwardStep.class) {
    				return parse_org_emftext_language_xpath2_GeneralForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AbbrevForwardStep.class) {
    				return parse_org_emftext_language_xpath2_AbbrevForwardStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.GeneralReverseStep.class) {
    				return parse_org_emftext_language_xpath2_GeneralReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AbbrevReverseStep.class) {
    				return parse_org_emftext_language_xpath2_AbbrevReverseStep();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NodeKindTest.class) {
    				return parse_org_emftext_language_xpath2_NodeKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.QNameTest.class) {
    				return parse_org_emftext_language_xpath2_QNameTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyWildcard.class) {
    				return parse_org_emftext_language_xpath2_AnyWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.LocalNameWildcard.class) {
    				return parse_org_emftext_language_xpath2_LocalNameWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NamespaceWildcard.class) {
    				return parse_org_emftext_language_xpath2_NamespaceWildcard();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.Predicate.class) {
    				return parse_org_emftext_language_xpath2_Predicate();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.VarRef.class) {
    				return parse_org_emftext_language_xpath2_VarRef();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ParenthesizedExpr.class) {
    				return parse_org_emftext_language_xpath2_ParenthesizedExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ContextItemExpr.class) {
    				return parse_org_emftext_language_xpath2_ContextItemExpr();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SingleType.class) {
    				return parse_org_emftext_language_xpath2_SingleType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.EmptySequenceType.class) {
    				return parse_org_emftext_language_xpath2_EmptySequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ItemSequenceType.class) {
    				return parse_org_emftext_language_xpath2_ItemSequenceType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ItemKindTest.class) {
    				return parse_org_emftext_language_xpath2_ItemKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyItemType.class) {
    				return parse_org_emftext_language_xpath2_AnyItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AtomicItemType.class) {
    				return parse_org_emftext_language_xpath2_AtomicItemType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AtomicType.class) {
    				return parse_org_emftext_language_xpath2_AtomicType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.OptionalAtomicType.class) {
    				return parse_org_emftext_language_xpath2_OptionalAtomicType();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AnyKindTest.class) {
    				return parse_org_emftext_language_xpath2_AnyKindTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DocumentTest.class) {
    				return parse_org_emftext_language_xpath2_DocumentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.TextTest.class) {
    				return parse_org_emftext_language_xpath2_TextTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.CommentTest.class) {
    				return parse_org_emftext_language_xpath2_CommentTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.PITest.class) {
    				return parse_org_emftext_language_xpath2_PITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NCNamePITest.class) {
    				return parse_org_emftext_language_xpath2_NCNamePITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.StringLiteralPITest.class) {
    				return parse_org_emftext_language_xpath2_StringLiteralPITest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.AttributeTest.class) {
    				return parse_org_emftext_language_xpath2_AttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.WildcardAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_WildcardAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NameAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_NameAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SchemaAttributeTest.class) {
    				return parse_org_emftext_language_xpath2_SchemaAttributeTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.ElementTest.class) {
    				return parse_org_emftext_language_xpath2_ElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.WildcardElementTest.class) {
    				return parse_org_emftext_language_xpath2_WildcardElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.NameElementTest.class) {
    				return parse_org_emftext_language_xpath2_NameElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.SchemaElementTest.class) {
    				return parse_org_emftext_language_xpath2_SchemaElementTest();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.IntegerLiteral.class) {
    				return parse_org_emftext_language_xpath2_IntegerLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DecimalLiteral.class) {
    				return parse_org_emftext_language_xpath2_DecimalLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.DoubleLiteral.class) {
    				return parse_org_emftext_language_xpath2_DoubleLiteral();
    			}
    			if (type.getInstanceClass() == org.emftext.language.xpath2.StringLiteral.class) {
    				return parse_org_emftext_language_xpath2_StringLiteral();
    			}
    		}
    		throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2UnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(org.emftext.language.xpath2.resource.xpath2.IXpath2Options.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public org.emftext.language.xpath2.resource.xpath2.IXpath2ParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource>>();
    		org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ParseResult parseResult = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		org.emftext.language.xpath2.resource.xpath2.IXpath2ParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (org.emftext.language.xpath2.resource.xpath2.IXpath2Command<org.emftext.language.xpath2.resource.xpath2.IXpath2TextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    		java.util.List<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal> newFollowSet = new java.util.ArrayList<org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 246;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<org.emftext.language.xpath2.resource.xpath2.util.Xpath2Pair<org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (org.emftext.language.xpath2.resource.xpath2.util.Xpath2Pair<org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContainedFeature[]> newFollowerPair : newFollowers) {
    							org.emftext.language.xpath2.resource.xpath2.IXpath2ExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace containmentTrace = new org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2ContainmentTrace(null, newFollowerPair.getRight());
    							org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal newFollowTerminal = new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Xpath2.g:700:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_org_emftext_language_xpath2_Expr ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        org.emftext.language.xpath2.Expr c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Xpath2.g:701:2: ( (c0= parse_org_emftext_language_xpath2_Expr ) EOF )
            // Xpath2.g:702:2: (c0= parse_org_emftext_language_xpath2_Expr ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[0]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[3]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[5]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[6]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[7]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[8]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[9]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[10]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[12]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[14]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[15]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[16]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[17]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[18]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[19]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Xpath2.g:726:2: (c0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:727:3: c0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_start82);
            c0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; }

            }


            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_org_emftext_language_xpath2_Expr"
    // Xpath2.g:735:1: parse_org_emftext_language_xpath2_Expr returns [org.emftext.language.xpath2.Expr element = null] : (a0_0= parse_org_emftext_language_xpath2_IfExpr |a0_1= parse_org_emftext_language_xpath2_ForExpr |a0_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* ;
    public final org.emftext.language.xpath2.Expr parse_org_emftext_language_xpath2_Expr() throws RecognitionException {
        org.emftext.language.xpath2.Expr element =  null;

        int parse_org_emftext_language_xpath2_Expr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.IfExpr a0_0 =null;

        org.emftext.language.xpath2.ForExpr a0_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a0_2 =null;

        org.emftext.language.xpath2.OrExpr a0_3 =null;

        org.emftext.language.xpath2.IfExpr a2_0 =null;

        org.emftext.language.xpath2.ForExpr a2_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a2_2 =null;

        org.emftext.language.xpath2.OrExpr a2_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Xpath2.g:738:2: ( (a0_0= parse_org_emftext_language_xpath2_IfExpr |a0_1= parse_org_emftext_language_xpath2_ForExpr |a0_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* )
            // Xpath2.g:739:2: (a0_0= parse_org_emftext_language_xpath2_IfExpr |a0_1= parse_org_emftext_language_xpath2_ForExpr |a0_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr ) ) )*
            {
            // Xpath2.g:739:2: (a0_0= parse_org_emftext_language_xpath2_IfExpr |a0_1= parse_org_emftext_language_xpath2_ForExpr |a0_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a0_3= parse_org_emftext_language_xpath2_OrExpr )
            int alt1=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt1=1;
                }
                break;
            case 57:
                {
                alt1=2;
                }
                break;
            case 53:
            case 84:
                {
                alt1=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt1=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;

            }

            switch (alt1) {
                case 1 :
                    // Xpath2.g:740:3: a0_0= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_Expr119);
                    a0_0=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_0 != null) {
                    				if (a0_0 != null) {
                    					Object value = a0_0;
                    					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_0, a0_0, true);
                    				copyLocalizationInfos(a0_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:759:6: a0_1= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_Expr133);
                    a0_1=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_1 != null) {
                    				if (a0_1 != null) {
                    					Object value = a0_1;
                    					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_0, a0_1, true);
                    				copyLocalizationInfos(a0_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath2.g:778:6: a0_2= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_Expr147);
                    a0_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_2 != null) {
                    				if (a0_2 != null) {
                    					Object value = a0_2;
                    					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_0, a0_2, true);
                    				copyLocalizationInfos(a0_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath2.g:797:6: a0_3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_Expr161);
                    a0_3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a0_3 != null) {
                    				if (a0_3 != null) {
                    					Object value = a0_3;
                    					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_0, a0_3, true);
                    				copyLocalizationInfos(a0_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[20]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[21]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[22]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[23]);
            	}

            // Xpath2.g:825:2: ( (a1= ',' (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==17) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // Xpath2.g:826:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr ) )
            	    {
            	    // Xpath2.g:826:3: (a1= ',' (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr ) )
            	    // Xpath2.g:827:4: a1= ',' (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr )
            	    {
            	    a1=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_Expr188); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[24]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[25]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[26]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[27]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[28]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[29]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[30]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[31]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[32]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[33]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[34]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[35]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[36]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[37]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[38]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[39]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[40]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[41]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[42]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[43]);
            	    			}

            	    // Xpath2.g:860:4: (a2_0= parse_org_emftext_language_xpath2_IfExpr |a2_1= parse_org_emftext_language_xpath2_ForExpr |a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_3= parse_org_emftext_language_xpath2_OrExpr )
            	    int alt2=4;
            	    switch ( input.LA(1) ) {
            	    case 61:
            	        {
            	        alt2=1;
            	        }
            	        break;
            	    case 57:
            	        {
            	        alt2=2;
            	        }
            	        break;
            	    case 53:
            	    case 84:
            	        {
            	        alt2=3;
            	        }
            	        break;
            	    case DECIMAL_LITERAL:
            	    case DOUBLE_LITERAL:
            	    case INTEGER_LITERAL:
            	    case NCNAME:
            	    case QNAME:
            	    case STRING_LITERAL:
            	    case 12:
            	    case 13:
            	    case 15:
            	    case 16:
            	    case 18:
            	    case 19:
            	    case 20:
            	    case 21:
            	    case 22:
            	    case 33:
            	    case 36:
            	    case 37:
            	    case 40:
            	    case 43:
            	    case 44:
            	    case 45:
            	    case 46:
            	    case 48:
            	    case 49:
            	    case 55:
            	    case 56:
            	    case 70:
            	    case 72:
            	    case 75:
            	    case 76:
            	    case 77:
            	    case 78:
            	    case 81:
            	    case 82:
            	    case 83:
            	    case 85:
            	        {
            	        alt2=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 2, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt2) {
            	        case 1 :
            	            // Xpath2.g:861:5: a2_0= parse_org_emftext_language_xpath2_IfExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_Expr214);
            	            a2_0=parse_org_emftext_language_xpath2_IfExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_0 != null) {
            	            						if (a2_0 != null) {
            	            							Object value = a2_0;
            	            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_1, a2_0, true);
            	            						copyLocalizationInfos(a2_0, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:880:10: a2_1= parse_org_emftext_language_xpath2_ForExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_Expr234);
            	            a2_1=parse_org_emftext_language_xpath2_ForExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_1 != null) {
            	            						if (a2_1 != null) {
            	            							Object value = a2_1;
            	            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_1, a2_1, true);
            	            						copyLocalizationInfos(a2_1, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 3 :
            	            // Xpath2.g:899:10: a2_2= parse_org_emftext_language_xpath2_QuantifiedExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_Expr254);
            	            a2_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_2 != null) {
            	            						if (a2_2 != null) {
            	            							Object value = a2_2;
            	            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_1, a2_2, true);
            	            						copyLocalizationInfos(a2_2, element);
            	            					}
            	            				}

            	            }
            	            break;
            	        case 4 :
            	            // Xpath2.g:918:10: a2_3= parse_org_emftext_language_xpath2_OrExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_Expr274);
            	            a2_3=parse_org_emftext_language_xpath2_OrExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (terminateParsing) {
            	            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            					}
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					if (a2_3 != null) {
            	            						if (a2_3 != null) {
            	            							Object value = a2_3;
            	            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.EXPR__EXPR, value);
            	            							completedElement(value, true);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_0_0_0_1_0_0_1, a2_3, true);
            	            						copyLocalizationInfos(a2_3, element);
            	            					}
            	            				}

            	            }
            	            break;

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[44]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[45]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[46]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[47]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[48]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[49]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[50]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[51]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_org_emftext_language_xpath2_Expr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Expr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ForExpr"
    // Xpath2.g:958:1: parse_org_emftext_language_xpath2_ForExpr returns [org.emftext.language.xpath2.ForExpr element = null] : a0= 'for' (a1_0= parse_org_emftext_language_xpath2_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) ;
    public final org.emftext.language.xpath2.ForExpr parse_org_emftext_language_xpath2_ForExpr() throws RecognitionException {
        org.emftext.language.xpath2.ForExpr element =  null;

        int parse_org_emftext_language_xpath2_ForExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        org.emftext.language.xpath2.Iterator a1_0 =null;

        org.emftext.language.xpath2.Iterator a3_0 =null;

        org.emftext.language.xpath2.ExprSingle a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Xpath2.g:961:2: (a0= 'for' (a1_0= parse_org_emftext_language_xpath2_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath2_ExprSingle ) )
            // Xpath2.g:962:2: a0= 'for' (a1_0= parse_org_emftext_language_xpath2_Iterator ) ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a4= 'return' (a5_0= parse_org_emftext_language_xpath2_ExprSingle )
            {
            a0=(Token)match(input,57,FOLLOW_57_in_parse_org_emftext_language_xpath2_ForExpr330); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[52]);
            	}

            // Xpath2.g:976:2: (a1_0= parse_org_emftext_language_xpath2_Iterator )
            // Xpath2.g:977:3: a1_0= parse_org_emftext_language_xpath2_Iterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr348);
            a1_0=parse_org_emftext_language_xpath2_Iterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_2, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[53]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[54]);
            	}

            // Xpath2.g:1003:2: ( (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==17) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Xpath2.g:1004:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    {
            	    // Xpath2.g:1004:3: (a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    // Xpath2.g:1005:4: a2= ',' (a3_0= parse_org_emftext_language_xpath2_Iterator )
            	    {
            	    a2=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_ForExpr375); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_3_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[55]);
            	    			}

            	    // Xpath2.g:1019:4: (a3_0= parse_org_emftext_language_xpath2_Iterator )
            	    // Xpath2.g:1020:5: a3_0= parse_org_emftext_language_xpath2_Iterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr401);
            	    a3_0=parse_org_emftext_language_xpath2_Iterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a3_0 != null) {
            	    						if (a3_0 != null) {
            	    							Object value = a3_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_3_0_0_2, a3_0, true);
            	    						copyLocalizationInfos(a3_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[56]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[57]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[58]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[59]);
            	}

            a4=(Token)match(input,79,FOLLOW_79_in_parse_org_emftext_language_xpath2_ForExpr442); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[60]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[61]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[62]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[63]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[64]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[65]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[66]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[67]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[68]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[69]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[70]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[71]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[72]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[73]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[74]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[75]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[76]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[77]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[78]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[79]);
            	}

            // Xpath2.g:1087:2: (a5_0= parse_org_emftext_language_xpath2_ExprSingle )
            // Xpath2.g:1088:3: a5_0= parse_org_emftext_language_xpath2_ExprSingle
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_ForExpr460);
            a5_0=parse_org_emftext_language_xpath2_ExprSingle();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createForExpr();
            				startIncompleteElement(element);
            			}
            			if (a5_0 != null) {
            				if (a5_0 != null) {
            					Object value = a5_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FOR_EXPR__RETURN), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_1_0_0_7, a5_0, true);
            				copyLocalizationInfos(a5_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[80]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[81]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[82]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[83]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[84]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[85]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_org_emftext_language_xpath2_ForExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ForExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_QuantifiedExpr"
    // Xpath2.g:1120:1: parse_org_emftext_language_xpath2_QuantifiedExpr returns [org.emftext.language.xpath2.QuantifiedExpr element = null] : ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_IfExpr |a8_1= parse_org_emftext_language_xpath2_ForExpr |a8_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath2_OrExpr ) ;
    public final org.emftext.language.xpath2.QuantifiedExpr parse_org_emftext_language_xpath2_QuantifiedExpr() throws RecognitionException {
        org.emftext.language.xpath2.QuantifiedExpr element =  null;

        int parse_org_emftext_language_xpath2_QuantifiedExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a5=null;
        Token a7=null;
        org.emftext.language.xpath2.Iterator a4_0 =null;

        org.emftext.language.xpath2.Iterator a6_0 =null;

        org.emftext.language.xpath2.IfExpr a8_0 =null;

        org.emftext.language.xpath2.ForExpr a8_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a8_2 =null;

        org.emftext.language.xpath2.OrExpr a8_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Xpath2.g:1123:2: ( ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_IfExpr |a8_1= parse_org_emftext_language_xpath2_ForExpr |a8_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath2_OrExpr ) )
            // Xpath2.g:1124:2: ( (a0= 'some' |a1= 'every' ) ) (a4_0= parse_org_emftext_language_xpath2_Iterator ) ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )* a7= 'satisfies' (a8_0= parse_org_emftext_language_xpath2_IfExpr |a8_1= parse_org_emftext_language_xpath2_ForExpr |a8_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath2_OrExpr )
            {
            // Xpath2.g:1124:2: ( (a0= 'some' |a1= 'every' ) )
            // Xpath2.g:1125:3: (a0= 'some' |a1= 'every' )
            {
            // Xpath2.g:1125:3: (a0= 'some' |a1= 'every' )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==84) ) {
                alt5=1;
            }
            else if ( (LA5_0==53) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }
            switch (alt5) {
                case 1 :
                    // Xpath2.g:1126:4: a0= 'some'
                    {
                    a0=(Token)match(input,84,FOLLOW_84_in_parse_org_emftext_language_xpath2_QuantifiedExpr502); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath2.QuantifierKind.SOME_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1139:8: a1= 'every'
                    {
                    a1=(Token)match(input,53,FOLLOW_53_in_parse_org_emftext_language_xpath2_QuantifiedExpr517); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifierKind().getEEnumLiteral(org.emftext.language.xpath2.QuantifierKind.EVERY_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__QUANTIFIER), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[86]);
            	}

            // Xpath2.g:1159:2: (a4_0= parse_org_emftext_language_xpath2_Iterator )
            // Xpath2.g:1160:3: a4_0= parse_org_emftext_language_xpath2_Iterator
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr542);
            a4_0=parse_org_emftext_language_xpath2_Iterator();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__ITERATOR, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_2, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[87]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[88]);
            	}

            // Xpath2.g:1186:2: ( (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==17) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // Xpath2.g:1187:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    {
            	    // Xpath2.g:1187:3: (a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator ) )
            	    // Xpath2.g:1188:4: a5= ',' (a6_0= parse_org_emftext_language_xpath2_Iterator )
            	    {
            	    a5=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_QuantifiedExpr569); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_3_0_0_0, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[89]);
            	    			}

            	    // Xpath2.g:1202:4: (a6_0= parse_org_emftext_language_xpath2_Iterator )
            	    // Xpath2.g:1203:5: a6_0= parse_org_emftext_language_xpath2_Iterator
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr595);
            	    a6_0=parse_org_emftext_language_xpath2_Iterator();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a6_0 != null) {
            	    						if (a6_0 != null) {
            	    							Object value = a6_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__ITERATOR, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_3_0_0_2, a6_0, true);
            	    						copyLocalizationInfos(a6_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[90]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[91]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[92]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[93]);
            	}

            a7=(Token)match(input,80,FOLLOW_80_in_parse_org_emftext_language_xpath2_QuantifiedExpr636); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[94]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[95]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[96]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[97]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[98]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[99]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[100]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[101]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[102]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[103]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[104]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[105]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[106]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[108]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[109]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[110]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[111]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[112]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getQuantifiedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[113]);
            	}

            // Xpath2.g:1270:2: (a8_0= parse_org_emftext_language_xpath2_IfExpr |a8_1= parse_org_emftext_language_xpath2_ForExpr |a8_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a8_3= parse_org_emftext_language_xpath2_OrExpr )
            int alt7=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt7=1;
                }
                break;
            case 57:
                {
                alt7=2;
                }
                break;
            case 53:
            case 84:
                {
                alt7=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt7=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }

            switch (alt7) {
                case 1 :
                    // Xpath2.g:1271:3: a8_0= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr654);
                    a8_0=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_0 != null) {
                    				if (a8_0 != null) {
                    					Object value = a8_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_6, a8_0, true);
                    				copyLocalizationInfos(a8_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1290:6: a8_1= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr668);
                    a8_1=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_1 != null) {
                    				if (a8_1 != null) {
                    					Object value = a8_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_6, a8_1, true);
                    				copyLocalizationInfos(a8_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath2.g:1309:6: a8_2= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr682);
                    a8_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_2 != null) {
                    				if (a8_2 != null) {
                    					Object value = a8_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_6, a8_2, true);
                    				copyLocalizationInfos(a8_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath2.g:1328:6: a8_3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr696);
                    a8_3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQuantifiedExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a8_3 != null) {
                    				if (a8_3 != null) {
                    					Object value = a8_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QUANTIFIED_EXPR__SATISFIES), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_2_0_0_6, a8_3, true);
                    				copyLocalizationInfos(a8_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[114]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[115]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[116]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[117]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[118]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[119]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_org_emftext_language_xpath2_QuantifiedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QuantifiedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_Iterator"
    // Xpath2.g:1360:1: parse_org_emftext_language_xpath2_Iterator returns [org.emftext.language.xpath2.Iterator element = null] : a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) a3= 'in' (a4_0= parse_org_emftext_language_xpath2_IfExpr |a4_1= parse_org_emftext_language_xpath2_ForExpr |a4_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath2_OrExpr ) ;
    public final org.emftext.language.xpath2.Iterator parse_org_emftext_language_xpath2_Iterator() throws RecognitionException {
        org.emftext.language.xpath2.Iterator element =  null;

        int parse_org_emftext_language_xpath2_Iterator_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        org.emftext.language.xpath2.IfExpr a4_0 =null;

        org.emftext.language.xpath2.ForExpr a4_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a4_2 =null;

        org.emftext.language.xpath2.OrExpr a4_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Xpath2.g:1363:2: (a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) a3= 'in' (a4_0= parse_org_emftext_language_xpath2_IfExpr |a4_1= parse_org_emftext_language_xpath2_ForExpr |a4_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath2_OrExpr ) )
            // Xpath2.g:1364:2: a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) a3= 'in' (a4_0= parse_org_emftext_language_xpath2_IfExpr |a4_1= parse_org_emftext_language_xpath2_ForExpr |a4_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath2_OrExpr )
            {
            a0=(Token)match(input,12,FOLLOW_12_in_parse_org_emftext_language_xpath2_Iterator729); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[120]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[121]);
            	}

            // Xpath2.g:1379:2: ( (a1= QNAME ) | (a2= NCNAME ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==QNAME) ) {
                alt8=1;
            }
            else if ( (LA8_0==NCNAME) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;

            }
            switch (alt8) {
                case 1 :
                    // Xpath2.g:1380:3: (a1= QNAME )
                    {
                    // Xpath2.g:1380:3: (a1= QNAME )
                    // Xpath2.g:1381:4: a1= QNAME
                    {
                    a1=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_Iterator752); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_1_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[122]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1417:6: (a2= NCNAME )
                    {
                    // Xpath2.g:1417:6: (a2= NCNAME )
                    // Xpath2.g:1418:4: a2= NCNAME
                    {
                    a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_Iterator790); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_1_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[123]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[124]);
            	}

            a3=(Token)match(input,62,FOLLOW_62_in_parse_org_emftext_language_xpath2_Iterator824); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[127]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[129]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[130]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[131]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[132]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[133]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[134]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[135]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[136]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[137]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[138]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[139]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[140]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[141]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[142]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[143]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIterator(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[144]);
            	}

            // Xpath2.g:1492:2: (a4_0= parse_org_emftext_language_xpath2_IfExpr |a4_1= parse_org_emftext_language_xpath2_ForExpr |a4_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a4_3= parse_org_emftext_language_xpath2_OrExpr )
            int alt9=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt9=1;
                }
                break;
            case 57:
                {
                alt9=2;
                }
                break;
            case 53:
            case 84:
                {
                alt9=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt9=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;

            }

            switch (alt9) {
                case 1 :
                    // Xpath2.g:1493:3: a4_0= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_Iterator842);
                    a4_0=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_0 != null) {
                    				if (a4_0 != null) {
                    					Object value = a4_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_5, a4_0, true);
                    				copyLocalizationInfos(a4_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1512:6: a4_1= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_Iterator856);
                    a4_1=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_1 != null) {
                    				if (a4_1 != null) {
                    					Object value = a4_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_5, a4_1, true);
                    				copyLocalizationInfos(a4_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath2.g:1531:6: a4_2= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_Iterator870);
                    a4_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_2 != null) {
                    				if (a4_2 != null) {
                    					Object value = a4_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_5, a4_2, true);
                    				copyLocalizationInfos(a4_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath2.g:1550:6: a4_3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_Iterator884);
                    a4_3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIterator();
                    				startIncompleteElement(element);
                    			}
                    			if (a4_3 != null) {
                    				if (a4_3 != null) {
                    					Object value = a4_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITERATOR__LIST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_3_0_0_5, a4_3, true);
                    				copyLocalizationInfos(a4_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[145]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[146]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[147]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[148]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_org_emftext_language_xpath2_Iterator_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Iterator"



    // $ANTLR start "parse_org_emftext_language_xpath2_IfExpr"
    // Xpath2.g:1580:1: parse_org_emftext_language_xpath2_IfExpr returns [org.emftext.language.xpath2.IfExpr element = null] : a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr |a2_1= parse_org_emftext_language_xpath2_IfExpr |a2_2= parse_org_emftext_language_xpath2_ForExpr |a2_3= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath2_OrExpr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_IfExpr |a7_1= parse_org_emftext_language_xpath2_ForExpr |a7_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath2_OrExpr ) ;
    public final org.emftext.language.xpath2.IfExpr parse_org_emftext_language_xpath2_IfExpr() throws RecognitionException {
        org.emftext.language.xpath2.IfExpr element =  null;

        int parse_org_emftext_language_xpath2_IfExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath2.Expr a2_0 =null;

        org.emftext.language.xpath2.IfExpr a2_1 =null;

        org.emftext.language.xpath2.ForExpr a2_2 =null;

        org.emftext.language.xpath2.QuantifiedExpr a2_3 =null;

        org.emftext.language.xpath2.OrExpr a2_4 =null;

        org.emftext.language.xpath2.IfExpr a5_0 =null;

        org.emftext.language.xpath2.ForExpr a5_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a5_2 =null;

        org.emftext.language.xpath2.OrExpr a5_3 =null;

        org.emftext.language.xpath2.IfExpr a7_0 =null;

        org.emftext.language.xpath2.ForExpr a7_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a7_2 =null;

        org.emftext.language.xpath2.OrExpr a7_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Xpath2.g:1583:2: (a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr |a2_1= parse_org_emftext_language_xpath2_IfExpr |a2_2= parse_org_emftext_language_xpath2_ForExpr |a2_3= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath2_OrExpr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_IfExpr |a7_1= parse_org_emftext_language_xpath2_ForExpr |a7_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath2_OrExpr ) )
            // Xpath2.g:1584:2: a0= 'if' a1= '(' (a2_0= parse_org_emftext_language_xpath2_Expr |a2_1= parse_org_emftext_language_xpath2_IfExpr |a2_2= parse_org_emftext_language_xpath2_ForExpr |a2_3= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath2_OrExpr ) a3= ')' a4= 'then' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) a6= 'else' (a7_0= parse_org_emftext_language_xpath2_IfExpr |a7_1= parse_org_emftext_language_xpath2_ForExpr |a7_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath2_OrExpr )
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_org_emftext_language_xpath2_IfExpr917); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[149]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_IfExpr931); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[152]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[153]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[156]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[157]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[159]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[160]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[161]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[162]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[163]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[165]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[166]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[167]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[168]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[169]);
            	}

            // Xpath2.g:1631:2: (a2_0= parse_org_emftext_language_xpath2_Expr |a2_1= parse_org_emftext_language_xpath2_IfExpr |a2_2= parse_org_emftext_language_xpath2_ForExpr |a2_3= parse_org_emftext_language_xpath2_QuantifiedExpr |a2_4= parse_org_emftext_language_xpath2_OrExpr )
            int alt10=5;
            switch ( input.LA(1) ) {
            case 61:
                {
                int LA10_1 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (synpred19_Xpath2()) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;

                }
                }
                break;
            case 57:
                {
                int LA10_2 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (synpred20_Xpath2()) ) {
                    alt10=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;

                }
                }
                break;
            case 84:
                {
                int LA10_3 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (synpred21_Xpath2()) ) {
                    alt10=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 3, input);

                    throw nvae;

                }
                }
                break;
            case 53:
                {
                int LA10_4 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (synpred21_Xpath2()) ) {
                    alt10=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 4, input);

                    throw nvae;

                }
                }
                break;
            case 16:
                {
                int LA10_5 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 5, input);

                    throw nvae;

                }
                }
                break;
            case 18:
                {
                int LA10_6 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 6, input);

                    throw nvae;

                }
                }
                break;
            case QNAME:
                {
                int LA10_7 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 7, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA10_8 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 8, input);

                    throw nvae;

                }
                }
                break;
            case 12:
                {
                int LA10_9 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 9, input);

                    throw nvae;

                }
                }
                break;
            case 13:
                {
                int LA10_10 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 10, input);

                    throw nvae;

                }
                }
                break;
            case 19:
                {
                int LA10_11 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 11, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA10_12 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 12, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA10_13 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 13, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA10_14 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 14, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA10_15 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 15, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA10_16 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 16, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                int LA10_17 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 17, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA10_18 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 18, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA10_19 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 19, input);

                    throw nvae;

                }
                }
                break;
            case 40:
                {
                int LA10_20 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 20, input);

                    throw nvae;

                }
                }
                break;
            case 83:
                {
                int LA10_21 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 21, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA10_22 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 22, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA10_23 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 23, input);

                    throw nvae;

                }
                }
                break;
            case 55:
                {
                int LA10_24 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 24, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA10_25 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 25, input);

                    throw nvae;

                }
                }
                break;
            case 33:
                {
                int LA10_26 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 26, input);

                    throw nvae;

                }
                }
                break;
            case 72:
                {
                int LA10_27 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 27, input);

                    throw nvae;

                }
                }
                break;
            case 48:
                {
                int LA10_28 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 28, input);

                    throw nvae;

                }
                }
                break;
            case 85:
                {
                int LA10_29 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 29, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA10_30 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 30, input);

                    throw nvae;

                }
                }
                break;
            case 78:
                {
                int LA10_31 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 31, input);

                    throw nvae;

                }
                }
                break;
            case 81:
                {
                int LA10_32 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 32, input);

                    throw nvae;

                }
                }
                break;
            case 49:
                {
                int LA10_33 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 33, input);

                    throw nvae;

                }
                }
                break;
            case 82:
                {
                int LA10_34 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 34, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA10_35 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 35, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA10_36 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 36, input);

                    throw nvae;

                }
                }
                break;
            case 36:
                {
                int LA10_37 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 37, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA10_38 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 38, input);

                    throw nvae;

                }
                }
                break;
            case 76:
                {
                int LA10_39 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 39, input);

                    throw nvae;

                }
                }
                break;
            case 37:
                {
                int LA10_40 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 40, input);

                    throw nvae;

                }
                }
                break;
            case 20:
                {
                int LA10_41 = input.LA(2);

                if ( (synpred18_Xpath2()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 41, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;

            }

            switch (alt10) {
                case 1 :
                    // Xpath2.g:1632:3: a2_0= parse_org_emftext_language_xpath2_Expr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_IfExpr949);
                    a2_0=parse_org_emftext_language_xpath2_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_0 != null) {
                    				if (a2_0 != null) {
                    					Object value = a2_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_3, a2_0, true);
                    				copyLocalizationInfos(a2_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1651:6: a2_1= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_IfExpr963);
                    a2_1=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_1 != null) {
                    				if (a2_1 != null) {
                    					Object value = a2_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_3, a2_1, true);
                    				copyLocalizationInfos(a2_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath2.g:1670:6: a2_2= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_IfExpr977);
                    a2_2=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_2 != null) {
                    				if (a2_2 != null) {
                    					Object value = a2_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_3, a2_2, true);
                    				copyLocalizationInfos(a2_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath2.g:1689:6: a2_3= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_IfExpr991);
                    a2_3=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_3 != null) {
                    				if (a2_3 != null) {
                    					Object value = a2_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_3, a2_3, true);
                    				copyLocalizationInfos(a2_3, element);
                    			}
                    		}

                    }
                    break;
                case 5 :
                    // Xpath2.g:1708:6: a2_4= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_IfExpr1005);
                    a2_4=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a2_4 != null) {
                    				if (a2_4 != null) {
                    					Object value = a2_4;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__TEST), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_3, a2_4, true);
                    				copyLocalizationInfos(a2_4, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[170]);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_IfExpr1023); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[171]);
            	}

            a4=(Token)match(input,86,FOLLOW_86_in_parse_org_emftext_language_xpath2_IfExpr1037); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[172]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[173]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[174]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[175]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[176]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[177]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[178]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[179]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[180]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[181]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[182]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[183]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[184]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[185]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[187]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[188]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[189]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[190]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[191]);
            	}

            // Xpath2.g:1780:2: (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr )
            int alt11=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt11=1;
                }
                break;
            case 57:
                {
                alt11=2;
                }
                break;
            case 53:
            case 84:
                {
                alt11=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt11=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;

            }

            switch (alt11) {
                case 1 :
                    // Xpath2.g:1781:3: a5_0= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_IfExpr1055);
                    a5_0=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_0 != null) {
                    				if (a5_0 != null) {
                    					Object value = a5_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_8, a5_0, true);
                    				copyLocalizationInfos(a5_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1800:6: a5_1= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_IfExpr1069);
                    a5_1=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_1 != null) {
                    				if (a5_1 != null) {
                    					Object value = a5_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_8, a5_1, true);
                    				copyLocalizationInfos(a5_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath2.g:1819:6: a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_IfExpr1083);
                    a5_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_2 != null) {
                    				if (a5_2 != null) {
                    					Object value = a5_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_8, a5_2, true);
                    				copyLocalizationInfos(a5_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath2.g:1838:6: a5_3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_IfExpr1097);
                    a5_3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a5_3 != null) {
                    				if (a5_3 != null) {
                    					Object value = a5_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__THEN), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_8, a5_3, true);
                    				copyLocalizationInfos(a5_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[192]);
            	}

            a6=(Token)match(input,50,FOLLOW_50_in_parse_org_emftext_language_xpath2_IfExpr1115); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_10, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[194]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[195]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[196]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[197]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[199]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[200]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[201]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[202]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[203]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[204]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[205]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[206]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[207]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[208]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[209]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[210]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[211]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIfExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[212]);
            	}

            // Xpath2.g:1896:2: (a7_0= parse_org_emftext_language_xpath2_IfExpr |a7_1= parse_org_emftext_language_xpath2_ForExpr |a7_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a7_3= parse_org_emftext_language_xpath2_OrExpr )
            int alt12=4;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt12=1;
                }
                break;
            case 57:
                {
                alt12=2;
                }
                break;
            case 53:
            case 84:
                {
                alt12=3;
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case NCNAME:
            case QNAME:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 33:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 46:
            case 48:
            case 49:
            case 55:
            case 56:
            case 70:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 81:
            case 82:
            case 83:
            case 85:
                {
                alt12=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;

            }

            switch (alt12) {
                case 1 :
                    // Xpath2.g:1897:3: a7_0= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_IfExpr1133);
                    a7_0=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_0 != null) {
                    				if (a7_0 != null) {
                    					Object value = a7_0;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_12, a7_0, true);
                    				copyLocalizationInfos(a7_0, element);
                    			}
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:1916:6: a7_1= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_IfExpr1147);
                    a7_1=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_1 != null) {
                    				if (a7_1 != null) {
                    					Object value = a7_1;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_12, a7_1, true);
                    				copyLocalizationInfos(a7_1, element);
                    			}
                    		}

                    }
                    break;
                case 3 :
                    // Xpath2.g:1935:6: a7_2= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_IfExpr1161);
                    a7_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_2 != null) {
                    				if (a7_2 != null) {
                    					Object value = a7_2;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_12, a7_2, true);
                    				copyLocalizationInfos(a7_2, element);
                    			}
                    		}

                    }
                    break;
                case 4 :
                    // Xpath2.g:1954:6: a7_3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_IfExpr1175);
                    a7_3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    			if (terminateParsing) {
                    				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    			}
                    			if (element == null) {
                    				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIfExpr();
                    				startIncompleteElement(element);
                    			}
                    			if (a7_3 != null) {
                    				if (a7_3 != null) {
                    					Object value = a7_3;
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.IF_EXPR__ELSE), value);
                    					completedElement(value, true);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_4_0_0_12, a7_3, true);
                    				copyLocalizationInfos(a7_3, element);
                    			}
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[213]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[214]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[215]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[216]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[217]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[218]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_org_emftext_language_xpath2_IfExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IfExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_OrExpr"
    // Xpath2.g:1986:1: parse_org_emftext_language_xpath2_OrExpr returns [org.emftext.language.xpath2.OrExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )* ;
    public final org.emftext.language.xpath2.OrExpr parse_org_emftext_language_xpath2_OrExpr() throws RecognitionException {
        org.emftext.language.xpath2.OrExpr element =  null;

        int parse_org_emftext_language_xpath2_OrExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AndExpr a0_0 =null;

        org.emftext.language.xpath2.AndExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Xpath2.g:1989:2: ( (a0_0= parse_org_emftext_language_xpath2_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )* )
            // Xpath2.g:1990:2: (a0_0= parse_org_emftext_language_xpath2_AndExpr ) ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )*
            {
            // Xpath2.g:1990:2: (a0_0= parse_org_emftext_language_xpath2_AndExpr )
            // Xpath2.g:1991:3: a0_0= parse_org_emftext_language_xpath2_AndExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr1212);
            a0_0=parse_org_emftext_language_xpath2_AndExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.OR_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[219]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[220]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[221]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[222]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[223]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[224]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[225]);
            	}

            // Xpath2.g:2022:2: ( (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==74) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // Xpath2.g:2023:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) )
            	    {
            	    // Xpath2.g:2023:3: (a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr ) )
            	    // Xpath2.g:2024:4: a1= 'or' (a2_0= parse_org_emftext_language_xpath2_AndExpr )
            	    {
            	    a1=(Token)match(input,74,FOLLOW_74_in_parse_org_emftext_language_xpath2_OrExpr1239); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_1_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[226]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[227]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[228]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[229]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[230]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[231]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[232]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[233]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[234]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[235]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[236]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[237]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[238]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[239]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[240]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[241]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOrExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[242]);
            	    			}

            	    // Xpath2.g:2054:4: (a2_0= parse_org_emftext_language_xpath2_AndExpr )
            	    // Xpath2.g:2055:5: a2_0= parse_org_emftext_language_xpath2_AndExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr1265);
            	    a2_0=parse_org_emftext_language_xpath2_AndExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOrExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.OR_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_5_0_0_1_0_0_3, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[243]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[244]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[245]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[246]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[247]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[248]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[249]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[250]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[251]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[252]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[253]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[254]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[255]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[256]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_org_emftext_language_xpath2_OrExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_OrExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_AndExpr"
    // Xpath2.g:2101:1: parse_org_emftext_language_xpath2_AndExpr returns [org.emftext.language.xpath2.AndExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )* ;
    public final org.emftext.language.xpath2.AndExpr parse_org_emftext_language_xpath2_AndExpr() throws RecognitionException {
        org.emftext.language.xpath2.AndExpr element =  null;

        int parse_org_emftext_language_xpath2_AndExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.ComparisonExpr a0_0 =null;

        org.emftext.language.xpath2.ComparisonExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Xpath2.g:2104:2: ( (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )* )
            // Xpath2.g:2105:2: (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )*
            {
            // Xpath2.g:2105:2: (a0_0= parse_org_emftext_language_xpath2_ComparisonExpr )
            // Xpath2.g:2106:3: a0_0= parse_org_emftext_language_xpath2_ComparisonExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr1325);
            a0_0=parse_org_emftext_language_xpath2_ComparisonExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AND_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[258]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[259]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[260]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[261]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[262]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[263]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[264]);
            	}

            // Xpath2.g:2138:2: ( (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==38) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // Xpath2.g:2139:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) )
            	    {
            	    // Xpath2.g:2139:3: (a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr ) )
            	    // Xpath2.g:2140:4: a1= 'and' (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr )
            	    {
            	    a1=(Token)match(input,38,FOLLOW_38_in_parse_org_emftext_language_xpath2_AndExpr1352); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_1_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[265]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[266]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[267]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[268]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[269]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[270]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[271]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[272]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[273]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[274]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[275]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[276]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[277]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[278]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[279]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[280]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAndExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[281]);
            	    			}

            	    // Xpath2.g:2170:4: (a2_0= parse_org_emftext_language_xpath2_ComparisonExpr )
            	    // Xpath2.g:2171:5: a2_0= parse_org_emftext_language_xpath2_ComparisonExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr1378);
            	    a2_0=parse_org_emftext_language_xpath2_ComparisonExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAndExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.AND_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_6_0_0_1_0_0_3, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[282]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[283]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[284]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[285]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[286]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[287]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[288]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[289]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[290]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[291]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[292]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[293]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[294]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[295]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[296]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[297]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_org_emftext_language_xpath2_AndExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AndExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ComparisonExpr"
    // Xpath2.g:2219:1: parse_org_emftext_language_xpath2_ComparisonExpr returns [org.emftext.language.xpath2.ComparisonExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )? ;
    public final org.emftext.language.xpath2.ComparisonExpr parse_org_emftext_language_xpath2_ComparisonExpr() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr element =  null;

        int parse_org_emftext_language_xpath2_ComparisonExpr_StartIndex = input.index();

        org.emftext.language.xpath2.RangeExpr a0_0 =null;

        org.emftext.language.xpath2.Comp a1_0 =null;

        org.emftext.language.xpath2.RangeExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Xpath2.g:2222:2: ( (a0_0= parse_org_emftext_language_xpath2_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )? )
            // Xpath2.g:2223:2: (a0_0= parse_org_emftext_language_xpath2_RangeExpr ) ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )?
            {
            // Xpath2.g:2223:2: (a0_0= parse_org_emftext_language_xpath2_RangeExpr )
            // Xpath2.g:2224:3: a0_0= parse_org_emftext_language_xpath2_RangeExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1438);
            a0_0=parse_org_emftext_language_xpath2_RangeExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__LEFT), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[298]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[299]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[300]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[301]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[302]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[303]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[304]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[305]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[306]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[307]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[308]);
            	}

            // Xpath2.g:2259:2: ( ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==11||(LA15_0 >= 25 && LA15_0 <= 31)||LA15_0==52||(LA15_0 >= 58 && LA15_0 <= 59)||LA15_0==65||(LA15_0 >= 67 && LA15_0 <= 68)||LA15_0==71) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // Xpath2.g:2260:3: ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) )
                    {
                    // Xpath2.g:2260:3: ( (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr ) )
                    // Xpath2.g:2261:4: (a1_0= parse_org_emftext_language_xpath2_Comp ) (a2_0= parse_org_emftext_language_xpath2_RangeExpr )
                    {
                    // Xpath2.g:2261:4: (a1_0= parse_org_emftext_language_xpath2_Comp )
                    // Xpath2.g:2262:5: a1_0= parse_org_emftext_language_xpath2_Comp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Comp_in_parse_org_emftext_language_xpath2_ComparisonExpr1471);
                    a1_0=parse_org_emftext_language_xpath2_Comp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__OPERATOR), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_1_0_0_1, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[309]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[310]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[311]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[312]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[313]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[314]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[315]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[316]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[317]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[318]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[319]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[320]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[321]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[322]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[323]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[324]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[325]);
                    			}

                    // Xpath2.g:2303:4: (a2_0= parse_org_emftext_language_xpath2_RangeExpr )
                    // Xpath2.g:2304:5: a2_0= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1505);
                    a2_0=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createComparisonExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.COMPARISON_EXPR__RIGHT), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_7_0_0_1_0_0_3, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[326]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[327]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[328]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[329]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[330]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[331]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[332]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[333]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[334]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[335]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[336]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[337]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[338]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[339]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[340]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[341]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_org_emftext_language_xpath2_ComparisonExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ComparisonExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_RangeExpr"
    // Xpath2.g:2352:1: parse_org_emftext_language_xpath2_RangeExpr returns [org.emftext.language.xpath2.RangeExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )? ;
    public final org.emftext.language.xpath2.RangeExpr parse_org_emftext_language_xpath2_RangeExpr() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr element =  null;

        int parse_org_emftext_language_xpath2_RangeExpr_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AdditiveExpr a0_0 =null;

        org.emftext.language.xpath2.AdditiveExpr a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Xpath2.g:2355:2: ( (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )? )
            // Xpath2.g:2356:2: (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )?
            {
            // Xpath2.g:2356:2: (a0_0= parse_org_emftext_language_xpath2_AdditiveExpr )
            // Xpath2.g:2357:3: a0_0= parse_org_emftext_language_xpath2_AdditiveExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1565);
            a0_0=parse_org_emftext_language_xpath2_AdditiveExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.RANGE_EXPR__FROM), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[342]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[343]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[344]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[345]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[346]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[347]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[348]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[349]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[350]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[351]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[352]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[353]);
            	}

            // Xpath2.g:2393:2: ( (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==87) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // Xpath2.g:2394:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) )
                    {
                    // Xpath2.g:2394:3: (a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr ) )
                    // Xpath2.g:2395:4: a1= 'to' (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr )
                    {
                    a1=(Token)match(input,87,FOLLOW_87_in_parse_org_emftext_language_xpath2_RangeExpr1592); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[354]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[355]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[356]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[357]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[358]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[359]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[360]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[361]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[362]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[363]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[364]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[365]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[366]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[367]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[368]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[369]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getRangeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[370]);
                    			}

                    // Xpath2.g:2425:4: (a2_0= parse_org_emftext_language_xpath2_AdditiveExpr )
                    // Xpath2.g:2426:5: a2_0= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1618);
                    a2_0=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRangeExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.RANGE_EXPR__TO), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_8_0_0_1_0_0_3, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[371]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[372]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[373]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[374]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[375]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[376]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[377]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[378]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[379]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[380]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[381]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[382]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[383]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[384]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[385]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[386]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[387]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[388]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[389]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[390]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[391]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[392]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_org_emftext_language_xpath2_RangeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_RangeExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralComp"
    // Xpath2.g:2480:1: parse_org_emftext_language_xpath2_GeneralComp returns [org.emftext.language.xpath2.GeneralComp element = null] : ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) ;
    public final org.emftext.language.xpath2.GeneralComp parse_org_emftext_language_xpath2_GeneralComp() throws RecognitionException {
        org.emftext.language.xpath2.GeneralComp element =  null;

        int parse_org_emftext_language_xpath2_GeneralComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Xpath2.g:2483:2: ( ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) ) )
            // Xpath2.g:2484:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            {
            // Xpath2.g:2484:2: ( (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' ) )
            // Xpath2.g:2485:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            {
            // Xpath2.g:2485:3: (a0= '=' |a1= '!=' |a2= '<' |a3= '<=' |a4= '>' |a5= '>=' )
            int alt17=6;
            switch ( input.LA(1) ) {
            case 28:
                {
                alt17=1;
                }
                break;
            case 11:
                {
                alt17=2;
                }
                break;
            case 25:
                {
                alt17=3;
                }
                break;
            case 27:
                {
                alt17=4;
                }
                break;
            case 29:
                {
                alt17=5;
                }
                break;
            case 30:
                {
                alt17=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }

            switch (alt17) {
                case 1 :
                    // Xpath2.g:2486:4: a0= '='
                    {
                    a0=(Token)match(input,28,FOLLOW_28_in_parse_org_emftext_language_xpath2_GeneralComp1683); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2499:8: a1= '!='
                    {
                    a1=(Token)match(input,11,FOLLOW_11_in_parse_org_emftext_language_xpath2_GeneralComp1698); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2512:8: a2= '<'
                    {
                    a2=(Token)match(input,25,FOLLOW_25_in_parse_org_emftext_language_xpath2_GeneralComp1713); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:2525:8: a3= '<='
                    {
                    a3=(Token)match(input,27,FOLLOW_27_in_parse_org_emftext_language_xpath2_GeneralComp1728); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:2538:8: a4= '>'
                    {
                    a4=(Token)match(input,29,FOLLOW_29_in_parse_org_emftext_language_xpath2_GeneralComp1743); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:2551:8: a5= '>='
                    {
                    a5=(Token)match(input,30,FOLLOW_30_in_parse_org_emftext_language_xpath2_GeneralComp1758); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_9_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[393]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[394]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[395]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[396]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[397]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[398]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[399]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[400]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[401]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[402]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[403]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[404]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[405]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[406]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[407]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[408]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[409]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_org_emftext_language_xpath2_GeneralComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_ValueComp"
    // Xpath2.g:2589:1: parse_org_emftext_language_xpath2_ValueComp returns [org.emftext.language.xpath2.ValueComp element = null] : ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) ;
    public final org.emftext.language.xpath2.ValueComp parse_org_emftext_language_xpath2_ValueComp() throws RecognitionException {
        org.emftext.language.xpath2.ValueComp element =  null;

        int parse_org_emftext_language_xpath2_ValueComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Xpath2.g:2592:2: ( ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) ) )
            // Xpath2.g:2593:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            {
            // Xpath2.g:2593:2: ( (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' ) )
            // Xpath2.g:2594:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            {
            // Xpath2.g:2594:3: (a0= 'eq' |a1= 'ne' |a2= 'lt' |a3= 'le' |a4= 'gt' |a5= 'ge' )
            int alt18=6;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt18=1;
                }
                break;
            case 71:
                {
                alt18=2;
                }
                break;
            case 68:
                {
                alt18=3;
                }
                break;
            case 67:
                {
                alt18=4;
                }
                break;
            case 59:
                {
                alt18=5;
                }
                break;
            case 58:
                {
                alt18=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }

            switch (alt18) {
                case 1 :
                    // Xpath2.g:2595:4: a0= 'eq'
                    {
                    a0=(Token)match(input,52,FOLLOW_52_in_parse_org_emftext_language_xpath2_ValueComp1803); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.EQ_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2608:8: a1= 'ne'
                    {
                    a1=(Token)match(input,71,FOLLOW_71_in_parse_org_emftext_language_xpath2_ValueComp1818); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.NE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2621:8: a2= 'lt'
                    {
                    a2=(Token)match(input,68,FOLLOW_68_in_parse_org_emftext_language_xpath2_ValueComp1833); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:2634:8: a3= 'le'
                    {
                    a3=(Token)match(input,67,FOLLOW_67_in_parse_org_emftext_language_xpath2_ValueComp1848); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.LE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:2647:8: a4= 'gt'
                    {
                    a4=(Token)match(input,59,FOLLOW_59_in_parse_org_emftext_language_xpath2_ValueComp1863); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:2660:8: a5= 'ge'
                    {
                    a5=(Token)match(input,58,FOLLOW_58_in_parse_org_emftext_language_xpath2_ValueComp1878); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createValueComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_10_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralCompKind().getEEnumLiteral(org.emftext.language.xpath2.GeneralCompKind.GE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VALUE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[410]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[411]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[412]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[413]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[414]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[415]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[416]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[417]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[418]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[419]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[420]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[421]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[422]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[426]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_org_emftext_language_xpath2_ValueComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ValueComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeComp"
    // Xpath2.g:2698:1: parse_org_emftext_language_xpath2_NodeComp returns [org.emftext.language.xpath2.NodeComp element = null] : ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) ;
    public final org.emftext.language.xpath2.NodeComp parse_org_emftext_language_xpath2_NodeComp() throws RecognitionException {
        org.emftext.language.xpath2.NodeComp element =  null;

        int parse_org_emftext_language_xpath2_NodeComp_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Xpath2.g:2701:2: ( ( (a0= 'is' |a1= '<<' |a2= '>>' ) ) )
            // Xpath2.g:2702:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            {
            // Xpath2.g:2702:2: ( (a0= 'is' |a1= '<<' |a2= '>>' ) )
            // Xpath2.g:2703:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            {
            // Xpath2.g:2703:3: (a0= 'is' |a1= '<<' |a2= '>>' )
            int alt19=3;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt19=1;
                }
                break;
            case 26:
                {
                alt19=2;
                }
                break;
            case 31:
                {
                alt19=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }

            switch (alt19) {
                case 1 :
                    // Xpath2.g:2704:4: a0= 'is'
                    {
                    a0=(Token)match(input,65,FOLLOW_65_in_parse_org_emftext_language_xpath2_NodeComp1923); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.IS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:2717:8: a1= '<<'
                    {
                    a1=(Token)match(input,26,FOLLOW_26_in_parse_org_emftext_language_xpath2_NodeComp1938); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.PRECEDES_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:2730:8: a2= '>>'
                    {
                    a2=(Token)match(input,31,FOLLOW_31_in_parse_org_emftext_language_xpath2_NodeComp1953); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeComp();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNodeCompKind().getEEnumLiteral(org.emftext.language.xpath2.NodeCompKind.FOLLOWS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_COMP__OPERATOR), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[428]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[429]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[430]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[431]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[432]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[433]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[434]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[435]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[436]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[437]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[438]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[439]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[443]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_org_emftext_language_xpath2_NodeComp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeComp"



    // $ANTLR start "parse_org_emftext_language_xpath2_AdditiveExpr"
    // Xpath2.g:2768:1: parse_org_emftext_language_xpath2_AdditiveExpr returns [org.emftext.language.xpath2.AdditiveExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )* ;
    public final org.emftext.language.xpath2.AdditiveExpr parse_org_emftext_language_xpath2_AdditiveExpr() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr element =  null;

        int parse_org_emftext_language_xpath2_AdditiveExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.MultiplicativeExpr a0_0 =null;

        org.emftext.language.xpath2.MultiplicativeExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Xpath2.g:2771:2: ( (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )* )
            // Xpath2.g:2772:2: (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )*
            {
            // Xpath2.g:2772:2: (a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr )
            // Xpath2.g:2773:3: a0_0= parse_org_emftext_language_xpath2_MultiplicativeExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr1993);
            a0_0=parse_org_emftext_language_xpath2_MultiplicativeExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[452]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[456]);
            	}

            // Xpath2.g:2810:2: ( ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==16||LA21_0==18) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // Xpath2.g:2811:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) )
            	    {
            	    // Xpath2.g:2811:3: ( ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr ) )
            	    // Xpath2.g:2812:4: ( (a1= '+' |a2= '-' ) ) (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr )
            	    {
            	    // Xpath2.g:2812:4: ( (a1= '+' |a2= '-' ) )
            	    // Xpath2.g:2813:5: (a1= '+' |a2= '-' )
            	    {
            	    // Xpath2.g:2813:5: (a1= '+' |a2= '-' )
            	    int alt20=2;
            	    int LA20_0 = input.LA(1);

            	    if ( (LA20_0==16) ) {
            	        alt20=1;
            	    }
            	    else if ( (LA20_0==18) ) {
            	        alt20=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 20, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt20) {
            	        case 1 :
            	            // Xpath2.g:2814:6: a1= '+'
            	            {
            	            a1=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_AdditiveExpr2033); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath2.AdditiveOpKind.ADDITION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:2827:12: a2= '-'
            	            {
            	            a2=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath2_AdditiveExpr2052); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveOpKind().getEEnumLiteral(org.emftext.language.xpath2.AdditiveOpKind.SUBTRACTION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[457]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[458]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[459]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[460]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[461]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[462]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[463]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[464]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[465]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[466]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[467]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[468]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[469]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[470]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[471]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[472]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAdditiveExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[473]);
            	    			}

            	    // Xpath2.g:2863:4: (a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr )
            	    // Xpath2.g:2864:5: a5_0= parse_org_emftext_language_xpath2_MultiplicativeExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr2089);
            	    a5_0=parse_org_emftext_language_xpath2_MultiplicativeExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAdditiveExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ADDITIVE_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_12_0_0_1_0_0_3, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[474]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[475]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[476]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[477]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[478]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[479]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[480]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[481]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[482]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[483]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[484]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[485]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[486]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[487]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[488]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[489]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[490]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[491]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[492]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[493]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[494]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[495]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[496]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[497]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[498]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[499]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_org_emftext_language_xpath2_AdditiveExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AdditiveExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_MultiplicativeExpr"
    // Xpath2.g:2922:1: parse_org_emftext_language_xpath2_MultiplicativeExpr returns [org.emftext.language.xpath2.MultiplicativeExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )* ;
    public final org.emftext.language.xpath2.MultiplicativeExpr parse_org_emftext_language_xpath2_MultiplicativeExpr() throws RecognitionException {
        org.emftext.language.xpath2.MultiplicativeExpr element =  null;

        int parse_org_emftext_language_xpath2_MultiplicativeExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        org.emftext.language.xpath2.UnionExpr a0_0 =null;

        org.emftext.language.xpath2.UnionExpr a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Xpath2.g:2925:2: ( (a0_0= parse_org_emftext_language_xpath2_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )* )
            // Xpath2.g:2926:2: (a0_0= parse_org_emftext_language_xpath2_UnionExpr ) ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )*
            {
            // Xpath2.g:2926:2: (a0_0= parse_org_emftext_language_xpath2_UnionExpr )
            // Xpath2.g:2927:3: a0_0= parse_org_emftext_language_xpath2_UnionExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2149);
            a0_0=parse_org_emftext_language_xpath2_UnionExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[500]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[501]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[502]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[503]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[504]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[505]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[506]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[507]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[508]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[509]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[510]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[511]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[512]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[513]);
            	}

            // Xpath2.g:2965:2: ( ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==15||LA23_0==47||LA23_0==60||LA23_0==69) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // Xpath2.g:2966:3: ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) )
            	    {
            	    // Xpath2.g:2966:3: ( ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr ) )
            	    // Xpath2.g:2967:4: ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) ) (a7_0= parse_org_emftext_language_xpath2_UnionExpr )
            	    {
            	    // Xpath2.g:2967:4: ( (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' ) )
            	    // Xpath2.g:2968:5: (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' )
            	    {
            	    // Xpath2.g:2968:5: (a1= '*' |a2= 'div' |a3= 'idiv' |a4= 'mod' )
            	    int alt22=4;
            	    switch ( input.LA(1) ) {
            	    case 15:
            	        {
            	        alt22=1;
            	        }
            	        break;
            	    case 47:
            	        {
            	        alt22=2;
            	        }
            	        break;
            	    case 60:
            	        {
            	        alt22=3;
            	        }
            	        break;
            	    case 69:
            	        {
            	        alt22=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 22, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt22) {
            	        case 1 :
            	            // Xpath2.g:2969:6: a1= '*'
            	            {
            	            a1=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2189); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.MULTIPLICATION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:2982:12: a2= 'div'
            	            {
            	            a2=(Token)match(input,47,FOLLOW_47_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2208); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.DIV_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 3 :
            	            // Xpath2.g:2995:12: a3= 'idiv'
            	            {
            	            a3=(Token)match(input,60,FOLLOW_60_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2227); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.IDIV_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 4 :
            	            // Xpath2.g:3008:12: a4= 'mod'
            	            {
            	            a4=(Token)match(input,69,FOLLOW_69_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2246); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeOpKind().getEEnumLiteral(org.emftext.language.xpath2.MultiplicativeOpKind.MOD_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[514]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[515]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[516]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[517]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[518]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[519]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[520]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[521]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[522]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[523]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[524]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[525]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[526]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[527]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[528]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[529]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getMultiplicativeExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[530]);
            	    			}

            	    // Xpath2.g:3044:4: (a7_0= parse_org_emftext_language_xpath2_UnionExpr )
            	    // Xpath2.g:3045:5: a7_0= parse_org_emftext_language_xpath2_UnionExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2283);
            	    a7_0=parse_org_emftext_language_xpath2_UnionExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createMultiplicativeExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a7_0 != null) {
            	    						if (a7_0 != null) {
            	    							Object value = a7_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.MULTIPLICATIVE_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_13_0_0_1_0_0_3, a7_0, true);
            	    						copyLocalizationInfos(a7_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[531]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[532]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[533]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[534]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[535]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[536]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[537]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[538]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[539]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[540]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[541]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[542]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[543]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[544]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[546]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[547]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[548]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[549]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[550]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[551]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[552]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[553]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[554]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[555]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[556]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[557]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[558]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_org_emftext_language_xpath2_MultiplicativeExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_MultiplicativeExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_UnionExpr"
    // Xpath2.g:3105:1: parse_org_emftext_language_xpath2_UnionExpr returns [org.emftext.language.xpath2.UnionExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )* ;
    public final org.emftext.language.xpath2.UnionExpr parse_org_emftext_language_xpath2_UnionExpr() throws RecognitionException {
        org.emftext.language.xpath2.UnionExpr element =  null;

        int parse_org_emftext_language_xpath2_UnionExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.IntersectExceptExpr a0_0 =null;

        org.emftext.language.xpath2.IntersectExceptExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Xpath2.g:3108:2: ( (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )* )
            // Xpath2.g:3109:2: (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )*
            {
            // Xpath2.g:3109:2: (a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr )
            // Xpath2.g:3110:3: a0_0= parse_org_emftext_language_xpath2_IntersectExceptExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr2343);
            a0_0=parse_org_emftext_language_xpath2_IntersectExceptExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[559]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[560]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[561]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[562]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[563]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[564]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[565]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[566]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[567]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[568]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[569]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[570]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[571]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[572]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[573]);
            	}

            // Xpath2.g:3149:2: ( ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( ((LA25_0 >= 89 && LA25_0 <= 90)) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // Xpath2.g:3150:3: ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) )
            	    {
            	    // Xpath2.g:3150:3: ( ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr ) )
            	    // Xpath2.g:3151:4: ( (a1= 'union' |a2= '|' ) ) (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr )
            	    {
            	    // Xpath2.g:3151:4: ( (a1= 'union' |a2= '|' ) )
            	    // Xpath2.g:3152:5: (a1= 'union' |a2= '|' )
            	    {
            	    // Xpath2.g:3152:5: (a1= 'union' |a2= '|' )
            	    int alt24=2;
            	    int LA24_0 = input.LA(1);

            	    if ( (LA24_0==89) ) {
            	        alt24=1;
            	    }
            	    else if ( (LA24_0==90) ) {
            	        alt24=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 24, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt24) {
            	        case 1 :
            	            // Xpath2.g:3153:6: a1= 'union'
            	            {
            	            a1=(Token)match(input,89,FOLLOW_89_in_parse_org_emftext_language_xpath2_UnionExpr2383); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionOp().getEEnumLiteral(org.emftext.language.xpath2.UnionOp.UNION_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERATION, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:3166:12: a2= '|'
            	            {
            	            a2=(Token)match(input,90,FOLLOW_90_in_parse_org_emftext_language_xpath2_UnionExpr2402); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionOp().getEEnumLiteral(org.emftext.language.xpath2.UnionOp.VERTICAL_BAR_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERATION, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[574]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[575]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[576]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[577]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[578]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[579]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[580]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[581]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[582]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[583]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[584]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[585]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[586]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[587]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[588]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[589]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnionExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[590]);
            	    			}

            	    // Xpath2.g:3202:4: (a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr )
            	    // Xpath2.g:3203:5: a5_0= parse_org_emftext_language_xpath2_IntersectExceptExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr2439);
            	    a5_0=parse_org_emftext_language_xpath2_IntersectExceptExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnionExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNION_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_14_0_0_1_0_0_3, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[591]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[592]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[593]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[594]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[595]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[596]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[597]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[598]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[599]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[600]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[601]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[602]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[603]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[604]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[605]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[606]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[607]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[608]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[609]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[610]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[611]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[612]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[613]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[614]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[615]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[616]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[617]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[618]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[619]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[620]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_org_emftext_language_xpath2_UnionExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_UnionExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_IntersectExceptExpr"
    // Xpath2.g:3265:1: parse_org_emftext_language_xpath2_IntersectExceptExpr returns [org.emftext.language.xpath2.IntersectExceptExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )* ;
    public final org.emftext.language.xpath2.IntersectExceptExpr parse_org_emftext_language_xpath2_IntersectExceptExpr() throws RecognitionException {
        org.emftext.language.xpath2.IntersectExceptExpr element =  null;

        int parse_org_emftext_language_xpath2_IntersectExceptExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.InstanceofExpr a0_0 =null;

        org.emftext.language.xpath2.InstanceofExpr a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Xpath2.g:3268:2: ( (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )* )
            // Xpath2.g:3269:2: (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )*
            {
            // Xpath2.g:3269:2: (a0_0= parse_org_emftext_language_xpath2_InstanceofExpr )
            // Xpath2.g:3270:3: a0_0= parse_org_emftext_language_xpath2_InstanceofExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2499);
            a0_0=parse_org_emftext_language_xpath2_InstanceofExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERAND, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[621]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[626]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[627]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[630]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[632]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[633]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[636]);
            	}

            // Xpath2.g:3310:2: ( ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==54||LA27_0==64) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // Xpath2.g:3311:3: ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) )
            	    {
            	    // Xpath2.g:3311:3: ( ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr ) )
            	    // Xpath2.g:3312:4: ( (a1= 'intersect' |a2= 'except' ) ) (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr )
            	    {
            	    // Xpath2.g:3312:4: ( (a1= 'intersect' |a2= 'except' ) )
            	    // Xpath2.g:3313:5: (a1= 'intersect' |a2= 'except' )
            	    {
            	    // Xpath2.g:3313:5: (a1= 'intersect' |a2= 'except' )
            	    int alt26=2;
            	    int LA26_0 = input.LA(1);

            	    if ( (LA26_0==64) ) {
            	        alt26=1;
            	    }
            	    else if ( (LA26_0==54) ) {
            	        alt26=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 26, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt26) {
            	        case 1 :
            	            // Xpath2.g:3314:6: a1= 'intersect'
            	            {
            	            a1=(Token)match(input,64,FOLLOW_64_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2539); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptOpKind().getEEnumLiteral(org.emftext.language.xpath2.IntersectExceptOpKind.INTERSECT_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:3327:12: a2= 'except'
            	            {
            	            a2=(Token)match(input,54,FOLLOW_54_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2558); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            						if (element == null) {
            	            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            	            							startIncompleteElement(element);
            	            						}
            	            						collectHiddenTokens(element);
            	            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_1_0_0_1, null, true);
            	            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	            						// set value of enumeration attribute
            	            						Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptOpKind().getEEnumLiteral(org.emftext.language.xpath2.IntersectExceptOpKind.EXCEPT_VALUE).getInstance();
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERATOR, value);
            	            						completedElement(value, false);
            	            					}

            	            }
            	            break;

            	    }


            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[637]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[638]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[639]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[640]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[641]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[642]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[643]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[644]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[645]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[646]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[647]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[648]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[649]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[650]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[651]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[652]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getIntersectExceptExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[653]);
            	    			}

            	    // Xpath2.g:3363:4: (a5_0= parse_org_emftext_language_xpath2_InstanceofExpr )
            	    // Xpath2.g:3364:5: a5_0= parse_org_emftext_language_xpath2_InstanceofExpr
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2595);
            	    a5_0=parse_org_emftext_language_xpath2_InstanceofExpr();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntersectExceptExpr();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a5_0 != null) {
            	    						if (a5_0 != null) {
            	    							Object value = a5_0;
            	    							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.INTERSECT_EXCEPT_EXPR__OPERAND, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_15_0_0_1_0_0_3, a5_0, true);
            	    						copyLocalizationInfos(a5_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[654]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[655]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[656]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[657]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[658]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[659]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[660]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[661]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[662]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[663]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[664]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[665]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[666]);
            	    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[667]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[668]);
            	    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[669]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[670]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[671]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[672]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[673]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[674]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[675]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[676]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[677]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[678]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[679]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[680]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[681]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[682]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[683]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[684]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[685]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_org_emftext_language_xpath2_IntersectExceptExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IntersectExceptExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_InstanceofExpr"
    // Xpath2.g:3428:1: parse_org_emftext_language_xpath2_InstanceofExpr returns [org.emftext.language.xpath2.InstanceofExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? ;
    public final org.emftext.language.xpath2.InstanceofExpr parse_org_emftext_language_xpath2_InstanceofExpr() throws RecognitionException {
        org.emftext.language.xpath2.InstanceofExpr element =  null;

        int parse_org_emftext_language_xpath2_InstanceofExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.TreatExpr a0_0 =null;

        org.emftext.language.xpath2.SequenceType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Xpath2.g:3431:2: ( (a0_0= parse_org_emftext_language_xpath2_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? )
            // Xpath2.g:3432:2: (a0_0= parse_org_emftext_language_xpath2_TreatExpr ) ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            {
            // Xpath2.g:3432:2: (a0_0= parse_org_emftext_language_xpath2_TreatExpr )
            // Xpath2.g:3433:3: a0_0= parse_org_emftext_language_xpath2_TreatExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_InstanceofExpr2655);
            a0_0=parse_org_emftext_language_xpath2_TreatExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INSTANCEOF_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[686]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[687]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[688]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[689]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[690]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[691]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[692]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[693]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[694]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[695]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[696]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[697]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[698]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[699]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[700]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[701]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[702]);
            	}

            // Xpath2.g:3474:2: ( (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==63) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // Xpath2.g:3475:3: (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    {
                    // Xpath2.g:3475:3: (a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    // Xpath2.g:3476:4: a1= 'instance' a2= 'of' (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    {
                    a1=(Token)match(input,63,FOLLOW_63_in_parse_org_emftext_language_xpath2_InstanceofExpr2682); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[703]);
                    			}

                    a2=(Token)match(input,73,FOLLOW_73_in_parse_org_emftext_language_xpath2_InstanceofExpr2702); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[704]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[705]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[706]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[707]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[708]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[709]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[710]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[711]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[712]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[713]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[714]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[715]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[716]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[717]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[718]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[719]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[720]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[721]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getInstanceofExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[722]);
                    			}

                    // Xpath2.g:3522:4: (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    // Xpath2.g:3523:5: a3_0= parse_org_emftext_language_xpath2_SequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_InstanceofExpr2728);
                    a3_0=parse_org_emftext_language_xpath2_SequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createInstanceofExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INSTANCEOF_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_16_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[723]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[724]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[725]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[726]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[727]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[728]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[729]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[730]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[731]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[732]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[733]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[734]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[735]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[736]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[737]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[738]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[739]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[740]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[741]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[742]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[743]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[744]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[745]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[746]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[747]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[748]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[749]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[750]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[751]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[752]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[753]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[754]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_org_emftext_language_xpath2_InstanceofExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_InstanceofExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_TreatExpr"
    // Xpath2.g:3587:1: parse_org_emftext_language_xpath2_TreatExpr returns [org.emftext.language.xpath2.TreatExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? ;
    public final org.emftext.language.xpath2.TreatExpr parse_org_emftext_language_xpath2_TreatExpr() throws RecognitionException {
        org.emftext.language.xpath2.TreatExpr element =  null;

        int parse_org_emftext_language_xpath2_TreatExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.CastableExpr a0_0 =null;

        org.emftext.language.xpath2.SequenceType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Xpath2.g:3590:2: ( (a0_0= parse_org_emftext_language_xpath2_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )? )
            // Xpath2.g:3591:2: (a0_0= parse_org_emftext_language_xpath2_CastableExpr ) ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            {
            // Xpath2.g:3591:2: (a0_0= parse_org_emftext_language_xpath2_CastableExpr )
            // Xpath2.g:3592:3: a0_0= parse_org_emftext_language_xpath2_CastableExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_TreatExpr2788);
            a0_0=parse_org_emftext_language_xpath2_CastableExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.TREAT_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[755]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[756]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[757]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[758]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[770]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[771]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[772]);
            	}

            // Xpath2.g:3634:2: ( (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==88) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // Xpath2.g:3635:3: (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    {
                    // Xpath2.g:3635:3: (a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType ) )
                    // Xpath2.g:3636:4: a1= 'treat' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    {
                    a1=(Token)match(input,88,FOLLOW_88_in_parse_org_emftext_language_xpath2_TreatExpr2815); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[773]);
                    			}

                    a2=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath2_TreatExpr2835); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[774]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[775]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[776]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[777]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[778]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[779]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[780]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[781]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[782]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[783]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[784]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[785]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[786]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[787]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[788]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[789]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[790]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[791]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getTreatExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[792]);
                    			}

                    // Xpath2.g:3682:4: (a3_0= parse_org_emftext_language_xpath2_SequenceType )
                    // Xpath2.g:3683:5: a3_0= parse_org_emftext_language_xpath2_SequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_TreatExpr2861);
                    a3_0=parse_org_emftext_language_xpath2_SequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTreatExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.TREAT_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_17_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[793]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[794]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[795]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[796]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[797]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[798]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[799]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[800]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[801]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[802]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[803]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[804]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[805]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[806]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[807]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[808]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[809]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[810]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[811]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[812]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[813]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[814]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[815]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[816]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[817]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[820]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[823]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[824]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[825]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[826]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_org_emftext_language_xpath2_TreatExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_TreatExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_CastableExpr"
    // Xpath2.g:3749:1: parse_org_emftext_language_xpath2_CastableExpr returns [org.emftext.language.xpath2.CastableExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? ;
    public final org.emftext.language.xpath2.CastableExpr parse_org_emftext_language_xpath2_CastableExpr() throws RecognitionException {
        org.emftext.language.xpath2.CastableExpr element =  null;

        int parse_org_emftext_language_xpath2_CastableExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.CastExpr a0_0 =null;

        org.emftext.language.xpath2.SingleType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Xpath2.g:3752:2: ( (a0_0= parse_org_emftext_language_xpath2_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? )
            // Xpath2.g:3753:2: (a0_0= parse_org_emftext_language_xpath2_CastExpr ) ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            {
            // Xpath2.g:3753:2: (a0_0= parse_org_emftext_language_xpath2_CastExpr )
            // Xpath2.g:3754:3: a0_0= parse_org_emftext_language_xpath2_CastExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_CastableExpr2921);
            a0_0=parse_org_emftext_language_xpath2_CastExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CASTABLE_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[827]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[828]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[829]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[830]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[831]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[832]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[833]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[834]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[835]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[836]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[837]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[838]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[839]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[840]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[841]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[842]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[843]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[845]);
            	}

            // Xpath2.g:3797:2: ( (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==42) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // Xpath2.g:3798:3: (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    {
                    // Xpath2.g:3798:3: (a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    // Xpath2.g:3799:4: a1= 'castable' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    {
                    a1=(Token)match(input,42,FOLLOW_42_in_parse_org_emftext_language_xpath2_CastableExpr2948); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[846]);
                    			}

                    a2=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath2_CastableExpr2968); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastableExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[847]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastableExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[848]);
                    			}

                    // Xpath2.g:3828:4: (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    // Xpath2.g:3829:5: a3_0= parse_org_emftext_language_xpath2_SingleType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastableExpr2994);
                    a3_0=parse_org_emftext_language_xpath2_SingleType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastableExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CASTABLE_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_18_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[849]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[850]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[851]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[852]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[853]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[854]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[855]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[856]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[857]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[858]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[859]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[860]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[861]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[862]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[863]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[864]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[865]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[866]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[868]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[869]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[870]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[871]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[872]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[873]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[874]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[875]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[876]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[879]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[880]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[884]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_org_emftext_language_xpath2_CastableExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_CastableExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_CastExpr"
    // Xpath2.g:3897:1: parse_org_emftext_language_xpath2_CastExpr returns [org.emftext.language.xpath2.CastExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? ;
    public final org.emftext.language.xpath2.CastExpr parse_org_emftext_language_xpath2_CastExpr() throws RecognitionException {
        org.emftext.language.xpath2.CastExpr element =  null;

        int parse_org_emftext_language_xpath2_CastExpr_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.UnaryExpr a0_0 =null;

        org.emftext.language.xpath2.SingleType a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Xpath2.g:3900:2: ( (a0_0= parse_org_emftext_language_xpath2_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )? )
            // Xpath2.g:3901:2: (a0_0= parse_org_emftext_language_xpath2_UnaryExpr ) ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            {
            // Xpath2.g:3901:2: (a0_0= parse_org_emftext_language_xpath2_UnaryExpr )
            // Xpath2.g:3902:3: a0_0= parse_org_emftext_language_xpath2_UnaryExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_CastExpr3054);
            a0_0=parse_org_emftext_language_xpath2_UnaryExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CAST_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[885]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[886]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[887]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[888]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[889]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[890]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[891]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[892]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[893]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[894]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[895]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[896]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[897]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[900]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[901]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[902]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[903]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[904]);
            	}

            // Xpath2.g:3946:2: ( (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==41) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // Xpath2.g:3947:3: (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    {
                    // Xpath2.g:3947:3: (a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType ) )
                    // Xpath2.g:3948:4: a1= 'cast' a2= 'as' (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    {
                    a1=(Token)match(input,41,FOLLOW_41_in_parse_org_emftext_language_xpath2_CastExpr3081); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[905]);
                    			}

                    a2=(Token)match(input,39,FOLLOW_39_in_parse_org_emftext_language_xpath2_CastExpr3101); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_1_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[906]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getCastExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[907]);
                    			}

                    // Xpath2.g:3977:4: (a3_0= parse_org_emftext_language_xpath2_SingleType )
                    // Xpath2.g:3978:5: a3_0= parse_org_emftext_language_xpath2_SingleType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastExpr3127);
                    a3_0=parse_org_emftext_language_xpath2_SingleType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCastExpr();
                    						startIncompleteElement(element);
                    					}
                    					if (a3_0 != null) {
                    						if (a3_0 != null) {
                    							Object value = a3_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CAST_EXPR__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_19_0_0_1_0_0_3, a3_0, true);
                    						copyLocalizationInfos(a3_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[908]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[909]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[910]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[911]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[912]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[913]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[914]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[915]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[916]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[917]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[918]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[919]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[920]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[921]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[922]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[923]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[924]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[925]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[926]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[927]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[935]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[937]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[938]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[939]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[943]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[945]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_org_emftext_language_xpath2_CastExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_CastExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_UnaryExpr"
    // Xpath2.g:4048:1: parse_org_emftext_language_xpath2_UnaryExpr returns [org.emftext.language.xpath2.UnaryExpr element = null] : ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath2_ValueExpr ) ;
    public final org.emftext.language.xpath2.UnaryExpr parse_org_emftext_language_xpath2_UnaryExpr() throws RecognitionException {
        org.emftext.language.xpath2.UnaryExpr element =  null;

        int parse_org_emftext_language_xpath2_UnaryExpr_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        org.emftext.language.xpath2.ValueExpr a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Xpath2.g:4051:2: ( ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath2_ValueExpr ) )
            // Xpath2.g:4052:2: ( ( (a0= '+' |a1= '-' ) ) )* (a4_0= parse_org_emftext_language_xpath2_ValueExpr )
            {
            // Xpath2.g:4052:2: ( ( (a0= '+' |a1= '-' ) ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==16||LA33_0==18) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // Xpath2.g:4053:3: ( (a0= '+' |a1= '-' ) )
            	    {
            	    // Xpath2.g:4053:3: ( (a0= '+' |a1= '-' ) )
            	    // Xpath2.g:4054:4: (a0= '+' |a1= '-' )
            	    {
            	    // Xpath2.g:4054:4: (a0= '+' |a1= '-' )
            	    int alt32=2;
            	    int LA32_0 = input.LA(1);

            	    if ( (LA32_0==16) ) {
            	        alt32=1;
            	    }
            	    else if ( (LA32_0==18) ) {
            	        alt32=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 32, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt32) {
            	        case 1 :
            	            // Xpath2.g:4055:5: a0= '+'
            	            {
            	            a0=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_UnaryExpr3198); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnaryExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_0, null, true);
            	            					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	            					// set value of enumeration attribute
            	            					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryOp().getEEnumLiteral(org.emftext.language.xpath2.UnaryOp.PLUS_VALUE).getInstance();
            	            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNARY_EXPR__OPERATOR, value);
            	            					completedElement(value, false);
            	            				}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:4068:10: a1= '-'
            	            {
            	            a1=(Token)match(input,18,FOLLOW_18_in_parse_org_emftext_language_xpath2_UnaryExpr3215); if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            					if (element == null) {
            	            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnaryExpr();
            	            						startIncompleteElement(element);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_0, null, true);
            	            					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	            					// set value of enumeration attribute
            	            					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryOp().getEEnumLiteral(org.emftext.language.xpath2.UnaryOp.MINUS_VALUE).getInstance();
            	            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.UNARY_EXPR__OPERATOR, value);
            	            					completedElement(value, false);
            	            				}

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[946]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[947]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[948]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[949]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[950]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[951]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[952]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[953]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[954]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[955]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[956]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[957]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[958]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[959]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[961]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getUnaryExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[962]);
            	}

            // Xpath2.g:4105:2: (a4_0= parse_org_emftext_language_xpath2_ValueExpr )
            // Xpath2.g:4106:3: a4_0= parse_org_emftext_language_xpath2_ValueExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ValueExpr_in_parse_org_emftext_language_xpath2_UnaryExpr3248);
            a4_0=parse_org_emftext_language_xpath2_ValueExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createUnaryExpr();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.UNARY_EXPR__OPERAND), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_20_0_0_1, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[975]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[976]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[982]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_org_emftext_language_xpath2_UnaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_UnaryExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_FilterExpr"
    // Xpath2.g:4152:1: parse_org_emftext_language_xpath2_FilterExpr returns [org.emftext.language.xpath2.FilterExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.FilterExpr parse_org_emftext_language_xpath2_FilterExpr() throws RecognitionException {
        org.emftext.language.xpath2.FilterExpr element =  null;

        int parse_org_emftext_language_xpath2_FilterExpr_StartIndex = input.index();

        org.emftext.language.xpath2.PrimaryExpr a0_0 =null;

        org.emftext.language.xpath2.Predicate a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Xpath2.g:4155:2: ( (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:4156:2: (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr ) ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:4156:2: (a0_0= parse_org_emftext_language_xpath2_PrimaryExpr )
            // Xpath2.g:4157:3: a0_0= parse_org_emftext_language_xpath2_PrimaryExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PrimaryExpr_in_parse_org_emftext_language_xpath2_FilterExpr3285);
            a0_0=parse_org_emftext_language_xpath2_PrimaryExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFilterExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FILTER_EXPR__PRIMARY_EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_21_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[984]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[985]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[986]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[987]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[988]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[989]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[990]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[991]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[992]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[993]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[994]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[995]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[996]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[997]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[998]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[999]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1000]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1001]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1002]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1003]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1004]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1005]);
            	}

            // Xpath2.g:4204:2: ( (a1_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==34) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // Xpath2.g:4205:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:4205:3: (a1_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:4206:4: a1_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_FilterExpr3312);
            	    a1_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFilterExpr();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a1_0 != null) {
            	    					if (a1_0 != null) {
            	    						Object value = a1_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FILTER_EXPR__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_21_0_0_1, a1_0, true);
            	    					copyLocalizationInfos(a1_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1006]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1007]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1008]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1009]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1010]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1011]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1012]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1013]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1014]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1015]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1016]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1017]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1018]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1019]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1020]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1021]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1022]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1023]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1024]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1025]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1026]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1027]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1028]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_org_emftext_language_xpath2_FilterExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_FilterExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_FunctionCall"
    // Xpath2.g:4256:1: parse_org_emftext_language_xpath2_FunctionCall returns [org.emftext.language.xpath2.FunctionCall element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) a2= '(' ( ( (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* ) )? a6= ')' ;
    public final org.emftext.language.xpath2.FunctionCall parse_org_emftext_language_xpath2_FunctionCall() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall element =  null;

        int parse_org_emftext_language_xpath2_FunctionCall_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath2.IfExpr a3_0 =null;

        org.emftext.language.xpath2.ForExpr a3_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a3_2 =null;

        org.emftext.language.xpath2.OrExpr a3_3 =null;

        org.emftext.language.xpath2.IfExpr a5_0 =null;

        org.emftext.language.xpath2.ForExpr a5_1 =null;

        org.emftext.language.xpath2.QuantifiedExpr a5_2 =null;

        org.emftext.language.xpath2.OrExpr a5_3 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Xpath2.g:4259:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) a2= '(' ( ( (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* ) )? a6= ')' )
            // Xpath2.g:4260:2: ( (a0= QNAME ) | (a1= NCNAME ) ) a2= '(' ( ( (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* ) )? a6= ')'
            {
            // Xpath2.g:4260:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==QNAME) ) {
                alt35=1;
            }
            else if ( (LA35_0==NCNAME) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;

            }
            switch (alt35) {
                case 1 :
                    // Xpath2.g:4261:3: (a0= QNAME )
                    {
                    // Xpath2.g:4261:3: (a0= QNAME )
                    // Xpath2.g:4262:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_FunctionCall3362); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    					startIncompleteElement(element);
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1029]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:4298:6: (a1= NCNAME )
                    {
                    // Xpath2.g:4298:6: (a1= NCNAME )
                    // Xpath2.g:4299:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_FunctionCall3400); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1030]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1031]);
            	}

            a2=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_FunctionCall3434); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1033]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1034]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1043]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1044]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1045]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1046]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1047]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1048]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1049]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1050]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1051]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1052]);
            	}

            // Xpath2.g:4374:2: ( ( (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0 >= DECIMAL_LITERAL && LA39_0 <= STRING_LITERAL)||(LA39_0 >= 12 && LA39_0 <= 13)||(LA39_0 >= 15 && LA39_0 <= 16)||(LA39_0 >= 18 && LA39_0 <= 22)||LA39_0==33||(LA39_0 >= 36 && LA39_0 <= 37)||LA39_0==40||(LA39_0 >= 43 && LA39_0 <= 46)||(LA39_0 >= 48 && LA39_0 <= 49)||LA39_0==53||(LA39_0 >= 55 && LA39_0 <= 57)||LA39_0==61||LA39_0==70||LA39_0==72||(LA39_0 >= 75 && LA39_0 <= 78)||(LA39_0 >= 81 && LA39_0 <= 85)) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // Xpath2.g:4375:3: ( (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* )
                    {
                    // Xpath2.g:4375:3: ( (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )* )
                    // Xpath2.g:4376:4: (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )*
                    {
                    // Xpath2.g:4376:4: (a3_0= parse_org_emftext_language_xpath2_IfExpr |a3_1= parse_org_emftext_language_xpath2_ForExpr |a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a3_3= parse_org_emftext_language_xpath2_OrExpr )
                    int alt36=4;
                    switch ( input.LA(1) ) {
                    case 61:
                        {
                        alt36=1;
                        }
                        break;
                    case 57:
                        {
                        alt36=2;
                        }
                        break;
                    case 53:
                    case 84:
                        {
                        alt36=3;
                        }
                        break;
                    case DECIMAL_LITERAL:
                    case DOUBLE_LITERAL:
                    case INTEGER_LITERAL:
                    case NCNAME:
                    case QNAME:
                    case STRING_LITERAL:
                    case 12:
                    case 13:
                    case 15:
                    case 16:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 33:
                    case 36:
                    case 37:
                    case 40:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 48:
                    case 49:
                    case 55:
                    case 56:
                    case 70:
                    case 72:
                    case 75:
                    case 76:
                    case 77:
                    case 78:
                    case 81:
                    case 82:
                    case 83:
                    case 85:
                        {
                        alt36=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 36, 0, input);

                        throw nvae;

                    }

                    switch (alt36) {
                        case 1 :
                            // Xpath2.g:4377:5: a3_0= parse_org_emftext_language_xpath2_IfExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_FunctionCall3463);
                            a3_0=parse_org_emftext_language_xpath2_IfExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_0 != null) {
                            						if (a3_0 != null) {
                            							Object value = a3_0;
                            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_0, a3_0, true);
                            						copyLocalizationInfos(a3_0, element);
                            					}
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath2.g:4396:10: a3_1= parse_org_emftext_language_xpath2_ForExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_FunctionCall3483);
                            a3_1=parse_org_emftext_language_xpath2_ForExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_1 != null) {
                            						if (a3_1 != null) {
                            							Object value = a3_1;
                            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_0, a3_1, true);
                            						copyLocalizationInfos(a3_1, element);
                            					}
                            				}

                            }
                            break;
                        case 3 :
                            // Xpath2.g:4415:10: a3_2= parse_org_emftext_language_xpath2_QuantifiedExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_FunctionCall3503);
                            a3_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_2 != null) {
                            						if (a3_2 != null) {
                            							Object value = a3_2;
                            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_0, a3_2, true);
                            						copyLocalizationInfos(a3_2, element);
                            					}
                            				}

                            }
                            break;
                        case 4 :
                            // Xpath2.g:4434:10: a3_3= parse_org_emftext_language_xpath2_OrExpr
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_FunctionCall3523);
                            a3_3=parse_org_emftext_language_xpath2_OrExpr();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            					if (terminateParsing) {
                            						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            					}
                            					if (element == null) {
                            						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                            						startIncompleteElement(element);
                            					}
                            					if (a3_3 != null) {
                            						if (a3_3 != null) {
                            							Object value = a3_3;
                            							addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                            							completedElement(value, true);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_0, a3_3, true);
                            						copyLocalizationInfos(a3_3, element);
                            					}
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1053]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1054]);
                    			}

                    // Xpath2.g:4460:4: ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==17) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // Xpath2.g:4461:5: (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) )
                    	    {
                    	    // Xpath2.g:4461:5: (a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr ) )
                    	    // Xpath2.g:4462:6: a4= ',' (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr )
                    	    {
                    	    a4=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_FunctionCall3564); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1055]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1056]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1057]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1058]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1059]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1060]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1061]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1062]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1063]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1064]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1065]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1066]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1067]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1068]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1069]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1070]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1071]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1072]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1073]);
                    	    						addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFunctionCall(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1074]);
                    	    					}

                    	    // Xpath2.g:4495:6: (a5_0= parse_org_emftext_language_xpath2_IfExpr |a5_1= parse_org_emftext_language_xpath2_ForExpr |a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr |a5_3= parse_org_emftext_language_xpath2_OrExpr )
                    	    int alt37=4;
                    	    switch ( input.LA(1) ) {
                    	    case 61:
                    	        {
                    	        alt37=1;
                    	        }
                    	        break;
                    	    case 57:
                    	        {
                    	        alt37=2;
                    	        }
                    	        break;
                    	    case 53:
                    	    case 84:
                    	        {
                    	        alt37=3;
                    	        }
                    	        break;
                    	    case DECIMAL_LITERAL:
                    	    case DOUBLE_LITERAL:
                    	    case INTEGER_LITERAL:
                    	    case NCNAME:
                    	    case QNAME:
                    	    case STRING_LITERAL:
                    	    case 12:
                    	    case 13:
                    	    case 15:
                    	    case 16:
                    	    case 18:
                    	    case 19:
                    	    case 20:
                    	    case 21:
                    	    case 22:
                    	    case 33:
                    	    case 36:
                    	    case 37:
                    	    case 40:
                    	    case 43:
                    	    case 44:
                    	    case 45:
                    	    case 46:
                    	    case 48:
                    	    case 49:
                    	    case 55:
                    	    case 56:
                    	    case 70:
                    	    case 72:
                    	    case 75:
                    	    case 76:
                    	    case 77:
                    	    case 78:
                    	    case 81:
                    	    case 82:
                    	    case 83:
                    	    case 85:
                    	        {
                    	        alt37=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 37, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt37) {
                    	        case 1 :
                    	            // Xpath2.g:4496:7: a5_0= parse_org_emftext_language_xpath2_IfExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_FunctionCall3598);
                    	            a5_0=parse_org_emftext_language_xpath2_IfExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_0 != null) {
                    	            								if (a5_0 != null) {
                    	            									Object value = a5_0;
                    	            									addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_1_0_0_2, a5_0, true);
                    	            								copyLocalizationInfos(a5_0, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Xpath2.g:4515:14: a5_1= parse_org_emftext_language_xpath2_ForExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_FunctionCall3624);
                    	            a5_1=parse_org_emftext_language_xpath2_ForExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_1 != null) {
                    	            								if (a5_1 != null) {
                    	            									Object value = a5_1;
                    	            									addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_1_0_0_2, a5_1, true);
                    	            								copyLocalizationInfos(a5_1, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 3 :
                    	            // Xpath2.g:4534:14: a5_2= parse_org_emftext_language_xpath2_QuantifiedExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_FunctionCall3650);
                    	            a5_2=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_2 != null) {
                    	            								if (a5_2 != null) {
                    	            									Object value = a5_2;
                    	            									addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_1_0_0_2, a5_2, true);
                    	            								copyLocalizationInfos(a5_2, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;
                    	        case 4 :
                    	            // Xpath2.g:4553:14: a5_3= parse_org_emftext_language_xpath2_OrExpr
                    	            {
                    	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_FunctionCall3676);
                    	            a5_3=parse_org_emftext_language_xpath2_OrExpr();

                    	            state._fsp--;
                    	            if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            							if (terminateParsing) {
                    	            								throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    	            							}
                    	            							if (element == null) {
                    	            								element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
                    	            								startIncompleteElement(element);
                    	            							}
                    	            							if (a5_3 != null) {
                    	            								if (a5_3 != null) {
                    	            									Object value = a5_3;
                    	            									addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.FUNCTION_CALL__ARG, value);
                    	            									completedElement(value, true);
                    	            								}
                    	            								collectHiddenTokens(element);
                    	            								retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_2_0_0_1_0_0_2, a5_3, true);
                    	            								copyLocalizationInfos(a5_3, element);
                    	            							}
                    	            						}

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1075]);
                    	    						addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1076]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1077]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1078]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1079]);
            	}

            a6=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_FunctionCall3750); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createFunctionCall();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_22_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1080]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1081]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1082]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1083]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1084]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1085]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1086]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1087]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1088]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1089]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1090]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1091]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1092]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1093]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1094]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1095]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1096]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1097]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1098]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1099]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1100]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1101]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1102]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_org_emftext_language_xpath2_FunctionCall_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_FunctionCall"



    // $ANTLR start "parse_org_emftext_language_xpath2_PathExpr"
    // Xpath2.g:4632:1: parse_org_emftext_language_xpath2_PathExpr returns [org.emftext.language.xpath2.PathExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )* ;
    public final org.emftext.language.xpath2.PathExpr parse_org_emftext_language_xpath2_PathExpr() throws RecognitionException {
        org.emftext.language.xpath2.PathExpr element =  null;

        int parse_org_emftext_language_xpath2_PathExpr_StartIndex = input.index();

        org.emftext.language.xpath2.PathExprChild a0_0 =null;

        org.emftext.language.xpath2.ChildStepExpr a1_0 =null;

        org.emftext.language.xpath2.DescOrSelfStepExpr a1_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Xpath2.g:4635:2: ( (a0_0= parse_org_emftext_language_xpath2_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )* )
            // Xpath2.g:4636:2: (a0_0= parse_org_emftext_language_xpath2_PathExprChild ) ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )*
            {
            // Xpath2.g:4636:2: (a0_0= parse_org_emftext_language_xpath2_PathExprChild )
            // Xpath2.g:4637:3: a0_0= parse_org_emftext_language_xpath2_PathExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PathExprChild_in_parse_org_emftext_language_xpath2_PathExpr3783);
            a0_0=parse_org_emftext_language_xpath2_PathExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPathExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.PATH_EXPR__STEP, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_23_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1103]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1104]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1105]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1106]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1107]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1108]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1109]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1110]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1111]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1112]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1113]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1114]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1115]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1116]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1117]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1124]);
            	}

            // Xpath2.g:4683:2: ( (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( ((LA41_0 >= 21 && LA41_0 <= 22)) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // Xpath2.g:4684:3: (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr )
            	    {
            	    // Xpath2.g:4684:3: (a1_0= parse_org_emftext_language_xpath2_ChildStepExpr |a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr )
            	    int alt40=2;
            	    int LA40_0 = input.LA(1);

            	    if ( (LA40_0==21) ) {
            	        alt40=1;
            	    }
            	    else if ( (LA40_0==22) ) {
            	        alt40=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 40, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt40) {
            	        case 1 :
            	            // Xpath2.g:4685:4: a1_0= parse_org_emftext_language_xpath2_ChildStepExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExpr3810);
            	            a1_0=parse_org_emftext_language_xpath2_ChildStepExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPathExpr();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a1_0 != null) {
            	            					if (a1_0 != null) {
            	            						Object value = a1_0;
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.PATH_EXPR__STEP, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_23_0_0_1, a1_0, true);
            	            					copyLocalizationInfos(a1_0, element);
            	            				}
            	            			}

            	            }
            	            break;
            	        case 2 :
            	            // Xpath2.g:4704:8: a1_1= parse_org_emftext_language_xpath2_DescOrSelfStepExpr
            	            {
            	            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExpr3827);
            	            a1_1=parse_org_emftext_language_xpath2_DescOrSelfStepExpr();

            	            state._fsp--;
            	            if (state.failed) return element;

            	            if ( state.backtracking==0 ) {
            	            				if (terminateParsing) {
            	            					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	            				}
            	            				if (element == null) {
            	            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPathExpr();
            	            					startIncompleteElement(element);
            	            				}
            	            				if (a1_1 != null) {
            	            					if (a1_1 != null) {
            	            						Object value = a1_1;
            	            						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.PATH_EXPR__STEP, value);
            	            						completedElement(value, true);
            	            					}
            	            					collectHiddenTokens(element);
            	            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_23_0_0_1, a1_1, true);
            	            					copyLocalizationInfos(a1_1, element);
            	            				}
            	            			}

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1126]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1127]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1128]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1129]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1130]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1131]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1132]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1133]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1134]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1135]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1136]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1137]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1138]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1139]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1140]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1141]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1142]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1143]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1144]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1145]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1146]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_org_emftext_language_xpath2_PathExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PathExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ChildStepExpr"
    // Xpath2.g:4753:1: parse_org_emftext_language_xpath2_ChildStepExpr returns [org.emftext.language.xpath2.ChildStepExpr element = null] : a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) ;
    public final org.emftext.language.xpath2.ChildStepExpr parse_org_emftext_language_xpath2_ChildStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.ChildStepExpr element =  null;

        int parse_org_emftext_language_xpath2_ChildStepExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Xpath2.g:4756:2: (a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) )
            // Xpath2.g:4757:2: a0= '/' (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_org_emftext_language_xpath2_ChildStepExpr3868); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createChildStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_24_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1147]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1148]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1149]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1150]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1151]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1152]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1153]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1154]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1155]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1156]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1157]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1158]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getChildStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1159]);
            	}

            // Xpath2.g:4783:2: (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            // Xpath2.g:4784:3: a1_0= parse_org_emftext_language_xpath2_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_ChildStepExpr3886);
            a1_0=parse_org_emftext_language_xpath2_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createChildStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.CHILD_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_24_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1160]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1161]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1162]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1163]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1164]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1165]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1166]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1167]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1168]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1169]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1170]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1171]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1172]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1173]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1174]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1175]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1176]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1177]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1178]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1179]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1180]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1181]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_org_emftext_language_xpath2_ChildStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ChildStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_DescOrSelfStepExpr"
    // Xpath2.g:4832:1: parse_org_emftext_language_xpath2_DescOrSelfStepExpr returns [org.emftext.language.xpath2.DescOrSelfStepExpr element = null] : a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) ;
    public final org.emftext.language.xpath2.DescOrSelfStepExpr parse_org_emftext_language_xpath2_DescOrSelfStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.DescOrSelfStepExpr element =  null;

        int parse_org_emftext_language_xpath2_DescOrSelfStepExpr_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.StepExpr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Xpath2.g:4835:2: (a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr ) )
            // Xpath2.g:4836:2: a0= '//' (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            {
            a0=(Token)match(input,22,FOLLOW_22_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr3919); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDescOrSelfStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1182]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1183]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1184]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1185]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1186]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1187]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1188]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1189]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1190]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1191]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1192]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1193]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDescOrSelfStepExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1194]);
            	}

            // Xpath2.g:4862:2: (a1_0= parse_org_emftext_language_xpath2_StepExpr )
            // Xpath2.g:4863:3: a1_0= parse_org_emftext_language_xpath2_StepExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr3937);
            a1_0=parse_org_emftext_language_xpath2_StepExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDescOrSelfStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DESC_OR_SELF_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_25_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1195]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1196]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1197]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1198]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1199]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1200]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1201]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1202]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1203]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1204]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1205]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1206]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1207]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1208]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1209]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1210]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1211]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1212]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1213]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1214]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1215]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1216]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_org_emftext_language_xpath2_DescOrSelfStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DescOrSelfStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_RootStepExpr"
    // Xpath2.g:4911:1: parse_org_emftext_language_xpath2_RootStepExpr returns [org.emftext.language.xpath2.RootStepExpr element = null] : a0= '/' ;
    public final org.emftext.language.xpath2.RootStepExpr parse_org_emftext_language_xpath2_RootStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.RootStepExpr element =  null;

        int parse_org_emftext_language_xpath2_RootStepExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Xpath2.g:4914:2: (a0= '/' )
            // Xpath2.g:4915:2: a0= '/'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_org_emftext_language_xpath2_RootStepExpr3970); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createRootStepExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_26_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1217]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1218]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1219]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1220]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1221]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1222]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1223]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1224]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1225]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1226]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1227]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1228]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1229]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1230]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1231]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1232]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1233]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1234]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1235]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1236]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1237]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1238]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_org_emftext_language_xpath2_RootStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_RootStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_SelfStepExpr"
    // Xpath2.g:4952:1: parse_org_emftext_language_xpath2_SelfStepExpr returns [org.emftext.language.xpath2.SelfStepExpr element = null] : (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild ) ;
    public final org.emftext.language.xpath2.SelfStepExpr parse_org_emftext_language_xpath2_SelfStepExpr() throws RecognitionException {
        org.emftext.language.xpath2.SelfStepExpr element =  null;

        int parse_org_emftext_language_xpath2_SelfStepExpr_StartIndex = input.index();

        org.emftext.language.xpath2.SelfStepExprChild a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Xpath2.g:4955:2: ( (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild ) )
            // Xpath2.g:4956:2: (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild )
            {
            // Xpath2.g:4956:2: (a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild )
            // Xpath2.g:4957:3: a0_0= parse_org_emftext_language_xpath2_SelfStepExprChild
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExprChild_in_parse_org_emftext_language_xpath2_SelfStepExpr4003);
            a0_0=parse_org_emftext_language_xpath2_SelfStepExprChild();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSelfStepExpr();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SELF_STEP_EXPR__STEP), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_27_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1239]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1240]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1241]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1242]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1243]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1244]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1245]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1246]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1247]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1248]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1249]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1250]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1251]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1252]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1253]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1254]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1255]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1256]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1257]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1258]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1259]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1260]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_org_emftext_language_xpath2_SelfStepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SelfStepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralForwardStep"
    // Xpath2.g:5005:1: parse_org_emftext_language_xpath2_GeneralForwardStep returns [org.emftext.language.xpath2.GeneralForwardStep element = null] : ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a12_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.GeneralForwardStep parse_org_emftext_language_xpath2_GeneralForwardStep() throws RecognitionException {
        org.emftext.language.xpath2.GeneralForwardStep element =  null;

        int parse_org_emftext_language_xpath2_GeneralForwardStep_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a10=null;
        org.emftext.language.xpath2.NodeTest a11_0 =null;

        org.emftext.language.xpath2.Predicate a12_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Xpath2.g:5008:2: ( ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a12_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:5009:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) ) a10= '::' (a11_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a12_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:5009:2: ( (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' ) )
            // Xpath2.g:5010:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            {
            // Xpath2.g:5010:3: (a0= 'child' |a1= 'descendant' |a2= 'attribute' |a3= 'self' |a4= 'descendant-or-self' |a5= 'following-sibling' |a6= 'following' |a7= 'namespace' )
            int alt42=8;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt42=1;
                }
                break;
            case 45:
                {
                alt42=2;
                }
                break;
            case 40:
                {
                alt42=3;
                }
                break;
            case 83:
                {
                alt42=4;
                }
                break;
            case 46:
                {
                alt42=5;
                }
                break;
            case 56:
                {
                alt42=6;
                }
                break;
            case 55:
                {
                alt42=7;
                }
                break;
            case 70:
                {
                alt42=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }

            switch (alt42) {
                case 1 :
                    // Xpath2.g:5011:4: a0= 'child'
                    {
                    a0=(Token)match(input,43,FOLLOW_43_in_parse_org_emftext_language_xpath2_GeneralForwardStep4045); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.CHILD_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:5024:8: a1= 'descendant'
                    {
                    a1=(Token)match(input,45,FOLLOW_45_in_parse_org_emftext_language_xpath2_GeneralForwardStep4060); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.DESCENDANT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:5037:8: a2= 'attribute'
                    {
                    a2=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath2_GeneralForwardStep4075); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.ATTRIBUTE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:5050:8: a3= 'self'
                    {
                    a3=(Token)match(input,83,FOLLOW_83_in_parse_org_emftext_language_xpath2_GeneralForwardStep4090); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:5063:8: a4= 'descendant-or-self'
                    {
                    a4=(Token)match(input,46,FOLLOW_46_in_parse_org_emftext_language_xpath2_GeneralForwardStep4105); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.DESCENDANT_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 6 :
                    // Xpath2.g:5076:8: a5= 'following-sibling'
                    {
                    a5=(Token)match(input,56,FOLLOW_56_in_parse_org_emftext_language_xpath2_GeneralForwardStep4120); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.FOLLOWING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 7 :
                    // Xpath2.g:5089:8: a6= 'following'
                    {
                    a6=(Token)match(input,55,FOLLOW_55_in_parse_org_emftext_language_xpath2_GeneralForwardStep4135); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.FOLLOWING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 8 :
                    // Xpath2.g:5102:8: a7= 'namespace'
                    {
                    a7=(Token)match(input,70,FOLLOW_70_in_parse_org_emftext_language_xpath2_GeneralForwardStep4150); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getForwardAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ForwardAxisKind.NAMESPACE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1261]);
            	}

            a10=(Token)match(input,24,FOLLOW_24_in_parse_org_emftext_language_xpath2_GeneralForwardStep4171); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1262]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1263]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1264]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1265]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1266]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1267]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1268]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1269]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1270]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1271]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1272]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1273]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1274]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1275]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1276]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1277]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1278]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1279]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1280]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1281]);
            	}

            // Xpath2.g:5155:2: (a11_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:5156:3: a11_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralForwardStep4189);
            a11_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
            				startIncompleteElement(element);
            			}
            			if (a11_0 != null) {
            				if (a11_0 != null) {
            					Object value = a11_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_2, a11_0, true);
            				copyLocalizationInfos(a11_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1282]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1283]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1284]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1285]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1286]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1287]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1288]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1289]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1290]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1291]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1292]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1293]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1294]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1295]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1296]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1297]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1298]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1299]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1300]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1301]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1302]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1303]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1304]);
            	}

            // Xpath2.g:5203:2: ( (a12_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==34) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // Xpath2.g:5204:3: (a12_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:5204:3: (a12_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:5205:4: a12_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_GeneralForwardStep4216);
            	    a12_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralForwardStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a12_0 != null) {
            	    					if (a12_0 != null) {
            	    						Object value = a12_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.GENERAL_FORWARD_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_28_0_0_3, a12_0, true);
            	    					copyLocalizationInfos(a12_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1305]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1306]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1307]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1308]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1309]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1310]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1311]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1312]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1313]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1314]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1315]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1316]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1317]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1318]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1319]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1320]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1321]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1322]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1323]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1324]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1325]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1326]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1327]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_org_emftext_language_xpath2_GeneralForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_AbbrevForwardStep"
    // Xpath2.g:5255:1: parse_org_emftext_language_xpath2_AbbrevForwardStep returns [org.emftext.language.xpath2.AbbrevForwardStep element = null] : ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a4_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.AbbrevForwardStep parse_org_emftext_language_xpath2_AbbrevForwardStep() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevForwardStep element =  null;

        int parse_org_emftext_language_xpath2_AbbrevForwardStep_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.NodeTest a3_0 =null;

        org.emftext.language.xpath2.Predicate a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Xpath2.g:5258:2: ( ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a4_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:5259:2: ( (a0= '@' )? ) (a3_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a4_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:5259:2: ( (a0= '@' )? )
            // Xpath2.g:5260:3: (a0= '@' )?
            {
            // Xpath2.g:5260:3: (a0= '@' )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==33) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // Xpath2.g:5261:4: a0= '@'
                    {
                    a0=(Token)match(input,33,FOLLOW_33_in_parse_org_emftext_language_xpath2_AbbrevForwardStep4266); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevForwardStep();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__KIND), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_29_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevForwardStepKind.ATTRIBUTE_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__KIND), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1328]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1329]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1330]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1331]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1332]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1333]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1334]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1335]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1336]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1337]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1338]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1339]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1340]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1341]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1342]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1343]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1344]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1345]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1346]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1347]);
            	}

            // Xpath2.g:5302:2: (a3_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:5303:3: a3_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_AbbrevForwardStep4291);
            a3_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevForwardStep();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__KIND), value);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_29_0_0_1, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1348]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1349]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1350]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1351]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1352]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1353]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1354]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1355]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1356]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1357]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1358]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1359]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1360]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1361]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1362]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1363]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1364]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1365]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1366]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1367]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1368]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1369]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1370]);
            	}

            // Xpath2.g:5353:2: ( (a4_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==34) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // Xpath2.g:5354:3: (a4_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:5354:3: (a4_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:5355:4: a4_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AbbrevForwardStep4318);
            	    a4_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevForwardStep();
            	    					startIncompleteElement(element);
            	    					// initialize enumeration attribute
            	    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevForwardStepKind.CHILD_VALUE).getInstance();
            	    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__KIND), value);
            	    				}
            	    				if (a4_0 != null) {
            	    					if (a4_0 != null) {
            	    						Object value = a4_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ABBREV_FORWARD_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_29_0_0_2, a4_0, true);
            	    					copyLocalizationInfos(a4_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1371]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1372]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1373]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1374]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1375]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1376]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1377]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1378]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1379]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1380]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1381]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1382]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1383]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1384]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1385]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1386]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1387]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1388]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1389]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1390]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1391]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1392]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1393]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_org_emftext_language_xpath2_AbbrevForwardStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AbbrevForwardStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_GeneralReverseStep"
    // Xpath2.g:5408:1: parse_org_emftext_language_xpath2_GeneralReverseStep returns [org.emftext.language.xpath2.GeneralReverseStep element = null] : ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a9_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.GeneralReverseStep parse_org_emftext_language_xpath2_GeneralReverseStep() throws RecognitionException {
        org.emftext.language.xpath2.GeneralReverseStep element =  null;

        int parse_org_emftext_language_xpath2_GeneralReverseStep_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a7=null;
        org.emftext.language.xpath2.NodeTest a8_0 =null;

        org.emftext.language.xpath2.Predicate a9_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Xpath2.g:5411:2: ( ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a9_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:5412:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) ) a7= '::' (a8_0= parse_org_emftext_language_xpath2_NodeTest ) ( (a9_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:5412:2: ( (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' ) )
            // Xpath2.g:5413:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            {
            // Xpath2.g:5413:3: (a0= 'parent' |a1= 'ancestor' |a2= 'preceding-sibling' |a3= 'preceding' |a4= 'ancestor-or-self' )
            int alt46=5;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt46=1;
                }
                break;
            case 36:
                {
                alt46=2;
                }
                break;
            case 77:
                {
                alt46=3;
                }
                break;
            case 76:
                {
                alt46=4;
                }
                break;
            case 37:
                {
                alt46=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;

            }

            switch (alt46) {
                case 1 :
                    // Xpath2.g:5414:4: a0= 'parent'
                    {
                    a0=(Token)match(input,75,FOLLOW_75_in_parse_org_emftext_language_xpath2_GeneralReverseStep4368); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PARENT_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:5427:8: a1= 'ancestor'
                    {
                    a1=(Token)match(input,36,FOLLOW_36_in_parse_org_emftext_language_xpath2_GeneralReverseStep4383); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.ANCESTOR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:5440:8: a2= 'preceding-sibling'
                    {
                    a2=(Token)match(input,77,FOLLOW_77_in_parse_org_emftext_language_xpath2_GeneralReverseStep4398); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PRECEDING_SIBLING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 4 :
                    // Xpath2.g:5453:8: a3= 'preceding'
                    {
                    a3=(Token)match(input,76,FOLLOW_76_in_parse_org_emftext_language_xpath2_GeneralReverseStep4413); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.PRECEDING_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 5 :
                    // Xpath2.g:5466:8: a4= 'ancestor-or-self'
                    {
                    a4=(Token)match(input,37,FOLLOW_37_in_parse_org_emftext_language_xpath2_GeneralReverseStep4428); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getReverseAxisKind().getEEnumLiteral(org.emftext.language.xpath2.ReverseAxisKind.ANCESTOR_OR_SELF_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__AXIS), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1394]);
            	}

            a7=(Token)match(input,24,FOLLOW_24_in_parse_org_emftext_language_xpath2_GeneralReverseStep4449); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1395]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1396]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1397]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1398]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1399]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1400]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1401]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1402]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1403]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1404]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1405]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1406]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1407]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1408]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1409]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1410]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1411]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1412]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1413]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1414]);
            	}

            // Xpath2.g:5519:2: (a8_0= parse_org_emftext_language_xpath2_NodeTest )
            // Xpath2.g:5520:3: a8_0= parse_org_emftext_language_xpath2_NodeTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralReverseStep4467);
            a8_0=parse_org_emftext_language_xpath2_NodeTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
            				startIncompleteElement(element);
            			}
            			if (a8_0 != null) {
            				if (a8_0 != null) {
            					Object value = a8_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__NODE_TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_2, a8_0, true);
            				copyLocalizationInfos(a8_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1415]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1416]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1417]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1418]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1419]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1420]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1421]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1422]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1423]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1424]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1425]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1426]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1427]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1428]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1429]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1430]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1431]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1432]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1433]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1434]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1435]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1436]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1437]);
            	}

            // Xpath2.g:5567:2: ( (a9_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==34) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // Xpath2.g:5568:3: (a9_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:5568:3: (a9_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:5569:4: a9_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_GeneralReverseStep4494);
            	    a9_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createGeneralReverseStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a9_0 != null) {
            	    					if (a9_0 != null) {
            	    						Object value = a9_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.GENERAL_REVERSE_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_30_0_0_3, a9_0, true);
            	    					copyLocalizationInfos(a9_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1438]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1439]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1440]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1441]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1442]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1443]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1444]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1445]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1446]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1447]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1448]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1449]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1450]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1451]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1452]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1453]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1454]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1455]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1456]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1457]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1458]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1459]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1460]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_org_emftext_language_xpath2_GeneralReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_GeneralReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_AbbrevReverseStep"
    // Xpath2.g:5619:1: parse_org_emftext_language_xpath2_AbbrevReverseStep returns [org.emftext.language.xpath2.AbbrevReverseStep element = null] : ( (a0= '..' ) ) ( (a3_0= parse_org_emftext_language_xpath2_Predicate ) )* ;
    public final org.emftext.language.xpath2.AbbrevReverseStep parse_org_emftext_language_xpath2_AbbrevReverseStep() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevReverseStep element =  null;

        int parse_org_emftext_language_xpath2_AbbrevReverseStep_StartIndex = input.index();

        Token a0=null;
        org.emftext.language.xpath2.Predicate a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Xpath2.g:5622:2: ( ( (a0= '..' ) ) ( (a3_0= parse_org_emftext_language_xpath2_Predicate ) )* )
            // Xpath2.g:5623:2: ( (a0= '..' ) ) ( (a3_0= parse_org_emftext_language_xpath2_Predicate ) )*
            {
            // Xpath2.g:5623:2: ( (a0= '..' ) )
            // Xpath2.g:5624:3: (a0= '..' )
            {
            // Xpath2.g:5624:3: (a0= '..' )
            // Xpath2.g:5625:4: a0= '..'
            {
            a0=(Token)match(input,20,FOLLOW_20_in_parse_org_emftext_language_xpath2_AbbrevReverseStep4544); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            				if (element == null) {
            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevReverseStep();
            					startIncompleteElement(element);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_31_0_0_0, null, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            				// set value of enumeration attribute
            				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevReverseStepKind().getEEnumLiteral(org.emftext.language.xpath2.AbbrevReverseStepKind.PARENT_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ABBREV_REVERSE_STEP__KIND), value);
            				completedElement(value, false);
            			}

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1461]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1462]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1463]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1464]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1465]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1466]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1467]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1468]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1469]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1470]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1471]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1472]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1473]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1474]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1475]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1476]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1477]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1478]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1479]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1480]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1481]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1482]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1483]);
            	}

            // Xpath2.g:5667:2: ( (a3_0= parse_org_emftext_language_xpath2_Predicate ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==34) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // Xpath2.g:5668:3: (a3_0= parse_org_emftext_language_xpath2_Predicate )
            	    {
            	    // Xpath2.g:5668:3: (a3_0= parse_org_emftext_language_xpath2_Predicate )
            	    // Xpath2.g:5669:4: a3_0= parse_org_emftext_language_xpath2_Predicate
            	    {
            	    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AbbrevReverseStep4574);
            	    a3_0=parse_org_emftext_language_xpath2_Predicate();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAbbrevReverseStep();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a3_0 != null) {
            	    					if (a3_0 != null) {
            	    						Object value = a3_0;
            	    						addObjectToList(element, org.emftext.language.xpath2.Xpath2Package.ABBREV_REVERSE_STEP__PREDICATE, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_31_0_0_1, a3_0, true);
            	    					copyLocalizationInfos(a3_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getAbbrevReverseStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1484]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1485]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1486]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1487]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1488]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1489]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1490]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1491]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1492]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1493]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1494]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1495]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1496]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1497]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1498]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1499]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1500]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1501]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1502]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1503]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1504]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1505]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1506]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_org_emftext_language_xpath2_AbbrevReverseStep_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AbbrevReverseStep"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeKindTest"
    // Xpath2.g:5719:1: parse_org_emftext_language_xpath2_NodeKindTest returns [org.emftext.language.xpath2.NodeKindTest element = null] : (a0_0= parse_org_emftext_language_xpath2_KindTest ) ;
    public final org.emftext.language.xpath2.NodeKindTest parse_org_emftext_language_xpath2_NodeKindTest() throws RecognitionException {
        org.emftext.language.xpath2.NodeKindTest element =  null;

        int parse_org_emftext_language_xpath2_NodeKindTest_StartIndex = input.index();

        org.emftext.language.xpath2.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Xpath2.g:5722:2: ( (a0_0= parse_org_emftext_language_xpath2_KindTest ) )
            // Xpath2.g:5723:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            {
            // Xpath2.g:5723:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            // Xpath2.g:5724:3: a0_0= parse_org_emftext_language_xpath2_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_NodeKindTest4619);
            a0_0=parse_org_emftext_language_xpath2_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNodeKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NODE_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_32_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1507]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1508]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1509]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1510]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1511]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1512]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1513]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1514]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1515]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1516]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1517]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1518]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1519]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1520]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1521]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1522]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1523]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1524]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1525]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1526]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1527]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1528]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1529]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_org_emftext_language_xpath2_NodeKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_QNameTest"
    // Xpath2.g:5773:1: parse_org_emftext_language_xpath2_QNameTest returns [org.emftext.language.xpath2.QNameTest element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) ;
    public final org.emftext.language.xpath2.QNameTest parse_org_emftext_language_xpath2_QNameTest() throws RecognitionException {
        org.emftext.language.xpath2.QNameTest element =  null;

        int parse_org_emftext_language_xpath2_QNameTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Xpath2.g:5776:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) )
            // Xpath2.g:5777:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            {
            // Xpath2.g:5777:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==QNAME) ) {
                alt49=1;
            }
            else if ( (LA49_0==NCNAME) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;

            }
            switch (alt49) {
                case 1 :
                    // Xpath2.g:5778:3: (a0= QNAME )
                    {
                    // Xpath2.g:5778:3: (a0= QNAME )
                    // Xpath2.g:5779:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_QNameTest4661); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQNameTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_33_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1530]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1531]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1532]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1533]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1534]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1535]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1536]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1537]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1538]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1539]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1540]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1541]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1542]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1543]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1544]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1545]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1546]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1547]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1548]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1549]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1550]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1551]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1552]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:5837:6: (a1= NCNAME )
                    {
                    // Xpath2.g:5837:6: (a1= NCNAME )
                    // Xpath2.g:5838:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QNameTest4699); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createQNameTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.QNAME_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_33_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1553]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1554]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1555]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1556]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1557]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1558]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1559]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1560]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1561]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1562]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1563]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1564]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1565]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1566]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1567]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1568]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1569]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1570]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1571]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1572]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1573]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1574]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1575]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1576]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1577]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1578]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1579]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1580]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1581]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1582]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1583]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1584]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1585]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1586]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1587]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1588]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1589]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1590]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1591]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1592]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1593]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1594]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1595]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1596]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1597]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1598]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_org_emftext_language_xpath2_QNameTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_QNameTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyWildcard"
    // Xpath2.g:5925:1: parse_org_emftext_language_xpath2_AnyWildcard returns [org.emftext.language.xpath2.AnyWildcard element = null] : a0= '*' ;
    public final org.emftext.language.xpath2.AnyWildcard parse_org_emftext_language_xpath2_AnyWildcard() throws RecognitionException {
        org.emftext.language.xpath2.AnyWildcard element =  null;

        int parse_org_emftext_language_xpath2_AnyWildcard_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Xpath2.g:5928:2: (a0= '*' )
            // Xpath2.g:5929:2: a0= '*'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyWildcard4748); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_34_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1599]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1600]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1601]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1602]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1603]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1604]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1605]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1606]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1607]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1608]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1609]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1610]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1611]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1612]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1613]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1614]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1615]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1616]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1617]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1618]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1619]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1620]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1621]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parse_org_emftext_language_xpath2_AnyWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_LocalNameWildcard"
    // Xpath2.g:5967:1: parse_org_emftext_language_xpath2_LocalNameWildcard returns [org.emftext.language.xpath2.LocalNameWildcard element = null] : (a0= NCNAME ) a1= ':' a2= '*' ;
    public final org.emftext.language.xpath2.LocalNameWildcard parse_org_emftext_language_xpath2_LocalNameWildcard() throws RecognitionException {
        org.emftext.language.xpath2.LocalNameWildcard element =  null;

        int parse_org_emftext_language_xpath2_LocalNameWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Xpath2.g:5970:2: ( (a0= NCNAME ) a1= ':' a2= '*' )
            // Xpath2.g:5971:2: (a0= NCNAME ) a1= ':' a2= '*'
            {
            // Xpath2.g:5971:2: (a0= NCNAME )
            // Xpath2.g:5972:3: a0= NCNAME
            {
            a0=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_LocalNameWildcard4781); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.LOCAL_NAME_WILDCARD__NAMESPACE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.LOCAL_NAME_WILDCARD__NAMESPACE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1622]);
            	}

            a1=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath2_LocalNameWildcard4802); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1623]);
            	}

            a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_LocalNameWildcard4816); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createLocalNameWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_35_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1624]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1625]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1626]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1627]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1628]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1629]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1630]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1631]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1632]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1633]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1634]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1635]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1636]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1637]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1638]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1639]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1640]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1641]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1642]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1643]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1644]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1645]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1646]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parse_org_emftext_language_xpath2_LocalNameWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_LocalNameWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_NamespaceWildcard"
    // Xpath2.g:6059:1: parse_org_emftext_language_xpath2_NamespaceWildcard returns [org.emftext.language.xpath2.NamespaceWildcard element = null] : a0= '*' a1= ':' (a2= NCNAME ) ;
    public final org.emftext.language.xpath2.NamespaceWildcard parse_org_emftext_language_xpath2_NamespaceWildcard() throws RecognitionException {
        org.emftext.language.xpath2.NamespaceWildcard element =  null;

        int parse_org_emftext_language_xpath2_NamespaceWildcard_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Xpath2.g:6062:2: (a0= '*' a1= ':' (a2= NCNAME ) )
            // Xpath2.g:6063:2: a0= '*' a1= ':' (a2= NCNAME )
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_NamespaceWildcard4845); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_36_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1647]);
            	}

            a1=(Token)match(input,23,FOLLOW_23_in_parse_org_emftext_language_xpath2_NamespaceWildcard4859); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_36_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1648]);
            	}

            // Xpath2.g:6091:2: (a2= NCNAME )
            // Xpath2.g:6092:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NamespaceWildcard4877); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNamespaceWildcard();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAMESPACE_WILDCARD__LOCAL_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAMESPACE_WILDCARD__LOCAL_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_36_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1649]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1650]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1651]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1652]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1653]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1654]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1655]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1656]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1657]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1658]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1659]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1660]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1661]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1662]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1663]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1664]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1665]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1666]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1667]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1668]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1669]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1670]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1671]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parse_org_emftext_language_xpath2_NamespaceWildcard_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NamespaceWildcard"



    // $ANTLR start "parse_org_emftext_language_xpath2_Predicate"
    // Xpath2.g:6151:1: parse_org_emftext_language_xpath2_Predicate returns [org.emftext.language.xpath2.Predicate element = null] : a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']' ;
    public final org.emftext.language.xpath2.Predicate parse_org_emftext_language_xpath2_Predicate() throws RecognitionException {
        org.emftext.language.xpath2.Predicate element =  null;

        int parse_org_emftext_language_xpath2_Predicate_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Xpath2.g:6154:2: (a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']' )
            // Xpath2.g:6155:2: a0= '[' (a1_0= parse_org_emftext_language_xpath2_Expr ) a2= ']'
            {
            a0=(Token)match(input,34,FOLLOW_34_in_parse_org_emftext_language_xpath2_Predicate4913); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1672]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1673]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1674]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1675]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1676]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1677]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1678]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1679]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1680]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1681]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1682]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1683]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1684]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1685]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1686]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1687]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1688]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1689]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1690]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPredicate(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1691]);
            	}

            // Xpath2.g:6188:2: (a1_0= parse_org_emftext_language_xpath2_Expr )
            // Xpath2.g:6189:3: a1_0= parse_org_emftext_language_xpath2_Expr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_Predicate4931);
            a1_0=parse_org_emftext_language_xpath2_Expr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.PREDICATE__EXPR), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1692]);
            	}

            a2=(Token)match(input,35,FOLLOW_35_in_parse_org_emftext_language_xpath2_Predicate4949); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPredicate();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_37_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1693]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1694]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1695]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1696]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1697]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1698]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1699]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1700]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1701]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1702]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1703]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1704]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1705]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1706]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1707]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1708]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1709]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1710]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1711]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1712]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1713]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1714]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1715]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parse_org_emftext_language_xpath2_Predicate_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Predicate"



    // $ANTLR start "parse_org_emftext_language_xpath2_VarRef"
    // Xpath2.g:6252:1: parse_org_emftext_language_xpath2_VarRef returns [org.emftext.language.xpath2.VarRef element = null] : a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) ;
    public final org.emftext.language.xpath2.VarRef parse_org_emftext_language_xpath2_VarRef() throws RecognitionException {
        org.emftext.language.xpath2.VarRef element =  null;

        int parse_org_emftext_language_xpath2_VarRef_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Xpath2.g:6255:2: (a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) ) )
            // Xpath2.g:6256:2: a0= '$' ( (a1= QNAME ) | (a2= NCNAME ) )
            {
            a0=(Token)match(input,12,FOLLOW_12_in_parse_org_emftext_language_xpath2_VarRef4978); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarRef();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1716]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1717]);
            	}

            // Xpath2.g:6271:2: ( (a1= QNAME ) | (a2= NCNAME ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==QNAME) ) {
                alt50=1;
            }
            else if ( (LA50_0==NCNAME) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }
            switch (alt50) {
                case 1 :
                    // Xpath2.g:6272:3: (a1= QNAME )
                    {
                    // Xpath2.g:6272:3: (a1= QNAME )
                    // Xpath2.g:6273:4: a1= QNAME
                    {
                    a1=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_VarRef5001); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarRef();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_REF__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_REF__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_1_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1718]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1719]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1720]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1721]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1722]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1723]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1724]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1725]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1726]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1727]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1728]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1729]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1730]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1731]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1732]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1733]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1734]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1735]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1736]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1737]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1738]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1739]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1740]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:6331:6: (a2= NCNAME )
                    {
                    // Xpath2.g:6331:6: (a2= NCNAME )
                    // Xpath2.g:6332:4: a2= NCNAME
                    {
                    a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_VarRef5039); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createVarRef();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_REF__VAR_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.VAR_REF__VAR_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_38_0_0_1_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1741]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1742]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1743]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1744]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1745]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1746]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1747]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1748]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1749]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1750]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1751]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1752]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1753]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1754]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1755]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1756]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1757]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1758]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1759]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1760]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1761]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1762]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1763]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1764]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1765]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1766]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1767]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1768]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1769]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1770]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1771]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1772]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1773]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1774]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1775]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1776]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1777]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1778]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1779]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1780]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1781]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1782]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1783]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1784]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1785]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1786]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parse_org_emftext_language_xpath2_VarRef_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_VarRef"



    // $ANTLR start "parse_org_emftext_language_xpath2_ParenthesizedExpr"
    // Xpath2.g:6419:1: parse_org_emftext_language_xpath2_ParenthesizedExpr returns [org.emftext.language.xpath2.ParenthesizedExpr element = null] : a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')' ;
    public final org.emftext.language.xpath2.ParenthesizedExpr parse_org_emftext_language_xpath2_ParenthesizedExpr() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr element =  null;

        int parse_org_emftext_language_xpath2_ParenthesizedExpr_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        org.emftext.language.xpath2.Expr a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Xpath2.g:6422:2: (a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')' )
            // Xpath2.g:6423:2: a0= '(' ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )? a2= ')'
            {
            a0=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_ParenthesizedExpr5088); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1787]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1788]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1789]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1790]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1791]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1792]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1793]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1794]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1795]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1796]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1797]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1798]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1799]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1800]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1801]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1802]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1803]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1804]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1805]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getParenthesizedExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1806]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1807]);
            	}

            // Xpath2.g:6457:2: ( (a1_0= parse_org_emftext_language_xpath2_Expr ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0 >= DECIMAL_LITERAL && LA51_0 <= STRING_LITERAL)||(LA51_0 >= 12 && LA51_0 <= 13)||(LA51_0 >= 15 && LA51_0 <= 16)||(LA51_0 >= 18 && LA51_0 <= 22)||LA51_0==33||(LA51_0 >= 36 && LA51_0 <= 37)||LA51_0==40||(LA51_0 >= 43 && LA51_0 <= 46)||(LA51_0 >= 48 && LA51_0 <= 49)||LA51_0==53||(LA51_0 >= 55 && LA51_0 <= 57)||LA51_0==61||LA51_0==70||LA51_0==72||(LA51_0 >= 75 && LA51_0 <= 78)||(LA51_0 >= 81 && LA51_0 <= 85)) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // Xpath2.g:6458:3: (a1_0= parse_org_emftext_language_xpath2_Expr )
                    {
                    // Xpath2.g:6458:3: (a1_0= parse_org_emftext_language_xpath2_Expr )
                    // Xpath2.g:6459:4: a1_0= parse_org_emftext_language_xpath2_Expr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_ParenthesizedExpr5111);
                    a1_0=parse_org_emftext_language_xpath2_Expr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
                    					startIncompleteElement(element);
                    				}
                    				if (a1_0 != null) {
                    					if (a1_0 != null) {
                    						Object value = a1_0;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.PARENTHESIZED_EXPR__EXPR), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_1, a1_0, true);
                    					copyLocalizationInfos(a1_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1808]);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_ParenthesizedExpr5137); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createParenthesizedExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_39_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1809]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1810]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1811]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1812]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1813]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1814]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1815]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1816]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1817]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1818]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1819]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1820]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1821]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1822]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1823]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1824]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1825]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1826]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1827]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1828]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1829]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1830]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1831]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parse_org_emftext_language_xpath2_ParenthesizedExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ParenthesizedExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_ContextItemExpr"
    // Xpath2.g:6523:1: parse_org_emftext_language_xpath2_ContextItemExpr returns [org.emftext.language.xpath2.ContextItemExpr element = null] : a0= '.' ;
    public final org.emftext.language.xpath2.ContextItemExpr parse_org_emftext_language_xpath2_ContextItemExpr() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr element =  null;

        int parse_org_emftext_language_xpath2_ContextItemExpr_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Xpath2.g:6526:2: (a0= '.' )
            // Xpath2.g:6527:2: a0= '.'
            {
            a0=(Token)match(input,19,FOLLOW_19_in_parse_org_emftext_language_xpath2_ContextItemExpr5166); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createContextItemExpr();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_40_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1832]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1833]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1834]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1835]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1836]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1837]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1838]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1839]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1840]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1841]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1842]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1843]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1844]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1845]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1846]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1847]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1848]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1849]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1850]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1851]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1852]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1853]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1854]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parse_org_emftext_language_xpath2_ContextItemExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ContextItemExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_SingleType"
    // Xpath2.g:6565:1: parse_org_emftext_language_xpath2_SingleType returns [org.emftext.language.xpath2.SingleType element = null] : (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? ) ;
    public final org.emftext.language.xpath2.SingleType parse_org_emftext_language_xpath2_SingleType() throws RecognitionException {
        org.emftext.language.xpath2.SingleType element =  null;

        int parse_org_emftext_language_xpath2_SingleType_StartIndex = input.index();

        Token a1=null;
        org.emftext.language.xpath2.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Xpath2.g:6568:2: ( (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? ) )
            // Xpath2.g:6569:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ( (a1= '?' )? )
            {
            // Xpath2.g:6569:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            // Xpath2.g:6570:3: a0_0= parse_org_emftext_language_xpath2_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_SingleType5199);
            a0_0=parse_org_emftext_language_xpath2_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleType();
            				startIncompleteElement(element);
            				// initialize boolean attribute
            				{
            					Object value = false;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
            				}
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1855]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1856]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1857]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1858]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1859]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1860]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1861]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1862]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1863]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1864]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1865]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1866]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1867]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1868]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1869]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1870]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1871]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1872]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1873]);
            	}

            // Xpath2.g:6618:2: ( (a1= '?' )? )
            // Xpath2.g:6619:3: (a1= '?' )?
            {
            // Xpath2.g:6619:3: (a1= '?' )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==32) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // Xpath2.g:6620:4: a1= '?'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath2_SingleType5226); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSingleType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_41_0_0_1, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SINGLE_TYPE__OPTIONAL), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1874]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1875]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1876]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1877]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1878]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1879]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1880]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1881]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1882]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1883]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1884]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1885]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1886]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1887]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1888]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1889]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1890]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1891]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parse_org_emftext_language_xpath2_SingleType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SingleType"



    // $ANTLR start "parse_org_emftext_language_xpath2_EmptySequenceType"
    // Xpath2.g:6663:1: parse_org_emftext_language_xpath2_EmptySequenceType returns [org.emftext.language.xpath2.EmptySequenceType element = null] : a0= 'empty-sequence' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.EmptySequenceType parse_org_emftext_language_xpath2_EmptySequenceType() throws RecognitionException {
        org.emftext.language.xpath2.EmptySequenceType element =  null;

        int parse_org_emftext_language_xpath2_EmptySequenceType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Xpath2.g:6666:2: (a0= 'empty-sequence' a1= '(' a2= ')' )
            // Xpath2.g:6667:2: a0= 'empty-sequence' a1= '(' a2= ')'
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_org_emftext_language_xpath2_EmptySequenceType5262); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1892]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_EmptySequenceType5276); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1893]);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_EmptySequenceType5290); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createEmptySequenceType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_42_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1894]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1895]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1896]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1897]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1898]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1899]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1900]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1901]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1902]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1903]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1904]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1905]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1906]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1907]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1908]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1909]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parse_org_emftext_language_xpath2_EmptySequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_EmptySequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemSequenceType"
    // Xpath2.g:6726:1: parse_org_emftext_language_xpath2_ItemSequenceType returns [org.emftext.language.xpath2.ItemSequenceType element = null] : (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) ;
    public final org.emftext.language.xpath2.ItemSequenceType parse_org_emftext_language_xpath2_ItemSequenceType() throws RecognitionException {
        org.emftext.language.xpath2.ItemSequenceType element =  null;

        int parse_org_emftext_language_xpath2_ItemSequenceType_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        org.emftext.language.xpath2.ItemType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Xpath2.g:6729:2: ( (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? ) )
            // Xpath2.g:6730:2: (a0_0= parse_org_emftext_language_xpath2_ItemType ) ( (a1= '?' |a2= '*' |a3= '+' )? )
            {
            // Xpath2.g:6730:2: (a0_0= parse_org_emftext_language_xpath2_ItemType )
            // Xpath2.g:6731:3: a0_0= parse_org_emftext_language_xpath2_ItemType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemType_in_parse_org_emftext_language_xpath2_ItemSequenceType5323);
            a0_0=parse_org_emftext_language_xpath2_ItemType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
            				startIncompleteElement(element);
            				// initialize enumeration attribute
            				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
            				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__ITEM_TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1910]);
            	}

            // Xpath2.g:6759:2: ( (a1= '?' |a2= '*' |a3= '+' )? )
            // Xpath2.g:6760:3: (a1= '?' |a2= '*' |a3= '+' )?
            {
            // Xpath2.g:6760:3: (a1= '?' |a2= '*' |a3= '+' )?
            int alt53=4;
            switch ( input.LA(1) ) {
                case 32:
                    {
                    alt53=1;
                    }
                    break;
                case 15:
                    {
                    int LA53_2 = input.LA(2);

                    if ( (synpred93_Xpath2()) ) {
                        alt53=2;
                    }
                    }
                    break;
                case 16:
                    {
                    int LA53_3 = input.LA(2);

                    if ( (synpred94_Xpath2()) ) {
                        alt53=3;
                    }
                    }
                    break;
            }

            switch (alt53) {
                case 1 :
                    // Xpath2.g:6761:4: a1= '?'
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath2_ItemSequenceType5350); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.OPTIONAL_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 2 :
                    // Xpath2.g:6777:8: a2= '*'
                    {
                    a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_ItemSequenceType5365); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.STAR_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;
                case 3 :
                    // Xpath2.g:6793:8: a3= '+'
                    {
                    a3=(Token)match(input,16,FOLLOW_16_in_parse_org_emftext_language_xpath2_ItemSequenceType5380); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemSequenceType();
                    					startIncompleteElement(element);
                    					// initialize enumeration attribute
                    					Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.MANDATORY_VALUE).getInstance();
                    					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_43_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    				// set value of enumeration attribute
                    				Object value = org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getOccurrenceIndicatorKind().getEEnumLiteral(org.emftext.language.xpath2.OccurrenceIndicatorKind.PLUS_VALUE).getInstance();
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_SEQUENCE_TYPE__OCCURRENCE), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1911]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1912]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1913]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1914]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1915]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1916]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1917]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1918]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1919]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1920]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1921]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1922]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1923]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1924]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1925]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1926]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parse_org_emftext_language_xpath2_ItemSequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemSequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemKindTest"
    // Xpath2.g:6832:1: parse_org_emftext_language_xpath2_ItemKindTest returns [org.emftext.language.xpath2.ItemKindTest element = null] : (a0_0= parse_org_emftext_language_xpath2_KindTest ) ;
    public final org.emftext.language.xpath2.ItemKindTest parse_org_emftext_language_xpath2_ItemKindTest() throws RecognitionException {
        org.emftext.language.xpath2.ItemKindTest element =  null;

        int parse_org_emftext_language_xpath2_ItemKindTest_StartIndex = input.index();

        org.emftext.language.xpath2.KindTest a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Xpath2.g:6835:2: ( (a0_0= parse_org_emftext_language_xpath2_KindTest ) )
            // Xpath2.g:6836:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            {
            // Xpath2.g:6836:2: (a0_0= parse_org_emftext_language_xpath2_KindTest )
            // Xpath2.g:6837:3: a0_0= parse_org_emftext_language_xpath2_KindTest
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_ItemKindTest5420);
            a0_0=parse_org_emftext_language_xpath2_KindTest();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createItemKindTest();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ITEM_KIND_TEST__TEST), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_44_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1927]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parse_org_emftext_language_xpath2_ItemKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyItemType"
    // Xpath2.g:6864:1: parse_org_emftext_language_xpath2_AnyItemType returns [org.emftext.language.xpath2.AnyItemType element = null] : a0= 'item' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.AnyItemType parse_org_emftext_language_xpath2_AnyItemType() throws RecognitionException {
        org.emftext.language.xpath2.AnyItemType element =  null;

        int parse_org_emftext_language_xpath2_AnyItemType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Xpath2.g:6867:2: (a0= 'item' a1= '(' a2= ')' )
            // Xpath2.g:6868:2: a0= 'item' a1= '(' a2= ')'
            {
            a0=(Token)match(input,66,FOLLOW_66_in_parse_org_emftext_language_xpath2_AnyItemType5453); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_45_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1928]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_AnyItemType5467); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_45_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1929]);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_AnyItemType5481); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyItemType();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_45_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1930]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_org_emftext_language_xpath2_AnyItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyItemType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AtomicItemType"
    // Xpath2.g:6912:1: parse_org_emftext_language_xpath2_AtomicItemType returns [org.emftext.language.xpath2.AtomicItemType element = null] : (a0_0= parse_org_emftext_language_xpath2_AtomicType ) ;
    public final org.emftext.language.xpath2.AtomicItemType parse_org_emftext_language_xpath2_AtomicItemType() throws RecognitionException {
        org.emftext.language.xpath2.AtomicItemType element =  null;

        int parse_org_emftext_language_xpath2_AtomicItemType_StartIndex = input.index();

        org.emftext.language.xpath2.AtomicType a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Xpath2.g:6915:2: ( (a0_0= parse_org_emftext_language_xpath2_AtomicType ) )
            // Xpath2.g:6916:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            {
            // Xpath2.g:6916:2: (a0_0= parse_org_emftext_language_xpath2_AtomicType )
            // Xpath2.g:6917:3: a0_0= parse_org_emftext_language_xpath2_AtomicType
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_AtomicItemType5514);
            a0_0=parse_org_emftext_language_xpath2_AtomicType();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAtomicItemType();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_ITEM_TYPE__TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_46_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1931]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_org_emftext_language_xpath2_AtomicItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AtomicItemType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AtomicType"
    // Xpath2.g:6944:1: parse_org_emftext_language_xpath2_AtomicType returns [org.emftext.language.xpath2.AtomicType element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) ;
    public final org.emftext.language.xpath2.AtomicType parse_org_emftext_language_xpath2_AtomicType() throws RecognitionException {
        org.emftext.language.xpath2.AtomicType element =  null;

        int parse_org_emftext_language_xpath2_AtomicType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Xpath2.g:6947:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) )
            // Xpath2.g:6948:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            {
            // Xpath2.g:6948:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==QNAME) ) {
                alt54=1;
            }
            else if ( (LA54_0==NCNAME) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;

            }
            switch (alt54) {
                case 1 :
                    // Xpath2.g:6949:3: (a0= QNAME )
                    {
                    // Xpath2.g:6949:3: (a0= QNAME )
                    // Xpath2.g:6950:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_AtomicType5556); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAtomicType();
                    					startIncompleteElement(element);
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_47_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1932]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1933]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1934]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1935]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1936]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1937]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1938]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1939]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1940]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1941]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1942]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1943]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1944]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1945]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1946]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1947]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1948]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1949]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1950]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1951]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:7005:6: (a1= NCNAME )
                    {
                    // Xpath2.g:7005:6: (a1= NCNAME )
                    // Xpath2.g:7006:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_AtomicType5594); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAtomicType();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_47_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1952]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1953]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1954]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1955]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1956]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1957]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1958]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1959]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1960]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1961]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1962]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1963]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1964]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1965]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1966]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1967]);
                    			addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1968]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1969]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1970]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1971]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1972]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1973]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1974]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1975]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1976]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1977]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1978]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1979]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1980]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1981]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1982]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1983]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1984]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1985]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1986]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1987]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1988]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1989]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1990]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1991]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_org_emftext_language_xpath2_AtomicType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AtomicType"



    // $ANTLR start "parse_org_emftext_language_xpath2_OptionalAtomicType"
    // Xpath2.g:7087:1: parse_org_emftext_language_xpath2_OptionalAtomicType returns [org.emftext.language.xpath2.OptionalAtomicType element = null] : ( (a0= QNAME ) | (a1= NCNAME ) ) ( (a2= '?' )? ) ;
    public final org.emftext.language.xpath2.OptionalAtomicType parse_org_emftext_language_xpath2_OptionalAtomicType() throws RecognitionException {
        org.emftext.language.xpath2.OptionalAtomicType element =  null;

        int parse_org_emftext_language_xpath2_OptionalAtomicType_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Xpath2.g:7090:2: ( ( (a0= QNAME ) | (a1= NCNAME ) ) ( (a2= '?' )? ) )
            // Xpath2.g:7091:2: ( (a0= QNAME ) | (a1= NCNAME ) ) ( (a2= '?' )? )
            {
            // Xpath2.g:7091:2: ( (a0= QNAME ) | (a1= NCNAME ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==QNAME) ) {
                alt55=1;
            }
            else if ( (LA55_0==NCNAME) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }
            switch (alt55) {
                case 1 :
                    // Xpath2.g:7092:3: (a0= QNAME )
                    {
                    // Xpath2.g:7092:3: (a0= QNAME )
                    // Xpath2.g:7093:4: a0= QNAME
                    {
                    a0=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_OptionalAtomicType5652); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOptionalAtomicType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				if (a0 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_48_0_0_0_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1992]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1993]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1994]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:7136:6: (a1= NCNAME )
                    {
                    // Xpath2.g:7136:6: (a1= NCNAME )
                    // Xpath2.g:7137:4: a1= NCNAME
                    {
                    a1=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_OptionalAtomicType5690); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOptionalAtomicType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				if (a1 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_48_0_0_0_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1995]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1996]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1997]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1998]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[1999]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2000]);
            	}

            // Xpath2.g:7187:2: ( (a2= '?' )? )
            // Xpath2.g:7188:3: (a2= '?' )?
            {
            // Xpath2.g:7188:3: (a2= '?' )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==32) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // Xpath2.g:7189:4: a2= '?'
                    {
                    a2=(Token)match(input,32,FOLLOW_32_in_parse_org_emftext_language_xpath2_OptionalAtomicType5733); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createOptionalAtomicType();
                    					startIncompleteElement(element);
                    					// initialize boolean attribute
                    					{
                    						Object value = false;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    					}
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_48_0_0_1, true, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    				// set value of boolean attribute
                    				Object value = true;
                    				element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.OPTIONAL_ATOMIC_TYPE__OPTIONAL), value);
                    				completedElement(value, false);
                    			}

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2001]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2002]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_org_emftext_language_xpath2_OptionalAtomicType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_OptionalAtomicType"



    // $ANTLR start "parse_org_emftext_language_xpath2_AnyKindTest"
    // Xpath2.g:7216:1: parse_org_emftext_language_xpath2_AnyKindTest returns [org.emftext.language.xpath2.AnyKindTest element = null] : a0= 'node' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.AnyKindTest parse_org_emftext_language_xpath2_AnyKindTest() throws RecognitionException {
        org.emftext.language.xpath2.AnyKindTest element =  null;

        int parse_org_emftext_language_xpath2_AnyKindTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Xpath2.g:7219:2: (a0= 'node' a1= '(' a2= ')' )
            // Xpath2.g:7220:2: a0= 'node' a1= '(' a2= ')'
            {
            a0=(Token)match(input,72,FOLLOW_72_in_parse_org_emftext_language_xpath2_AnyKindTest5769); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2003]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_AnyKindTest5783); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2004]);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_AnyKindTest5797); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAnyKindTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_49_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2005]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2006]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2007]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2008]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2009]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2010]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2011]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2012]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2013]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2014]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2015]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2016]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2017]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2018]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2019]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2020]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2021]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2022]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2023]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2024]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2025]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2026]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2027]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2028]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_org_emftext_language_xpath2_AnyKindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AnyKindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_DocumentTest"
    // Xpath2.g:7287:1: parse_org_emftext_language_xpath2_DocumentTest returns [org.emftext.language.xpath2.DocumentTest element = null] : a0= 'document-node' a1= '(' ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )? a3= ')' ;
    public final org.emftext.language.xpath2.DocumentTest parse_org_emftext_language_xpath2_DocumentTest() throws RecognitionException {
        org.emftext.language.xpath2.DocumentTest element =  null;

        int parse_org_emftext_language_xpath2_DocumentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        org.emftext.language.xpath2.ElementTest a2_0 =null;

        org.emftext.language.xpath2.SchemaElementTest a2_1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Xpath2.g:7290:2: (a0= 'document-node' a1= '(' ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )? a3= ')' )
            // Xpath2.g:7291:2: a0= 'document-node' a1= '(' ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )? a3= ')'
            {
            a0=(Token)match(input,48,FOLLOW_48_in_parse_org_emftext_language_xpath2_DocumentTest5826); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2029]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_DocumentTest5840); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2030]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2031]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2032]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getDocumentTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2033]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2034]);
            	}

            // Xpath2.g:7323:2: ( (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==49||LA58_0==82) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // Xpath2.g:7324:3: (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest )
                    {
                    // Xpath2.g:7324:3: (a2_0= parse_org_emftext_language_xpath2_ElementTest |a2_1= parse_org_emftext_language_xpath2_SchemaElementTest )
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==49) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==82) ) {
                        alt57=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 0, input);

                        throw nvae;

                    }
                    switch (alt57) {
                        case 1 :
                            // Xpath2.g:7325:4: a2_0= parse_org_emftext_language_xpath2_ElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_DocumentTest5863);
                            a2_0=parse_org_emftext_language_xpath2_ElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
                            					startIncompleteElement(element);
                            				}
                            				if (a2_0 != null) {
                            					if (a2_0 != null) {
                            						Object value = a2_0;
                            						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOCUMENT_TEST__TEST), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_2, a2_0, true);
                            					copyLocalizationInfos(a2_0, element);
                            				}
                            			}

                            }
                            break;
                        case 2 :
                            // Xpath2.g:7344:8: a2_1= parse_org_emftext_language_xpath2_SchemaElementTest
                            {
                            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_DocumentTest5880);
                            a2_1=parse_org_emftext_language_xpath2_SchemaElementTest();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            				if (terminateParsing) {
                            					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            				}
                            				if (element == null) {
                            					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
                            					startIncompleteElement(element);
                            				}
                            				if (a2_1 != null) {
                            					if (a2_1 != null) {
                            						Object value = a2_1;
                            						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOCUMENT_TEST__TEST), value);
                            						completedElement(value, true);
                            					}
                            					collectHiddenTokens(element);
                            					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_2, a2_1, true);
                            					copyLocalizationInfos(a2_1, element);
                            				}
                            			}

                            }
                            break;

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2035]);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_DocumentTest5906); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDocumentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_50_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2036]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2037]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2038]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2039]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2040]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2041]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2042]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2043]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2044]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2045]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2046]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2047]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2048]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2049]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2050]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2051]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2052]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2053]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2054]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2055]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2056]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2057]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2058]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2059]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_org_emftext_language_xpath2_DocumentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DocumentTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_TextTest"
    // Xpath2.g:7409:1: parse_org_emftext_language_xpath2_TextTest returns [org.emftext.language.xpath2.TextTest element = null] : a0= 'text' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.TextTest parse_org_emftext_language_xpath2_TextTest() throws RecognitionException {
        org.emftext.language.xpath2.TextTest element =  null;

        int parse_org_emftext_language_xpath2_TextTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }

            // Xpath2.g:7412:2: (a0= 'text' a1= '(' a2= ')' )
            // Xpath2.g:7413:2: a0= 'text' a1= '(' a2= ')'
            {
            a0=(Token)match(input,85,FOLLOW_85_in_parse_org_emftext_language_xpath2_TextTest5935); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2060]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_TextTest5949); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2061]);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_TextTest5963); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createTextTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_51_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2062]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2063]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2064]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2065]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2066]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2067]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2068]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2069]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2070]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2071]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2072]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2073]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2074]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2075]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2076]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2077]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2078]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2079]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2080]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2081]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2082]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2083]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2084]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2085]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 53, parse_org_emftext_language_xpath2_TextTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_TextTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_CommentTest"
    // Xpath2.g:7480:1: parse_org_emftext_language_xpath2_CommentTest returns [org.emftext.language.xpath2.CommentTest element = null] : a0= 'comment' a1= '(' a2= ')' ;
    public final org.emftext.language.xpath2.CommentTest parse_org_emftext_language_xpath2_CommentTest() throws RecognitionException {
        org.emftext.language.xpath2.CommentTest element =  null;

        int parse_org_emftext_language_xpath2_CommentTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return element; }

            // Xpath2.g:7483:2: (a0= 'comment' a1= '(' a2= ')' )
            // Xpath2.g:7484:2: a0= 'comment' a1= '(' a2= ')'
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_org_emftext_language_xpath2_CommentTest5992); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2086]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_CommentTest6006); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2087]);
            	}

            a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_CommentTest6020); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createCommentTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_52_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2088]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2089]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2090]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2091]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2092]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2093]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2094]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2095]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2096]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2097]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2098]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2099]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2100]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2101]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2102]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2103]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2104]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2105]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2106]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2107]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2108]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2109]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2110]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2111]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 54, parse_org_emftext_language_xpath2_CommentTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_CommentTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_PITest"
    // Xpath2.g:7551:1: parse_org_emftext_language_xpath2_PITest returns [org.emftext.language.xpath2.PITest element = null] : (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_NCNamePITest |c1= parse_org_emftext_language_xpath2_StringLiteralPITest );
    public final org.emftext.language.xpath2.PITest parse_org_emftext_language_xpath2_PITest() throws RecognitionException {
        org.emftext.language.xpath2.PITest element =  null;

        int parse_org_emftext_language_xpath2_PITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.NCNamePITest c0 =null;

        org.emftext.language.xpath2.StringLiteralPITest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return element; }

            // Xpath2.g:7554:2: (a0= 'processing-instruction' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_NCNamePITest |c1= parse_org_emftext_language_xpath2_StringLiteralPITest )
            int alt59=3;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==78) ) {
                int LA59_1 = input.LA(2);

                if ( (LA59_1==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt59=1;
                        }
                        break;
                    case NCNAME:
                        {
                        alt59=2;
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        alt59=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 59, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 59, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }
            switch (alt59) {
                case 1 :
                    // Xpath2.g:7555:2: a0= 'processing-instruction' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath2_PITest6049); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2112]);
                    	}

                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_PITest6063); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2113]);
                    	}

                    a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_PITest6077); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createPITest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_53_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2114]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2115]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2116]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2117]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2118]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2119]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2120]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2121]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2122]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2123]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2124]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2125]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2126]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2127]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2128]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2129]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2130]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2131]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2132]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2133]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2134]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2135]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2136]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2137]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:7622:2: c0= parse_org_emftext_language_xpath2_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_PITest6096);
                    c0=parse_org_emftext_language_xpath2_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7623:4: c1= parse_org_emftext_language_xpath2_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_PITest6106);
                    c1=parse_org_emftext_language_xpath2_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 55, parse_org_emftext_language_xpath2_PITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NCNamePITest"
    // Xpath2.g:7627:1: parse_org_emftext_language_xpath2_NCNamePITest returns [org.emftext.language.xpath2.NCNamePITest element = null] : a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' ;
    public final org.emftext.language.xpath2.NCNamePITest parse_org_emftext_language_xpath2_NCNamePITest() throws RecognitionException {
        org.emftext.language.xpath2.NCNamePITest element =  null;

        int parse_org_emftext_language_xpath2_NCNamePITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return element; }

            // Xpath2.g:7630:2: (a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')' )
            // Xpath2.g:7631:2: a0= 'processing-instruction' a1= '(' (a2= NCNAME ) a3= ')'
            {
            a0=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath2_NCNamePITest6131); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2138]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_NCNamePITest6145); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2139]);
            	}

            // Xpath2.g:7659:2: (a2= NCNAME )
            // Xpath2.g:7660:3: a2= NCNAME
            {
            a2=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NCNamePITest6163); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NC_NAME_PI_TEST__NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NC_NAME_PI_TEST__NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2140]);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_NCNamePITest6184); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNCNamePITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_54_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2141]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2142]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2143]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2144]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2145]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2146]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2147]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2148]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2149]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2150]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2151]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2152]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2153]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2154]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2155]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2156]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2157]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2158]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2159]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2160]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2161]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2162]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2163]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2164]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 56, parse_org_emftext_language_xpath2_NCNamePITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NCNamePITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_StringLiteralPITest"
    // Xpath2.g:7734:1: parse_org_emftext_language_xpath2_StringLiteralPITest returns [org.emftext.language.xpath2.StringLiteralPITest element = null] : a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' ;
    public final org.emftext.language.xpath2.StringLiteralPITest parse_org_emftext_language_xpath2_StringLiteralPITest() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteralPITest element =  null;

        int parse_org_emftext_language_xpath2_StringLiteralPITest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return element; }

            // Xpath2.g:7737:2: (a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')' )
            // Xpath2.g:7738:2: a0= 'processing-instruction' a1= '(' (a2= STRING_LITERAL ) a3= ')'
            {
            a0=(Token)match(input,78,FOLLOW_78_in_parse_org_emftext_language_xpath2_StringLiteralPITest6213); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2165]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_StringLiteralPITest6227); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2166]);
            	}

            // Xpath2.g:7766:2: (a2= STRING_LITERAL )
            // Xpath2.g:7767:3: a2= STRING_LITERAL
            {
            a2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteralPITest6245); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				org.emftext.language.xpath2.StringLiteral proxy = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteral();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ContextDependentURIFragmentFactory<org.emftext.language.xpath2.StringLiteralPITest, org.emftext.language.xpath2.StringLiteral>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getStringLiteralPITestLiteralReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL_PI_TEST__LITERAL), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_2, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2167]);
            	}

            a3=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_StringLiteralPITest6266); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteralPITest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_55_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2168]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2169]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2170]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2171]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2172]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2173]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2174]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2175]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2176]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2177]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2178]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2179]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2180]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2181]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2182]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2183]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2184]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2185]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2186]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2187]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2188]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2189]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2190]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2191]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 57, parse_org_emftext_language_xpath2_StringLiteralPITest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StringLiteralPITest"



    // $ANTLR start "parse_org_emftext_language_xpath2_AttributeTest"
    // Xpath2.g:7845:1: parse_org_emftext_language_xpath2_AttributeTest returns [org.emftext.language.xpath2.AttributeTest element = null] : (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardAttributeTest |c1= parse_org_emftext_language_xpath2_NameAttributeTest );
    public final org.emftext.language.xpath2.AttributeTest parse_org_emftext_language_xpath2_AttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.AttributeTest element =  null;

        int parse_org_emftext_language_xpath2_AttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.WildcardAttributeTest c0 =null;

        org.emftext.language.xpath2.NameAttributeTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return element; }

            // Xpath2.g:7848:2: (a0= 'attribute' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardAttributeTest |c1= parse_org_emftext_language_xpath2_NameAttributeTest )
            int alt60=3;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==40) ) {
                int LA60_1 = input.LA(2);

                if ( (LA60_1==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt60=1;
                        }
                        break;
                    case 15:
                        {
                        alt60=2;
                        }
                        break;
                    case NCNAME:
                    case QNAME:
                        {
                        alt60=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;

            }
            switch (alt60) {
                case 1 :
                    // Xpath2.g:7849:2: a0= 'attribute' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath2_AttributeTest6295); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2192]);
                    	}

                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_AttributeTest6309); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2193]);
                    	}

                    a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_AttributeTest6323); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createAttributeTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_56_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2194]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2195]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2196]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2197]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2198]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2199]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2200]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2201]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2202]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2203]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2204]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2205]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2206]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2207]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2208]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2209]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2210]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2211]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2212]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2213]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2214]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2215]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2216]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2217]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:7916:2: c0= parse_org_emftext_language_xpath2_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest6342);
                    c0=parse_org_emftext_language_xpath2_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:7917:4: c1= parse_org_emftext_language_xpath2_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest6352);
                    c1=parse_org_emftext_language_xpath2_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 58, parse_org_emftext_language_xpath2_AttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_AttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_WildcardAttributeTest"
    // Xpath2.g:7921:1: parse_org_emftext_language_xpath2_WildcardAttributeTest returns [org.emftext.language.xpath2.WildcardAttributeTest element = null] : a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )? a6= ')' ;
    public final org.emftext.language.xpath2.WildcardAttributeTest parse_org_emftext_language_xpath2_WildcardAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.WildcardAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_WildcardAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return element; }

            // Xpath2.g:7924:2: (a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )? a6= ')' )
            // Xpath2.g:7925:2: a0= 'attribute' a1= '(' a2= '*' ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )? a6= ')'
            {
            a0=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6377); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2218]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6391); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2219]);
            	}

            a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6405); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2220]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2221]);
            	}

            // Xpath2.g:7968:2: ( (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) ) )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==17) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // Xpath2.g:7969:3: (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) )
                    {
                    // Xpath2.g:7969:3: (a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) ) )
                    // Xpath2.g:7970:4: a3= ',' ( (a4= QNAME ) | (a5= NCNAME ) )
                    {
                    a3=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6428); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2222]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2223]);
                    			}

                    // Xpath2.g:7985:4: ( (a4= QNAME ) | (a5= NCNAME ) )
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==QNAME) ) {
                        alt61=1;
                    }
                    else if ( (LA61_0==NCNAME) ) {
                        alt61=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 61, 0, input);

                        throw nvae;

                    }
                    switch (alt61) {
                        case 1 :
                            // Xpath2.g:7986:5: (a4= QNAME )
                            {
                            // Xpath2.g:7986:5: (a4= QNAME )
                            // Xpath2.g:7987:6: a4= QNAME
                            {
                            a4=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6461); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a4 != null) {
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_2_0_0_0, resolved, true);
                            							copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2224]);
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath2.g:8023:10: (a5= NCNAME )
                            {
                            // Xpath2.g:8023:10: (a5= NCNAME )
                            // Xpath2.g:8024:6: a5= NCNAME
                            {
                            a5=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6517); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a5 != null) {
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_3_0_0_2_0_1_0, resolved, true);
                            							copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2225]);
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2226]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2227]);
            	}

            a6=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6582); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_57_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2228]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2229]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2230]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2231]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2232]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2233]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2234]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2235]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2236]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2237]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2238]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2239]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2240]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2241]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2242]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2243]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2244]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2245]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2246]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2247]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2248]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2249]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2250]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2251]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 59, parse_org_emftext_language_xpath2_WildcardAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_WildcardAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NameAttributeTest"
    // Xpath2.g:8111:1: parse_org_emftext_language_xpath2_NameAttributeTest returns [org.emftext.language.xpath2.NameAttributeTest element = null] : a0= 'attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )? a7= ')' ;
    public final org.emftext.language.xpath2.NameAttributeTest parse_org_emftext_language_xpath2_NameAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.NameAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_NameAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return element; }

            // Xpath2.g:8114:2: (a0= 'attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )? a7= ')' )
            // Xpath2.g:8115:2: a0= 'attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )? a7= ')'
            {
            a0=(Token)match(input,40,FOLLOW_40_in_parse_org_emftext_language_xpath2_NameAttributeTest6611); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2252]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_NameAttributeTest6625); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2253]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2254]);
            	}

            // Xpath2.g:8144:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==QNAME) ) {
                alt63=1;
            }
            else if ( (LA63_0==NCNAME) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;

            }
            switch (alt63) {
                case 1 :
                    // Xpath2.g:8145:3: (a2= QNAME )
                    {
                    // Xpath2.g:8145:3: (a2= QNAME )
                    // Xpath2.g:8146:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6648); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2255]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2256]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:8183:6: (a3= NCNAME )
                    {
                    // Xpath2.g:8183:6: (a3= NCNAME )
                    // Xpath2.g:8184:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6686); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2257]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2258]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2259]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2260]);
            	}

            // Xpath2.g:8227:2: ( (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==17) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // Xpath2.g:8228:3: (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) )
                    {
                    // Xpath2.g:8228:3: (a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) ) )
                    // Xpath2.g:8229:4: a4= ',' ( (a5= QNAME ) | (a6= NCNAME ) )
                    {
                    a4=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_NameAttributeTest6729); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2261]);
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2262]);
                    			}

                    // Xpath2.g:8244:4: ( (a5= QNAME ) | (a6= NCNAME ) )
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==QNAME) ) {
                        alt64=1;
                    }
                    else if ( (LA64_0==NCNAME) ) {
                        alt64=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 64, 0, input);

                        throw nvae;

                    }
                    switch (alt64) {
                        case 1 :
                            // Xpath2.g:8245:5: (a5= QNAME )
                            {
                            // Xpath2.g:8245:5: (a5= QNAME )
                            // Xpath2.g:8246:6: a5= QNAME
                            {
                            a5=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6762); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a5 != null) {
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_2_0_0_0, resolved, true);
                            							copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2263]);
                            				}

                            }
                            break;
                        case 2 :
                            // Xpath2.g:8282:10: (a6= NCNAME )
                            {
                            // Xpath2.g:8282:10: (a6= NCNAME )
                            // Xpath2.g:8283:6: a6= NCNAME
                            {
                            a6=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6818); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (terminateParsing) {
                            							throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                            						}
                            						if (element == null) {
                            							element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
                            							startIncompleteElement(element);
                            						}
                            						if (a6 != null) {
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                            							tokenResolver.setOptions(getOptions());
                            							org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                            							tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__TYPE), result);
                            							Object resolvedObject = result.getResolvedToken();
                            							if (resolvedObject == null) {
                            								addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
                            							}
                            							javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                            							if (resolved != null) {
                            								Object value = resolved;
                            								element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ATTRIBUTE_TEST__TYPE), value);
                            								completedElement(value, false);
                            							}
                            							collectHiddenTokens(element);
                            							retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_3_0_0_2_0_1_0, resolved, true);
                            							copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
                            						}
                            					}

                            }


                            if ( state.backtracking==0 ) {
                            					// expected elements (follow set)
                            					addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2264]);
                            				}

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2265]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2266]);
            	}

            a7=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_NameAttributeTest6883); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_58_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2267]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2268]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2269]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2270]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2271]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2272]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2273]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2274]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2275]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2276]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2277]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2278]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2279]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2280]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2281]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2282]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2283]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2284]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2285]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2286]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2287]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2288]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2289]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2290]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 60, parse_org_emftext_language_xpath2_NameAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NameAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_SchemaAttributeTest"
    // Xpath2.g:8370:1: parse_org_emftext_language_xpath2_SchemaAttributeTest returns [org.emftext.language.xpath2.SchemaAttributeTest element = null] : a0= 'schema-attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' ;
    public final org.emftext.language.xpath2.SchemaAttributeTest parse_org_emftext_language_xpath2_SchemaAttributeTest() throws RecognitionException {
        org.emftext.language.xpath2.SchemaAttributeTest element =  null;

        int parse_org_emftext_language_xpath2_SchemaAttributeTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return element; }

            // Xpath2.g:8373:2: (a0= 'schema-attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' )
            // Xpath2.g:8374:2: a0= 'schema-attribute' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')'
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6912); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2291]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6926); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2292]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2293]);
            	}

            // Xpath2.g:8403:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==QNAME) ) {
                alt66=1;
            }
            else if ( (LA66_0==NCNAME) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }
            switch (alt66) {
                case 1 :
                    // Xpath2.g:8404:3: (a2= QNAME )
                    {
                    // Xpath2.g:8404:3: (a2= QNAME )
                    // Xpath2.g:8405:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6949); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2294]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:8441:6: (a3= NCNAME )
                    {
                    // Xpath2.g:8441:6: (a3= NCNAME )
                    // Xpath2.g:8442:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6987); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ATTRIBUTE_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ATTRIBUTE_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2295]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2296]);
            	}

            a4=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_SchemaAttributeTest7021); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaAttributeTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_59_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2297]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2298]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2299]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2300]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2301]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2302]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2303]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2304]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2305]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2306]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2307]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2308]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2309]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2310]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2311]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2312]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2313]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2314]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2315]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2316]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2317]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2318]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2319]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2320]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 61, parse_org_emftext_language_xpath2_SchemaAttributeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SchemaAttributeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_ElementTest"
    // Xpath2.g:8522:1: parse_org_emftext_language_xpath2_ElementTest returns [org.emftext.language.xpath2.ElementTest element = null] : (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardElementTest |c1= parse_org_emftext_language_xpath2_NameElementTest );
    public final org.emftext.language.xpath2.ElementTest parse_org_emftext_language_xpath2_ElementTest() throws RecognitionException {
        org.emftext.language.xpath2.ElementTest element =  null;

        int parse_org_emftext_language_xpath2_ElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        org.emftext.language.xpath2.WildcardElementTest c0 =null;

        org.emftext.language.xpath2.NameElementTest c1 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return element; }

            // Xpath2.g:8525:2: (a0= 'element' a1= '(' a2= ')' |c0= parse_org_emftext_language_xpath2_WildcardElementTest |c1= parse_org_emftext_language_xpath2_NameElementTest )
            int alt67=3;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==49) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt67=1;
                        }
                        break;
                    case 15:
                        {
                        alt67=2;
                        }
                        break;
                    case NCNAME:
                    case QNAME:
                        {
                        alt67=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 67, 2, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;

            }
            switch (alt67) {
                case 1 :
                    // Xpath2.g:8526:2: a0= 'element' a1= '(' a2= ')'
                    {
                    a0=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath2_ElementTest7050); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_60_0_0_0, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2321]);
                    	}

                    a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_ElementTest7064); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_60_0_0_1, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2322]);
                    	}

                    a2=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_ElementTest7078); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    		if (element == null) {
                    			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createElementTest();
                    			startIncompleteElement(element);
                    		}
                    		collectHiddenTokens(element);
                    		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_60_0_0_2, null, true);
                    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
                    	}

                    if ( state.backtracking==0 ) {
                    		// expected elements (follow set)
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2323]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2324]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2325]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2326]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2327]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2328]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2329]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2330]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2331]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2332]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2333]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2334]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2335]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2336]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2337]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2338]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2339]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2340]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2341]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2342]);
                    		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2343]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2344]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2345]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2346]);
                    		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2347]);
                    	}

                    }
                    break;
                case 2 :
                    // Xpath2.g:8594:2: c0= parse_org_emftext_language_xpath2_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_ElementTest7097);
                    c0=parse_org_emftext_language_xpath2_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:8595:4: c1= parse_org_emftext_language_xpath2_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_ElementTest7107);
                    c1=parse_org_emftext_language_xpath2_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 62, parse_org_emftext_language_xpath2_ElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_WildcardElementTest"
    // Xpath2.g:8599:1: parse_org_emftext_language_xpath2_WildcardElementTest returns [org.emftext.language.xpath2.WildcardElementTest element = null] : a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )? a5= ')' ;
    public final org.emftext.language.xpath2.WildcardElementTest parse_org_emftext_language_xpath2_WildcardElementTest() throws RecognitionException {
        org.emftext.language.xpath2.WildcardElementTest element =  null;

        int parse_org_emftext_language_xpath2_WildcardElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        org.emftext.language.xpath2.OptionalAtomicType a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return element; }

            // Xpath2.g:8602:2: (a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )? a5= ')' )
            // Xpath2.g:8603:2: a0= 'element' a1= '(' a2= '*' ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )? a5= ')'
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath2_WildcardElementTest7132); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2348]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_WildcardElementTest7146); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2349]);
            	}

            a2=(Token)match(input,15,FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardElementTest7160); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2350]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2351]);
            	}

            // Xpath2.g:8646:2: ( (a3= ',' (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==17) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // Xpath2.g:8647:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) )
                    {
                    // Xpath2.g:8647:3: (a3= ',' (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) )
                    // Xpath2.g:8648:4: a3= ',' (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType )
                    {
                    a3=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardElementTest7183); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2352]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getWildcardElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2353]);
                    			}

                    // Xpath2.g:8663:4: (a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType )
                    // Xpath2.g:8664:5: a4_0= parse_org_emftext_language_xpath2_OptionalAtomicType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OptionalAtomicType_in_parse_org_emftext_language_xpath2_WildcardElementTest7209);
                    a4_0=parse_org_emftext_language_xpath2_OptionalAtomicType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.WILDCARD_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_3_0_0_2, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2354]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2355]);
            	}

            a5=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_WildcardElementTest7250); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createWildcardElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_61_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2356]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2357]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2358]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2359]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2360]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2361]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2362]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2363]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2364]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2365]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2366]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2367]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2368]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2369]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2370]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2371]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2372]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2373]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2374]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2375]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2376]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2377]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2378]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2379]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2380]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 63, parse_org_emftext_language_xpath2_WildcardElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_WildcardElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_NameElementTest"
    // Xpath2.g:8736:1: parse_org_emftext_language_xpath2_NameElementTest returns [org.emftext.language.xpath2.NameElementTest element = null] : a0= 'element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )? a6= ')' ;
    public final org.emftext.language.xpath2.NameElementTest parse_org_emftext_language_xpath2_NameElementTest() throws RecognitionException {
        org.emftext.language.xpath2.NameElementTest element =  null;

        int parse_org_emftext_language_xpath2_NameElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        org.emftext.language.xpath2.OptionalAtomicType a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return element; }

            // Xpath2.g:8739:2: (a0= 'element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )? a6= ')' )
            // Xpath2.g:8740:2: a0= 'element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )? a6= ')'
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_org_emftext_language_xpath2_NameElementTest7279); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2381]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_NameElementTest7293); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2382]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2383]);
            	}

            // Xpath2.g:8769:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==QNAME) ) {
                alt69=1;
            }
            else if ( (LA69_0==NCNAME) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;

            }
            switch (alt69) {
                case 1 :
                    // Xpath2.g:8770:3: (a2= QNAME )
                    {
                    // Xpath2.g:8770:3: (a2= QNAME )
                    // Xpath2.g:8771:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_NameElementTest7316); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2384]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2385]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:8808:6: (a3= NCNAME )
                    {
                    // Xpath2.g:8808:6: (a3= NCNAME )
                    // Xpath2.g:8809:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NameElementTest7354); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2386]);
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2387]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2388]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2389]);
            	}

            // Xpath2.g:8852:2: ( (a4= ',' (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==17) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // Xpath2.g:8853:3: (a4= ',' (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) )
                    {
                    // Xpath2.g:8853:3: (a4= ',' (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType ) )
                    // Xpath2.g:8854:4: a4= ',' (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType )
                    {
                    a4=(Token)match(input,17,FOLLOW_17_in_parse_org_emftext_language_xpath2_NameElementTest7397); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_3_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2390]);
                    				addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getNameElementTest(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2391]);
                    			}

                    // Xpath2.g:8869:4: (a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType )
                    // Xpath2.g:8870:5: a5_0= parse_org_emftext_language_xpath2_OptionalAtomicType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OptionalAtomicType_in_parse_org_emftext_language_xpath2_NameElementTest7423);
                    a5_0=parse_org_emftext_language_xpath2_OptionalAtomicType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
                    						startIncompleteElement(element);
                    					}
                    					if (a5_0 != null) {
                    						if (a5_0 != null) {
                    							Object value = a5_0;
                    							element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.NAME_ELEMENT_TEST__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_3_0_0_2, a5_0, true);
                    						copyLocalizationInfos(a5_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2392]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2393]);
            	}

            a6=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_NameElementTest7464); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createNameElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_62_0_0_4, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2394]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2395]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2396]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2397]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2398]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2399]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2400]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2401]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2402]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2403]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2404]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2405]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2406]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2407]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2408]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2409]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2410]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2411]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2412]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2413]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2414]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2415]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2416]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2417]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2418]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 64, parse_org_emftext_language_xpath2_NameElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NameElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_SchemaElementTest"
    // Xpath2.g:8942:1: parse_org_emftext_language_xpath2_SchemaElementTest returns [org.emftext.language.xpath2.SchemaElementTest element = null] : a0= 'schema-element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' ;
    public final org.emftext.language.xpath2.SchemaElementTest parse_org_emftext_language_xpath2_SchemaElementTest() throws RecognitionException {
        org.emftext.language.xpath2.SchemaElementTest element =  null;

        int parse_org_emftext_language_xpath2_SchemaElementTest_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return element; }

            // Xpath2.g:8945:2: (a0= 'schema-element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')' )
            // Xpath2.g:8946:2: a0= 'schema-element' a1= '(' ( (a2= QNAME ) | (a3= NCNAME ) ) a4= ')'
            {
            a0=(Token)match(input,82,FOLLOW_82_in_parse_org_emftext_language_xpath2_SchemaElementTest7493); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2419]);
            	}

            a1=(Token)match(input,13,FOLLOW_13_in_parse_org_emftext_language_xpath2_SchemaElementTest7507); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2420]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2421]);
            	}

            // Xpath2.g:8975:2: ( (a2= QNAME ) | (a3= NCNAME ) )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==QNAME) ) {
                alt71=1;
            }
            else if ( (LA71_0==NCNAME) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }
            switch (alt71) {
                case 1 :
                    // Xpath2.g:8976:3: (a2= QNAME )
                    {
                    // Xpath2.g:8976:3: (a2= QNAME )
                    // Xpath2.g:8977:4: a2= QNAME
                    {
                    a2=(Token)match(input,QNAME,FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_SchemaElementTest7530); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_2_0_0_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2422]);
                    		}

                    }
                    break;
                case 2 :
                    // Xpath2.g:9013:6: (a3= NCNAME )
                    {
                    // Xpath2.g:9013:6: (a3= NCNAME )
                    // Xpath2.g:9014:4: a3= NCNAME
                    {
                    a3=(Token)match(input,NCNAME,FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_SchemaElementTest7568); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NCNAME");
                    					tokenResolver.setOptions(getOptions());
                    					org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ELEMENT_TEST__NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    					}
                    					javax.xml.namespace.QName resolved = (javax.xml.namespace.QName) resolvedObject;
                    					if (resolved != null) {
                    						Object value = resolved;
                    						element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.SCHEMA_ELEMENT_TEST__NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_2_0_1_0, resolved, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2423]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2424]);
            	}

            a4=(Token)match(input,14,FOLLOW_14_in_parse_org_emftext_language_xpath2_SchemaElementTest7602); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createSchemaElementTest();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_63_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getGeneralForwardStep(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2425]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2426]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2427]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2428]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2429]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2430]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2431]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2432]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2433]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2434]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2435]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2436]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2437]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2438]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2439]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2440]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2441]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2442]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2443]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2444]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2445]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2446]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2447]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2448]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2449]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 65, parse_org_emftext_language_xpath2_SchemaElementTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SchemaElementTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_IntegerLiteral"
    // Xpath2.g:9095:1: parse_org_emftext_language_xpath2_IntegerLiteral returns [org.emftext.language.xpath2.IntegerLiteral element = null] : (a0= INTEGER_LITERAL ) ;
    public final org.emftext.language.xpath2.IntegerLiteral parse_org_emftext_language_xpath2_IntegerLiteral() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral element =  null;

        int parse_org_emftext_language_xpath2_IntegerLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return element; }

            // Xpath2.g:9098:2: ( (a0= INTEGER_LITERAL ) )
            // Xpath2.g:9099:2: (a0= INTEGER_LITERAL )
            {
            // Xpath2.g:9099:2: (a0= INTEGER_LITERAL )
            // Xpath2.g:9100:3: a0= INTEGER_LITERAL
            {
            a0=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath2_IntegerLiteral7635); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createIntegerLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INTEGER_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.INTEGER_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_64_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2450]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2451]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2452]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2453]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2454]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2455]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2456]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2457]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2458]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2459]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2460]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2461]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2462]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2463]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2464]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2465]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2466]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2467]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2468]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2469]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2470]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2471]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2472]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 66, parse_org_emftext_language_xpath2_IntegerLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_IntegerLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_DecimalLiteral"
    // Xpath2.g:9159:1: parse_org_emftext_language_xpath2_DecimalLiteral returns [org.emftext.language.xpath2.DecimalLiteral element = null] : (a0= DECIMAL_LITERAL ) ;
    public final org.emftext.language.xpath2.DecimalLiteral parse_org_emftext_language_xpath2_DecimalLiteral() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral element =  null;

        int parse_org_emftext_language_xpath2_DecimalLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return element; }

            // Xpath2.g:9162:2: ( (a0= DECIMAL_LITERAL ) )
            // Xpath2.g:9163:2: (a0= DECIMAL_LITERAL )
            {
            // Xpath2.g:9163:2: (a0= DECIMAL_LITERAL )
            // Xpath2.g:9164:3: a0= DECIMAL_LITERAL
            {
            a0=(Token)match(input,DECIMAL_LITERAL,FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath2_DecimalLiteral7675); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDecimalLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DECIMAL_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DECIMAL_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Float resolved = (java.lang.Float) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DECIMAL_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_65_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2473]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2474]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2475]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2476]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2477]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2478]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2479]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2480]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2481]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2482]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2483]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2484]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2485]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2486]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2487]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2488]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2489]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2490]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2491]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2492]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2493]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2494]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2495]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 67, parse_org_emftext_language_xpath2_DecimalLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DecimalLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_DoubleLiteral"
    // Xpath2.g:9223:1: parse_org_emftext_language_xpath2_DoubleLiteral returns [org.emftext.language.xpath2.DoubleLiteral element = null] : (a0= DOUBLE_LITERAL ) ;
    public final org.emftext.language.xpath2.DoubleLiteral parse_org_emftext_language_xpath2_DoubleLiteral() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral element =  null;

        int parse_org_emftext_language_xpath2_DoubleLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return element; }

            // Xpath2.g:9226:2: ( (a0= DOUBLE_LITERAL ) )
            // Xpath2.g:9227:2: (a0= DOUBLE_LITERAL )
            {
            // Xpath2.g:9227:2: (a0= DOUBLE_LITERAL )
            // Xpath2.g:9228:3: a0= DOUBLE_LITERAL
            {
            a0=(Token)match(input,DOUBLE_LITERAL,FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath2_DoubleLiteral7715); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createDoubleLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("DOUBLE_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.Double resolved = (java.lang.Double) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.DOUBLE_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_66_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2496]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2497]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2498]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2499]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2500]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2501]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2502]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2503]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2504]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2505]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2506]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2507]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2508]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2509]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2510]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2511]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2512]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2513]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2514]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2515]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2516]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2517]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2518]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 68, parse_org_emftext_language_xpath2_DoubleLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_DoubleLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_StringLiteral"
    // Xpath2.g:9287:1: parse_org_emftext_language_xpath2_StringLiteral returns [org.emftext.language.xpath2.StringLiteral element = null] : (a0= STRING_LITERAL ) ;
    public final org.emftext.language.xpath2.StringLiteral parse_org_emftext_language_xpath2_StringLiteral() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteral element =  null;

        int parse_org_emftext_language_xpath2_StringLiteral_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return element; }

            // Xpath2.g:9290:2: ( (a0= STRING_LITERAL ) )
            // Xpath2.g:9291:2: (a0= STRING_LITERAL )
            {
            // Xpath2.g:9291:2: (a0= STRING_LITERAL )
            // Xpath2.g:9292:3: a0= STRING_LITERAL
            {
            a0=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteral7755); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2TerminateParsingException();
            			}
            			if (element == null) {
            				element = org.emftext.language.xpath2.Xpath2Factory.eINSTANCE.createStringLiteral();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STRING_LITERAL");
            				tokenResolver.setOptions(getOptions());
            				org.emftext.language.xpath2.resource.xpath2.IXpath2TokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL__VALUE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(org.emftext.language.xpath2.Xpath2Package.STRING_LITERAL__VALUE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, org.emftext.language.xpath2.resource.xpath2.grammar.Xpath2GrammarInformationProvider.XPATH2_67_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2519]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2520]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2521]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2522]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2523]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2524]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getFilterExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2525]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2526]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getPathExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2527]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2528]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2529]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2530]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2531]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2532]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2533]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2534]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2535]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2536]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2537]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2538]);
            		addExpectedElement(org.emftext.language.xpath2.Xpath2Package.eINSTANCE.getComparisonExpr(), org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2539]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2540]);
            		addExpectedElement(null, org.emftext.language.xpath2.resource.xpath2.mopp.Xpath2ExpectationConstants.EXPECTATIONS[2541]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 69, parse_org_emftext_language_xpath2_StringLiteral_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StringLiteral"



    // $ANTLR start "parse_org_emftext_language_xpath2_ExprSingle"
    // Xpath2.g:9351:1: parse_org_emftext_language_xpath2_ExprSingle returns [org.emftext.language.xpath2.ExprSingle element = null] : (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_MultiplicativeExpr |c9= parse_org_emftext_language_xpath2_UnionExpr |c10= parse_org_emftext_language_xpath2_IntersectExceptExpr |c11= parse_org_emftext_language_xpath2_InstanceofExpr |c12= parse_org_emftext_language_xpath2_TreatExpr |c13= parse_org_emftext_language_xpath2_CastableExpr |c14= parse_org_emftext_language_xpath2_CastExpr |c15= parse_org_emftext_language_xpath2_UnaryExpr |c16= parse_org_emftext_language_xpath2_FilterExpr |c17= parse_org_emftext_language_xpath2_FunctionCall |c18= parse_org_emftext_language_xpath2_PathExpr |c19= parse_org_emftext_language_xpath2_ChildStepExpr |c20= parse_org_emftext_language_xpath2_DescOrSelfStepExpr |c21= parse_org_emftext_language_xpath2_RootStepExpr |c22= parse_org_emftext_language_xpath2_SelfStepExpr |c23= parse_org_emftext_language_xpath2_GeneralForwardStep |c24= parse_org_emftext_language_xpath2_AbbrevForwardStep |c25= parse_org_emftext_language_xpath2_GeneralReverseStep |c26= parse_org_emftext_language_xpath2_AbbrevReverseStep |c27= parse_org_emftext_language_xpath2_VarRef |c28= parse_org_emftext_language_xpath2_ParenthesizedExpr |c29= parse_org_emftext_language_xpath2_ContextItemExpr |c30= parse_org_emftext_language_xpath2_IntegerLiteral |c31= parse_org_emftext_language_xpath2_DecimalLiteral |c32= parse_org_emftext_language_xpath2_DoubleLiteral |c33= parse_org_emftext_language_xpath2_StringLiteral );
    public final org.emftext.language.xpath2.ExprSingle parse_org_emftext_language_xpath2_ExprSingle() throws RecognitionException {
        org.emftext.language.xpath2.ExprSingle element =  null;

        int parse_org_emftext_language_xpath2_ExprSingle_StartIndex = input.index();

        org.emftext.language.xpath2.ForExpr c0 =null;

        org.emftext.language.xpath2.QuantifiedExpr c1 =null;

        org.emftext.language.xpath2.IfExpr c2 =null;

        org.emftext.language.xpath2.OrExpr c3 =null;

        org.emftext.language.xpath2.AndExpr c4 =null;

        org.emftext.language.xpath2.ComparisonExpr c5 =null;

        org.emftext.language.xpath2.RangeExpr c6 =null;

        org.emftext.language.xpath2.AdditiveExpr c7 =null;

        org.emftext.language.xpath2.MultiplicativeExpr c8 =null;

        org.emftext.language.xpath2.UnionExpr c9 =null;

        org.emftext.language.xpath2.IntersectExceptExpr c10 =null;

        org.emftext.language.xpath2.InstanceofExpr c11 =null;

        org.emftext.language.xpath2.TreatExpr c12 =null;

        org.emftext.language.xpath2.CastableExpr c13 =null;

        org.emftext.language.xpath2.CastExpr c14 =null;

        org.emftext.language.xpath2.UnaryExpr c15 =null;

        org.emftext.language.xpath2.FilterExpr c16 =null;

        org.emftext.language.xpath2.FunctionCall c17 =null;

        org.emftext.language.xpath2.PathExpr c18 =null;

        org.emftext.language.xpath2.ChildStepExpr c19 =null;

        org.emftext.language.xpath2.DescOrSelfStepExpr c20 =null;

        org.emftext.language.xpath2.RootStepExpr c21 =null;

        org.emftext.language.xpath2.SelfStepExpr c22 =null;

        org.emftext.language.xpath2.GeneralForwardStep c23 =null;

        org.emftext.language.xpath2.AbbrevForwardStep c24 =null;

        org.emftext.language.xpath2.GeneralReverseStep c25 =null;

        org.emftext.language.xpath2.AbbrevReverseStep c26 =null;

        org.emftext.language.xpath2.VarRef c27 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c28 =null;

        org.emftext.language.xpath2.ContextItemExpr c29 =null;

        org.emftext.language.xpath2.IntegerLiteral c30 =null;

        org.emftext.language.xpath2.DecimalLiteral c31 =null;

        org.emftext.language.xpath2.DoubleLiteral c32 =null;

        org.emftext.language.xpath2.StringLiteral c33 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return element; }

            // Xpath2.g:9352:2: (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_MultiplicativeExpr |c9= parse_org_emftext_language_xpath2_UnionExpr |c10= parse_org_emftext_language_xpath2_IntersectExceptExpr |c11= parse_org_emftext_language_xpath2_InstanceofExpr |c12= parse_org_emftext_language_xpath2_TreatExpr |c13= parse_org_emftext_language_xpath2_CastableExpr |c14= parse_org_emftext_language_xpath2_CastExpr |c15= parse_org_emftext_language_xpath2_UnaryExpr |c16= parse_org_emftext_language_xpath2_FilterExpr |c17= parse_org_emftext_language_xpath2_FunctionCall |c18= parse_org_emftext_language_xpath2_PathExpr |c19= parse_org_emftext_language_xpath2_ChildStepExpr |c20= parse_org_emftext_language_xpath2_DescOrSelfStepExpr |c21= parse_org_emftext_language_xpath2_RootStepExpr |c22= parse_org_emftext_language_xpath2_SelfStepExpr |c23= parse_org_emftext_language_xpath2_GeneralForwardStep |c24= parse_org_emftext_language_xpath2_AbbrevForwardStep |c25= parse_org_emftext_language_xpath2_GeneralReverseStep |c26= parse_org_emftext_language_xpath2_AbbrevReverseStep |c27= parse_org_emftext_language_xpath2_VarRef |c28= parse_org_emftext_language_xpath2_ParenthesizedExpr |c29= parse_org_emftext_language_xpath2_ContextItemExpr |c30= parse_org_emftext_language_xpath2_IntegerLiteral |c31= parse_org_emftext_language_xpath2_DecimalLiteral |c32= parse_org_emftext_language_xpath2_DoubleLiteral |c33= parse_org_emftext_language_xpath2_StringLiteral )
            int alt72=34;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // Xpath2.g:9353:2: c0= parse_org_emftext_language_xpath2_ForExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_ExprSingle7787);
                    c0=parse_org_emftext_language_xpath2_ForExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9354:4: c1= parse_org_emftext_language_xpath2_QuantifiedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_ExprSingle7797);
                    c1=parse_org_emftext_language_xpath2_QuantifiedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9355:4: c2= parse_org_emftext_language_xpath2_IfExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_ExprSingle7807);
                    c2=parse_org_emftext_language_xpath2_IfExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:9356:4: c3= parse_org_emftext_language_xpath2_OrExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_ExprSingle7817);
                    c3=parse_org_emftext_language_xpath2_OrExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:9357:4: c4= parse_org_emftext_language_xpath2_AndExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_ExprSingle7827);
                    c4=parse_org_emftext_language_xpath2_AndExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:9358:4: c5= parse_org_emftext_language_xpath2_ComparisonExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_ExprSingle7837);
                    c5=parse_org_emftext_language_xpath2_ComparisonExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:9359:4: c6= parse_org_emftext_language_xpath2_RangeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ExprSingle7847);
                    c6=parse_org_emftext_language_xpath2_RangeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:9360:4: c7= parse_org_emftext_language_xpath2_AdditiveExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ExprSingle7857);
                    c7=parse_org_emftext_language_xpath2_AdditiveExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:9361:4: c8= parse_org_emftext_language_xpath2_MultiplicativeExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_ExprSingle7867);
                    c8=parse_org_emftext_language_xpath2_MultiplicativeExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:9362:4: c9= parse_org_emftext_language_xpath2_UnionExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_ExprSingle7877);
                    c9=parse_org_emftext_language_xpath2_UnionExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:9363:4: c10= parse_org_emftext_language_xpath2_IntersectExceptExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_ExprSingle7887);
                    c10=parse_org_emftext_language_xpath2_IntersectExceptExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath2.g:9364:4: c11= parse_org_emftext_language_xpath2_InstanceofExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_ExprSingle7897);
                    c11=parse_org_emftext_language_xpath2_InstanceofExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath2.g:9365:4: c12= parse_org_emftext_language_xpath2_TreatExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_ExprSingle7907);
                    c12=parse_org_emftext_language_xpath2_TreatExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath2.g:9366:4: c13= parse_org_emftext_language_xpath2_CastableExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_ExprSingle7917);
                    c13=parse_org_emftext_language_xpath2_CastableExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath2.g:9367:4: c14= parse_org_emftext_language_xpath2_CastExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_ExprSingle7927);
                    c14=parse_org_emftext_language_xpath2_CastExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 16 :
                    // Xpath2.g:9368:4: c15= parse_org_emftext_language_xpath2_UnaryExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_ExprSingle7937);
                    c15=parse_org_emftext_language_xpath2_UnaryExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c15; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 17 :
                    // Xpath2.g:9369:4: c16= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_ExprSingle7947);
                    c16=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c16; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 18 :
                    // Xpath2.g:9370:4: c17= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_ExprSingle7957);
                    c17=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c17; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 19 :
                    // Xpath2.g:9371:4: c18= parse_org_emftext_language_xpath2_PathExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ExprSingle7967);
                    c18=parse_org_emftext_language_xpath2_PathExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c18; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 20 :
                    // Xpath2.g:9372:4: c19= parse_org_emftext_language_xpath2_ChildStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle7977);
                    c19=parse_org_emftext_language_xpath2_ChildStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c19; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 21 :
                    // Xpath2.g:9373:4: c20= parse_org_emftext_language_xpath2_DescOrSelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle7987);
                    c20=parse_org_emftext_language_xpath2_DescOrSelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c20; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 22 :
                    // Xpath2.g:9374:4: c21= parse_org_emftext_language_xpath2_RootStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle7997);
                    c21=parse_org_emftext_language_xpath2_RootStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c21; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 23 :
                    // Xpath2.g:9375:4: c22= parse_org_emftext_language_xpath2_SelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle8007);
                    c22=parse_org_emftext_language_xpath2_SelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c22; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 24 :
                    // Xpath2.g:9376:4: c23= parse_org_emftext_language_xpath2_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_ExprSingle8017);
                    c23=parse_org_emftext_language_xpath2_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c23; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 25 :
                    // Xpath2.g:9377:4: c24= parse_org_emftext_language_xpath2_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_ExprSingle8027);
                    c24=parse_org_emftext_language_xpath2_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c24; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 26 :
                    // Xpath2.g:9378:4: c25= parse_org_emftext_language_xpath2_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_ExprSingle8037);
                    c25=parse_org_emftext_language_xpath2_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c25; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 27 :
                    // Xpath2.g:9379:4: c26= parse_org_emftext_language_xpath2_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_ExprSingle8047);
                    c26=parse_org_emftext_language_xpath2_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c26; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 28 :
                    // Xpath2.g:9380:4: c27= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_ExprSingle8057);
                    c27=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c27; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 29 :
                    // Xpath2.g:9381:4: c28= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_ExprSingle8067);
                    c28=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c28; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 30 :
                    // Xpath2.g:9382:4: c29= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_ExprSingle8077);
                    c29=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c29; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 31 :
                    // Xpath2.g:9383:4: c30= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8087);
                    c30=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c30; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 32 :
                    // Xpath2.g:9384:4: c31= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8097);
                    c31=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c31; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 33 :
                    // Xpath2.g:9385:4: c32= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8107);
                    c32=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c32; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 34 :
                    // Xpath2.g:9386:4: c33= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8117);
                    c33=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c33; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 70, parse_org_emftext_language_xpath2_ExprSingle_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ExprSingle"



    // $ANTLR start "parse_org_emftext_language_xpath2_Comp"
    // Xpath2.g:9390:1: parse_org_emftext_language_xpath2_Comp returns [org.emftext.language.xpath2.Comp element = null] : (c0= parse_org_emftext_language_xpath2_GeneralComp |c1= parse_org_emftext_language_xpath2_ValueComp |c2= parse_org_emftext_language_xpath2_NodeComp );
    public final org.emftext.language.xpath2.Comp parse_org_emftext_language_xpath2_Comp() throws RecognitionException {
        org.emftext.language.xpath2.Comp element =  null;

        int parse_org_emftext_language_xpath2_Comp_StartIndex = input.index();

        org.emftext.language.xpath2.GeneralComp c0 =null;

        org.emftext.language.xpath2.ValueComp c1 =null;

        org.emftext.language.xpath2.NodeComp c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return element; }

            // Xpath2.g:9391:2: (c0= parse_org_emftext_language_xpath2_GeneralComp |c1= parse_org_emftext_language_xpath2_ValueComp |c2= parse_org_emftext_language_xpath2_NodeComp )
            int alt73=3;
            switch ( input.LA(1) ) {
            case 11:
            case 25:
            case 27:
            case 28:
            case 29:
            case 30:
                {
                alt73=1;
                }
                break;
            case 52:
            case 58:
            case 59:
            case 67:
            case 68:
            case 71:
                {
                alt73=2;
                }
                break;
            case 26:
            case 31:
            case 65:
                {
                alt73=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;

            }

            switch (alt73) {
                case 1 :
                    // Xpath2.g:9392:2: c0= parse_org_emftext_language_xpath2_GeneralComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralComp_in_parse_org_emftext_language_xpath2_Comp8138);
                    c0=parse_org_emftext_language_xpath2_GeneralComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9393:4: c1= parse_org_emftext_language_xpath2_ValueComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ValueComp_in_parse_org_emftext_language_xpath2_Comp8148);
                    c1=parse_org_emftext_language_xpath2_ValueComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9394:4: c2= parse_org_emftext_language_xpath2_NodeComp
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeComp_in_parse_org_emftext_language_xpath2_Comp8158);
                    c2=parse_org_emftext_language_xpath2_NodeComp();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 71, parse_org_emftext_language_xpath2_Comp_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_Comp"



    // $ANTLR start "parse_org_emftext_language_xpath2_SequenceType"
    // Xpath2.g:9398:1: parse_org_emftext_language_xpath2_SequenceType returns [org.emftext.language.xpath2.SequenceType element = null] : (c0= parse_org_emftext_language_xpath2_EmptySequenceType |c1= parse_org_emftext_language_xpath2_ItemSequenceType );
    public final org.emftext.language.xpath2.SequenceType parse_org_emftext_language_xpath2_SequenceType() throws RecognitionException {
        org.emftext.language.xpath2.SequenceType element =  null;

        int parse_org_emftext_language_xpath2_SequenceType_StartIndex = input.index();

        org.emftext.language.xpath2.EmptySequenceType c0 =null;

        org.emftext.language.xpath2.ItemSequenceType c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return element; }

            // Xpath2.g:9399:2: (c0= parse_org_emftext_language_xpath2_EmptySequenceType |c1= parse_org_emftext_language_xpath2_ItemSequenceType )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==51) ) {
                alt74=1;
            }
            else if ( ((LA74_0 >= NCNAME && LA74_0 <= QNAME)||LA74_0==40||LA74_0==44||(LA74_0 >= 48 && LA74_0 <= 49)||LA74_0==66||LA74_0==72||LA74_0==78||(LA74_0 >= 81 && LA74_0 <= 82)||LA74_0==85) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;

            }
            switch (alt74) {
                case 1 :
                    // Xpath2.g:9400:2: c0= parse_org_emftext_language_xpath2_EmptySequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_EmptySequenceType_in_parse_org_emftext_language_xpath2_SequenceType8179);
                    c0=parse_org_emftext_language_xpath2_EmptySequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9401:4: c1= parse_org_emftext_language_xpath2_ItemSequenceType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemSequenceType_in_parse_org_emftext_language_xpath2_SequenceType8189);
                    c1=parse_org_emftext_language_xpath2_ItemSequenceType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 72, parse_org_emftext_language_xpath2_SequenceType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SequenceType"



    // $ANTLR start "parse_org_emftext_language_xpath2_ValueExpr"
    // Xpath2.g:9405:1: parse_org_emftext_language_xpath2_ValueExpr returns [org.emftext.language.xpath2.ValueExpr element = null] : c0= parse_org_emftext_language_xpath2_PathExpr ;
    public final org.emftext.language.xpath2.ValueExpr parse_org_emftext_language_xpath2_ValueExpr() throws RecognitionException {
        org.emftext.language.xpath2.ValueExpr element =  null;

        int parse_org_emftext_language_xpath2_ValueExpr_StartIndex = input.index();

        org.emftext.language.xpath2.PathExpr c0 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return element; }

            // Xpath2.g:9406:2: (c0= parse_org_emftext_language_xpath2_PathExpr )
            // Xpath2.g:9407:2: c0= parse_org_emftext_language_xpath2_PathExpr
            {
            pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ValueExpr8210);
            c0=parse_org_emftext_language_xpath2_PathExpr();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 73, parse_org_emftext_language_xpath2_ValueExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ValueExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_PrimaryExpr"
    // Xpath2.g:9411:1: parse_org_emftext_language_xpath2_PrimaryExpr returns [org.emftext.language.xpath2.PrimaryExpr element = null] : (c0= parse_org_emftext_language_xpath2_FunctionCall |c1= parse_org_emftext_language_xpath2_VarRef |c2= parse_org_emftext_language_xpath2_ParenthesizedExpr |c3= parse_org_emftext_language_xpath2_ContextItemExpr |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral );
    public final org.emftext.language.xpath2.PrimaryExpr parse_org_emftext_language_xpath2_PrimaryExpr() throws RecognitionException {
        org.emftext.language.xpath2.PrimaryExpr element =  null;

        int parse_org_emftext_language_xpath2_PrimaryExpr_StartIndex = input.index();

        org.emftext.language.xpath2.FunctionCall c0 =null;

        org.emftext.language.xpath2.VarRef c1 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c2 =null;

        org.emftext.language.xpath2.ContextItemExpr c3 =null;

        org.emftext.language.xpath2.IntegerLiteral c4 =null;

        org.emftext.language.xpath2.DecimalLiteral c5 =null;

        org.emftext.language.xpath2.DoubleLiteral c6 =null;

        org.emftext.language.xpath2.StringLiteral c7 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return element; }

            // Xpath2.g:9412:2: (c0= parse_org_emftext_language_xpath2_FunctionCall |c1= parse_org_emftext_language_xpath2_VarRef |c2= parse_org_emftext_language_xpath2_ParenthesizedExpr |c3= parse_org_emftext_language_xpath2_ContextItemExpr |c4= parse_org_emftext_language_xpath2_IntegerLiteral |c5= parse_org_emftext_language_xpath2_DecimalLiteral |c6= parse_org_emftext_language_xpath2_DoubleLiteral |c7= parse_org_emftext_language_xpath2_StringLiteral )
            int alt75=8;
            switch ( input.LA(1) ) {
            case NCNAME:
            case QNAME:
                {
                alt75=1;
                }
                break;
            case 12:
                {
                alt75=2;
                }
                break;
            case 13:
                {
                alt75=3;
                }
                break;
            case 19:
                {
                alt75=4;
                }
                break;
            case INTEGER_LITERAL:
                {
                alt75=5;
                }
                break;
            case DECIMAL_LITERAL:
                {
                alt75=6;
                }
                break;
            case DOUBLE_LITERAL:
                {
                alt75=7;
                }
                break;
            case STRING_LITERAL:
                {
                alt75=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }

            switch (alt75) {
                case 1 :
                    // Xpath2.g:9413:2: c0= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PrimaryExpr8231);
                    c0=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9414:4: c1= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PrimaryExpr8241);
                    c1=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9415:4: c2= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr8251);
                    c2=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:9416:4: c3= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr8261);
                    c3=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:9417:4: c4= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8271);
                    c4=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:9418:4: c5= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8281);
                    c5=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:9419:4: c6= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8291);
                    c6=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:9420:4: c7= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8301);
                    c7=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 74, parse_org_emftext_language_xpath2_PrimaryExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PrimaryExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_PathExprChild"
    // Xpath2.g:9424:1: parse_org_emftext_language_xpath2_PathExprChild returns [org.emftext.language.xpath2.PathExprChild element = null] : (c0= parse_org_emftext_language_xpath2_FilterExpr |c1= parse_org_emftext_language_xpath2_FunctionCall |c2= parse_org_emftext_language_xpath2_ChildStepExpr |c3= parse_org_emftext_language_xpath2_DescOrSelfStepExpr |c4= parse_org_emftext_language_xpath2_RootStepExpr |c5= parse_org_emftext_language_xpath2_SelfStepExpr |c6= parse_org_emftext_language_xpath2_GeneralForwardStep |c7= parse_org_emftext_language_xpath2_AbbrevForwardStep |c8= parse_org_emftext_language_xpath2_GeneralReverseStep |c9= parse_org_emftext_language_xpath2_AbbrevReverseStep |c10= parse_org_emftext_language_xpath2_VarRef |c11= parse_org_emftext_language_xpath2_ParenthesizedExpr |c12= parse_org_emftext_language_xpath2_ContextItemExpr |c13= parse_org_emftext_language_xpath2_IntegerLiteral |c14= parse_org_emftext_language_xpath2_DecimalLiteral |c15= parse_org_emftext_language_xpath2_DoubleLiteral |c16= parse_org_emftext_language_xpath2_StringLiteral );
    public final org.emftext.language.xpath2.PathExprChild parse_org_emftext_language_xpath2_PathExprChild() throws RecognitionException {
        org.emftext.language.xpath2.PathExprChild element =  null;

        int parse_org_emftext_language_xpath2_PathExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.FilterExpr c0 =null;

        org.emftext.language.xpath2.FunctionCall c1 =null;

        org.emftext.language.xpath2.ChildStepExpr c2 =null;

        org.emftext.language.xpath2.DescOrSelfStepExpr c3 =null;

        org.emftext.language.xpath2.RootStepExpr c4 =null;

        org.emftext.language.xpath2.SelfStepExpr c5 =null;

        org.emftext.language.xpath2.GeneralForwardStep c6 =null;

        org.emftext.language.xpath2.AbbrevForwardStep c7 =null;

        org.emftext.language.xpath2.GeneralReverseStep c8 =null;

        org.emftext.language.xpath2.AbbrevReverseStep c9 =null;

        org.emftext.language.xpath2.VarRef c10 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c11 =null;

        org.emftext.language.xpath2.ContextItemExpr c12 =null;

        org.emftext.language.xpath2.IntegerLiteral c13 =null;

        org.emftext.language.xpath2.DecimalLiteral c14 =null;

        org.emftext.language.xpath2.DoubleLiteral c15 =null;

        org.emftext.language.xpath2.StringLiteral c16 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return element; }

            // Xpath2.g:9425:2: (c0= parse_org_emftext_language_xpath2_FilterExpr |c1= parse_org_emftext_language_xpath2_FunctionCall |c2= parse_org_emftext_language_xpath2_ChildStepExpr |c3= parse_org_emftext_language_xpath2_DescOrSelfStepExpr |c4= parse_org_emftext_language_xpath2_RootStepExpr |c5= parse_org_emftext_language_xpath2_SelfStepExpr |c6= parse_org_emftext_language_xpath2_GeneralForwardStep |c7= parse_org_emftext_language_xpath2_AbbrevForwardStep |c8= parse_org_emftext_language_xpath2_GeneralReverseStep |c9= parse_org_emftext_language_xpath2_AbbrevReverseStep |c10= parse_org_emftext_language_xpath2_VarRef |c11= parse_org_emftext_language_xpath2_ParenthesizedExpr |c12= parse_org_emftext_language_xpath2_ContextItemExpr |c13= parse_org_emftext_language_xpath2_IntegerLiteral |c14= parse_org_emftext_language_xpath2_DecimalLiteral |c15= parse_org_emftext_language_xpath2_DoubleLiteral |c16= parse_org_emftext_language_xpath2_StringLiteral )
            int alt76=17;
            switch ( input.LA(1) ) {
            case QNAME:
                {
                int LA76_1 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred160_Xpath2()) ) {
                    alt76=2;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA76_2 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred160_Xpath2()) ) {
                    alt76=2;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 2, input);

                    throw nvae;

                }
                }
                break;
            case 12:
                {
                int LA76_3 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred169_Xpath2()) ) {
                    alt76=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 3, input);

                    throw nvae;

                }
                }
                break;
            case 13:
                {
                int LA76_4 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred170_Xpath2()) ) {
                    alt76=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 4, input);

                    throw nvae;

                }
                }
                break;
            case 19:
                {
                int LA76_5 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred171_Xpath2()) ) {
                    alt76=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 5, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA76_6 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred172_Xpath2()) ) {
                    alt76=14;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 6, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA76_7 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred173_Xpath2()) ) {
                    alt76=15;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 7, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA76_8 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred174_Xpath2()) ) {
                    alt76=16;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA76_9 = input.LA(2);

                if ( (synpred159_Xpath2()) ) {
                    alt76=1;
                }
                else if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (true) ) {
                    alt76=17;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 9, input);

                    throw nvae;

                }
                }
                break;
            case 21:
                {
                int LA76_10 = input.LA(2);

                if ( (synpred161_Xpath2()) ) {
                    alt76=3;
                }
                else if ( (synpred163_Xpath2()) ) {
                    alt76=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 10, input);

                    throw nvae;

                }
                }
                break;
            case 22:
                {
                alt76=4;
                }
                break;
            case 43:
                {
                int LA76_12 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 12, input);

                    throw nvae;

                }
                }
                break;
            case 45:
                {
                int LA76_13 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 13, input);

                    throw nvae;

                }
                }
                break;
            case 40:
                {
                int LA76_14 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 14, input);

                    throw nvae;

                }
                }
                break;
            case 83:
                {
                int LA76_15 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 15, input);

                    throw nvae;

                }
                }
                break;
            case 46:
                {
                int LA76_16 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 16, input);

                    throw nvae;

                }
                }
                break;
            case 56:
                {
                int LA76_17 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 17, input);

                    throw nvae;

                }
                }
                break;
            case 55:
                {
                int LA76_18 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 18, input);

                    throw nvae;

                }
                }
                break;
            case 70:
                {
                int LA76_19 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred165_Xpath2()) ) {
                    alt76=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 19, input);

                    throw nvae;

                }
                }
                break;
            case 33:
                {
                int LA76_20 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 20, input);

                    throw nvae;

                }
                }
                break;
            case 72:
                {
                int LA76_21 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 21, input);

                    throw nvae;

                }
                }
                break;
            case 48:
                {
                int LA76_22 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 22, input);

                    throw nvae;

                }
                }
                break;
            case 85:
                {
                int LA76_23 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 23, input);

                    throw nvae;

                }
                }
                break;
            case 44:
                {
                int LA76_24 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 24, input);

                    throw nvae;

                }
                }
                break;
            case 78:
                {
                int LA76_25 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 25, input);

                    throw nvae;

                }
                }
                break;
            case 81:
                {
                int LA76_26 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 26, input);

                    throw nvae;

                }
                }
                break;
            case 49:
                {
                int LA76_27 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 27, input);

                    throw nvae;

                }
                }
                break;
            case 82:
                {
                int LA76_28 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 28, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA76_29 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred166_Xpath2()) ) {
                    alt76=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 29, input);

                    throw nvae;

                }
                }
                break;
            case 75:
                {
                int LA76_30 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath2()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 30, input);

                    throw nvae;

                }
                }
                break;
            case 36:
                {
                int LA76_31 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath2()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 31, input);

                    throw nvae;

                }
                }
                break;
            case 77:
                {
                int LA76_32 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath2()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 32, input);

                    throw nvae;

                }
                }
                break;
            case 76:
                {
                int LA76_33 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath2()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 33, input);

                    throw nvae;

                }
                }
                break;
            case 37:
                {
                int LA76_34 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred167_Xpath2()) ) {
                    alt76=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 34, input);

                    throw nvae;

                }
                }
                break;
            case 20:
                {
                int LA76_35 = input.LA(2);

                if ( (synpred164_Xpath2()) ) {
                    alt76=6;
                }
                else if ( (synpred168_Xpath2()) ) {
                    alt76=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 35, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;

            }

            switch (alt76) {
                case 1 :
                    // Xpath2.g:9426:2: c0= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_PathExprChild8322);
                    c0=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9427:4: c1= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PathExprChild8332);
                    c1=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9428:4: c2= parse_org_emftext_language_xpath2_ChildStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8342);
                    c2=parse_org_emftext_language_xpath2_ChildStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:9429:4: c3= parse_org_emftext_language_xpath2_DescOrSelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8352);
                    c3=parse_org_emftext_language_xpath2_DescOrSelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:9430:4: c4= parse_org_emftext_language_xpath2_RootStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8362);
                    c4=parse_org_emftext_language_xpath2_RootStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:9431:4: c5= parse_org_emftext_language_xpath2_SelfStepExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8372);
                    c5=parse_org_emftext_language_xpath2_SelfStepExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:9432:4: c6= parse_org_emftext_language_xpath2_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_PathExprChild8382);
                    c6=parse_org_emftext_language_xpath2_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:9433:4: c7= parse_org_emftext_language_xpath2_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_PathExprChild8392);
                    c7=parse_org_emftext_language_xpath2_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:9434:4: c8= parse_org_emftext_language_xpath2_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_PathExprChild8402);
                    c8=parse_org_emftext_language_xpath2_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:9435:4: c9= parse_org_emftext_language_xpath2_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_PathExprChild8412);
                    c9=parse_org_emftext_language_xpath2_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:9436:4: c10= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PathExprChild8422);
                    c10=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath2.g:9437:4: c11= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PathExprChild8432);
                    c11=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath2.g:9438:4: c12= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PathExprChild8442);
                    c12=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath2.g:9439:4: c13= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8452);
                    c13=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath2.g:9440:4: c14= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8462);
                    c14=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 16 :
                    // Xpath2.g:9441:4: c15= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8472);
                    c15=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c15; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 17 :
                    // Xpath2.g:9442:4: c16= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8482);
                    c16=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c16; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 75, parse_org_emftext_language_xpath2_PathExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_PathExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_StepExpr"
    // Xpath2.g:9446:1: parse_org_emftext_language_xpath2_StepExpr returns [org.emftext.language.xpath2.StepExpr element = null] : (c0= parse_org_emftext_language_xpath2_FilterExpr |c1= parse_org_emftext_language_xpath2_GeneralForwardStep |c2= parse_org_emftext_language_xpath2_AbbrevForwardStep |c3= parse_org_emftext_language_xpath2_GeneralReverseStep |c4= parse_org_emftext_language_xpath2_AbbrevReverseStep );
    public final org.emftext.language.xpath2.StepExpr parse_org_emftext_language_xpath2_StepExpr() throws RecognitionException {
        org.emftext.language.xpath2.StepExpr element =  null;

        int parse_org_emftext_language_xpath2_StepExpr_StartIndex = input.index();

        org.emftext.language.xpath2.FilterExpr c0 =null;

        org.emftext.language.xpath2.GeneralForwardStep c1 =null;

        org.emftext.language.xpath2.AbbrevForwardStep c2 =null;

        org.emftext.language.xpath2.GeneralReverseStep c3 =null;

        org.emftext.language.xpath2.AbbrevReverseStep c4 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return element; }

            // Xpath2.g:9447:2: (c0= parse_org_emftext_language_xpath2_FilterExpr |c1= parse_org_emftext_language_xpath2_GeneralForwardStep |c2= parse_org_emftext_language_xpath2_AbbrevForwardStep |c3= parse_org_emftext_language_xpath2_GeneralReverseStep |c4= parse_org_emftext_language_xpath2_AbbrevReverseStep )
            int alt77=5;
            switch ( input.LA(1) ) {
            case QNAME:
                {
                int LA77_1 = input.LA(2);

                if ( (LA77_1==13) ) {
                    alt77=1;
                }
                else if ( (LA77_1==EOF||LA77_1==11||(LA77_1 >= 14 && LA77_1 <= 18)||(LA77_1 >= 21 && LA77_1 <= 22)||(LA77_1 >= 25 && LA77_1 <= 31)||(LA77_1 >= 34 && LA77_1 <= 35)||LA77_1==38||(LA77_1 >= 41 && LA77_1 <= 42)||LA77_1==47||LA77_1==50||LA77_1==52||LA77_1==54||(LA77_1 >= 58 && LA77_1 <= 60)||(LA77_1 >= 63 && LA77_1 <= 65)||(LA77_1 >= 67 && LA77_1 <= 69)||LA77_1==71||LA77_1==74||(LA77_1 >= 79 && LA77_1 <= 80)||(LA77_1 >= 87 && LA77_1 <= 90)) ) {
                    alt77=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 1, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA77_2 = input.LA(2);

                if ( (LA77_2==13) ) {
                    alt77=1;
                }
                else if ( (LA77_2==EOF||LA77_2==11||(LA77_2 >= 14 && LA77_2 <= 18)||(LA77_2 >= 21 && LA77_2 <= 23)||(LA77_2 >= 25 && LA77_2 <= 31)||(LA77_2 >= 34 && LA77_2 <= 35)||LA77_2==38||(LA77_2 >= 41 && LA77_2 <= 42)||LA77_2==47||LA77_2==50||LA77_2==52||LA77_2==54||(LA77_2 >= 58 && LA77_2 <= 60)||(LA77_2 >= 63 && LA77_2 <= 65)||(LA77_2 >= 67 && LA77_2 <= 69)||LA77_2==71||LA77_2==74||(LA77_2 >= 79 && LA77_2 <= 80)||(LA77_2 >= 87 && LA77_2 <= 90)) ) {
                    alt77=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 2, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
            case DOUBLE_LITERAL:
            case INTEGER_LITERAL:
            case STRING_LITERAL:
            case 12:
            case 13:
            case 19:
                {
                alt77=1;
                }
                break;
            case 43:
            case 45:
            case 46:
            case 55:
            case 56:
            case 70:
            case 83:
                {
                alt77=2;
                }
                break;
            case 40:
                {
                int LA77_5 = input.LA(2);

                if ( (LA77_5==24) ) {
                    alt77=2;
                }
                else if ( (LA77_5==13) ) {
                    alt77=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 77, 5, input);

                    throw nvae;

                }
                }
                break;
            case 15:
            case 33:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt77=3;
                }
                break;
            case 36:
            case 37:
            case 75:
            case 76:
            case 77:
                {
                alt77=4;
                }
                break;
            case 20:
                {
                alt77=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;

            }

            switch (alt77) {
                case 1 :
                    // Xpath2.g:9448:2: c0= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_StepExpr8503);
                    c0=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9449:4: c1= parse_org_emftext_language_xpath2_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_StepExpr8513);
                    c1=parse_org_emftext_language_xpath2_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9450:4: c2= parse_org_emftext_language_xpath2_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_StepExpr8523);
                    c2=parse_org_emftext_language_xpath2_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:9451:4: c3= parse_org_emftext_language_xpath2_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_StepExpr8533);
                    c3=parse_org_emftext_language_xpath2_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:9452:4: c4= parse_org_emftext_language_xpath2_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_StepExpr8543);
                    c4=parse_org_emftext_language_xpath2_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 76, parse_org_emftext_language_xpath2_StepExpr_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_StepExpr"



    // $ANTLR start "parse_org_emftext_language_xpath2_SelfStepExprChild"
    // Xpath2.g:9456:1: parse_org_emftext_language_xpath2_SelfStepExprChild returns [org.emftext.language.xpath2.SelfStepExprChild element = null] : (c0= parse_org_emftext_language_xpath2_FilterExpr |c1= parse_org_emftext_language_xpath2_FunctionCall |c2= parse_org_emftext_language_xpath2_GeneralForwardStep |c3= parse_org_emftext_language_xpath2_AbbrevForwardStep |c4= parse_org_emftext_language_xpath2_GeneralReverseStep |c5= parse_org_emftext_language_xpath2_AbbrevReverseStep |c6= parse_org_emftext_language_xpath2_VarRef |c7= parse_org_emftext_language_xpath2_ParenthesizedExpr |c8= parse_org_emftext_language_xpath2_ContextItemExpr |c9= parse_org_emftext_language_xpath2_IntegerLiteral |c10= parse_org_emftext_language_xpath2_DecimalLiteral |c11= parse_org_emftext_language_xpath2_DoubleLiteral |c12= parse_org_emftext_language_xpath2_StringLiteral );
    public final org.emftext.language.xpath2.SelfStepExprChild parse_org_emftext_language_xpath2_SelfStepExprChild() throws RecognitionException {
        org.emftext.language.xpath2.SelfStepExprChild element =  null;

        int parse_org_emftext_language_xpath2_SelfStepExprChild_StartIndex = input.index();

        org.emftext.language.xpath2.FilterExpr c0 =null;

        org.emftext.language.xpath2.FunctionCall c1 =null;

        org.emftext.language.xpath2.GeneralForwardStep c2 =null;

        org.emftext.language.xpath2.AbbrevForwardStep c3 =null;

        org.emftext.language.xpath2.GeneralReverseStep c4 =null;

        org.emftext.language.xpath2.AbbrevReverseStep c5 =null;

        org.emftext.language.xpath2.VarRef c6 =null;

        org.emftext.language.xpath2.ParenthesizedExpr c7 =null;

        org.emftext.language.xpath2.ContextItemExpr c8 =null;

        org.emftext.language.xpath2.IntegerLiteral c9 =null;

        org.emftext.language.xpath2.DecimalLiteral c10 =null;

        org.emftext.language.xpath2.DoubleLiteral c11 =null;

        org.emftext.language.xpath2.StringLiteral c12 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return element; }

            // Xpath2.g:9457:2: (c0= parse_org_emftext_language_xpath2_FilterExpr |c1= parse_org_emftext_language_xpath2_FunctionCall |c2= parse_org_emftext_language_xpath2_GeneralForwardStep |c3= parse_org_emftext_language_xpath2_AbbrevForwardStep |c4= parse_org_emftext_language_xpath2_GeneralReverseStep |c5= parse_org_emftext_language_xpath2_AbbrevReverseStep |c6= parse_org_emftext_language_xpath2_VarRef |c7= parse_org_emftext_language_xpath2_ParenthesizedExpr |c8= parse_org_emftext_language_xpath2_ContextItemExpr |c9= parse_org_emftext_language_xpath2_IntegerLiteral |c10= parse_org_emftext_language_xpath2_DecimalLiteral |c11= parse_org_emftext_language_xpath2_DoubleLiteral |c12= parse_org_emftext_language_xpath2_StringLiteral )
            int alt78=13;
            switch ( input.LA(1) ) {
            case QNAME:
                {
                int LA78_1 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred180_Xpath2()) ) {
                    alt78=2;
                }
                else if ( (synpred182_Xpath2()) ) {
                    alt78=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 1, input);

                    throw nvae;

                }
                }
                break;
            case NCNAME:
                {
                int LA78_2 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred180_Xpath2()) ) {
                    alt78=2;
                }
                else if ( (synpred182_Xpath2()) ) {
                    alt78=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 2, input);

                    throw nvae;

                }
                }
                break;
            case 12:
                {
                int LA78_3 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred185_Xpath2()) ) {
                    alt78=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 3, input);

                    throw nvae;

                }
                }
                break;
            case 13:
                {
                int LA78_4 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred186_Xpath2()) ) {
                    alt78=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 4, input);

                    throw nvae;

                }
                }
                break;
            case 19:
                {
                int LA78_5 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred187_Xpath2()) ) {
                    alt78=9;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 5, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA78_6 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred188_Xpath2()) ) {
                    alt78=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 6, input);

                    throw nvae;

                }
                }
                break;
            case DECIMAL_LITERAL:
                {
                int LA78_7 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred189_Xpath2()) ) {
                    alt78=11;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 7, input);

                    throw nvae;

                }
                }
                break;
            case DOUBLE_LITERAL:
                {
                int LA78_8 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (synpred190_Xpath2()) ) {
                    alt78=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA78_9 = input.LA(2);

                if ( (synpred179_Xpath2()) ) {
                    alt78=1;
                }
                else if ( (true) ) {
                    alt78=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 9, input);

                    throw nvae;

                }
                }
                break;
            case 43:
            case 45:
            case 46:
            case 55:
            case 56:
            case 70:
            case 83:
                {
                alt78=3;
                }
                break;
            case 40:
                {
                int LA78_12 = input.LA(2);

                if ( (synpred181_Xpath2()) ) {
                    alt78=3;
                }
                else if ( (synpred182_Xpath2()) ) {
                    alt78=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 12, input);

                    throw nvae;

                }
                }
                break;
            case 15:
            case 33:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt78=4;
                }
                break;
            case 36:
            case 37:
            case 75:
            case 76:
            case 77:
                {
                alt78=5;
                }
                break;
            case 20:
                {
                alt78=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;

            }

            switch (alt78) {
                case 1 :
                    // Xpath2.g:9458:2: c0= parse_org_emftext_language_xpath2_FilterExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild8564);
                    c0=parse_org_emftext_language_xpath2_FilterExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9459:4: c1= parse_org_emftext_language_xpath2_FunctionCall
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_SelfStepExprChild8574);
                    c1=parse_org_emftext_language_xpath2_FunctionCall();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9460:4: c2= parse_org_emftext_language_xpath2_GeneralForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8584);
                    c2=parse_org_emftext_language_xpath2_GeneralForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:9461:4: c3= parse_org_emftext_language_xpath2_AbbrevForwardStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8594);
                    c3=parse_org_emftext_language_xpath2_AbbrevForwardStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:9462:4: c4= parse_org_emftext_language_xpath2_GeneralReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8604);
                    c4=parse_org_emftext_language_xpath2_GeneralReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:9463:4: c5= parse_org_emftext_language_xpath2_AbbrevReverseStep
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8614);
                    c5=parse_org_emftext_language_xpath2_AbbrevReverseStep();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:9464:4: c6= parse_org_emftext_language_xpath2_VarRef
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_SelfStepExprChild8624);
                    c6=parse_org_emftext_language_xpath2_VarRef();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:9465:4: c7= parse_org_emftext_language_xpath2_ParenthesizedExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild8634);
                    c7=parse_org_emftext_language_xpath2_ParenthesizedExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:9466:4: c8= parse_org_emftext_language_xpath2_ContextItemExpr
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild8644);
                    c8=parse_org_emftext_language_xpath2_ContextItemExpr();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:9467:4: c9= parse_org_emftext_language_xpath2_IntegerLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8654);
                    c9=parse_org_emftext_language_xpath2_IntegerLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:9468:4: c10= parse_org_emftext_language_xpath2_DecimalLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8664);
                    c10=parse_org_emftext_language_xpath2_DecimalLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath2.g:9469:4: c11= parse_org_emftext_language_xpath2_DoubleLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8674);
                    c11=parse_org_emftext_language_xpath2_DoubleLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath2.g:9470:4: c12= parse_org_emftext_language_xpath2_StringLiteral
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8684);
                    c12=parse_org_emftext_language_xpath2_StringLiteral();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 77, parse_org_emftext_language_xpath2_SelfStepExprChild_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_SelfStepExprChild"



    // $ANTLR start "parse_org_emftext_language_xpath2_NodeTest"
    // Xpath2.g:9474:1: parse_org_emftext_language_xpath2_NodeTest returns [org.emftext.language.xpath2.NodeTest element = null] : (c0= parse_org_emftext_language_xpath2_NodeKindTest |c1= parse_org_emftext_language_xpath2_QNameTest |c2= parse_org_emftext_language_xpath2_AnyWildcard |c3= parse_org_emftext_language_xpath2_LocalNameWildcard |c4= parse_org_emftext_language_xpath2_NamespaceWildcard );
    public final org.emftext.language.xpath2.NodeTest parse_org_emftext_language_xpath2_NodeTest() throws RecognitionException {
        org.emftext.language.xpath2.NodeTest element =  null;

        int parse_org_emftext_language_xpath2_NodeTest_StartIndex = input.index();

        org.emftext.language.xpath2.NodeKindTest c0 =null;

        org.emftext.language.xpath2.QNameTest c1 =null;

        org.emftext.language.xpath2.AnyWildcard c2 =null;

        org.emftext.language.xpath2.LocalNameWildcard c3 =null;

        org.emftext.language.xpath2.NamespaceWildcard c4 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return element; }

            // Xpath2.g:9475:2: (c0= parse_org_emftext_language_xpath2_NodeKindTest |c1= parse_org_emftext_language_xpath2_QNameTest |c2= parse_org_emftext_language_xpath2_AnyWildcard |c3= parse_org_emftext_language_xpath2_LocalNameWildcard |c4= parse_org_emftext_language_xpath2_NamespaceWildcard )
            int alt79=5;
            switch ( input.LA(1) ) {
            case 40:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt79=1;
                }
                break;
            case QNAME:
                {
                alt79=2;
                }
                break;
            case NCNAME:
                {
                int LA79_3 = input.LA(2);

                if ( (LA79_3==EOF||LA79_3==11||(LA79_3 >= 14 && LA79_3 <= 18)||(LA79_3 >= 21 && LA79_3 <= 22)||(LA79_3 >= 25 && LA79_3 <= 31)||(LA79_3 >= 34 && LA79_3 <= 35)||LA79_3==38||(LA79_3 >= 41 && LA79_3 <= 42)||LA79_3==47||LA79_3==50||LA79_3==52||LA79_3==54||(LA79_3 >= 58 && LA79_3 <= 60)||(LA79_3 >= 63 && LA79_3 <= 65)||(LA79_3 >= 67 && LA79_3 <= 69)||LA79_3==71||LA79_3==74||(LA79_3 >= 79 && LA79_3 <= 80)||(LA79_3 >= 87 && LA79_3 <= 90)) ) {
                    alt79=2;
                }
                else if ( (LA79_3==23) ) {
                    alt79=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 3, input);

                    throw nvae;

                }
                }
                break;
            case 15:
                {
                int LA79_4 = input.LA(2);

                if ( (LA79_4==EOF||LA79_4==11||(LA79_4 >= 14 && LA79_4 <= 18)||(LA79_4 >= 21 && LA79_4 <= 22)||(LA79_4 >= 25 && LA79_4 <= 31)||(LA79_4 >= 34 && LA79_4 <= 35)||LA79_4==38||(LA79_4 >= 41 && LA79_4 <= 42)||LA79_4==47||LA79_4==50||LA79_4==52||LA79_4==54||(LA79_4 >= 58 && LA79_4 <= 60)||(LA79_4 >= 63 && LA79_4 <= 65)||(LA79_4 >= 67 && LA79_4 <= 69)||LA79_4==71||LA79_4==74||(LA79_4 >= 79 && LA79_4 <= 80)||(LA79_4 >= 87 && LA79_4 <= 90)) ) {
                    alt79=3;
                }
                else if ( (LA79_4==23) ) {
                    alt79=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 79, 4, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;

            }

            switch (alt79) {
                case 1 :
                    // Xpath2.g:9476:2: c0= parse_org_emftext_language_xpath2_NodeKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NodeKindTest_in_parse_org_emftext_language_xpath2_NodeTest8705);
                    c0=parse_org_emftext_language_xpath2_NodeKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9477:4: c1= parse_org_emftext_language_xpath2_QNameTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QNameTest_in_parse_org_emftext_language_xpath2_NodeTest8715);
                    c1=parse_org_emftext_language_xpath2_QNameTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9478:4: c2= parse_org_emftext_language_xpath2_AnyWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyWildcard_in_parse_org_emftext_language_xpath2_NodeTest8725);
                    c2=parse_org_emftext_language_xpath2_AnyWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:9479:4: c3= parse_org_emftext_language_xpath2_LocalNameWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_LocalNameWildcard_in_parse_org_emftext_language_xpath2_NodeTest8735);
                    c3=parse_org_emftext_language_xpath2_LocalNameWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:9480:4: c4= parse_org_emftext_language_xpath2_NamespaceWildcard
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NamespaceWildcard_in_parse_org_emftext_language_xpath2_NodeTest8745);
                    c4=parse_org_emftext_language_xpath2_NamespaceWildcard();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 78, parse_org_emftext_language_xpath2_NodeTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_NodeTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_KindTest"
    // Xpath2.g:9484:1: parse_org_emftext_language_xpath2_KindTest returns [org.emftext.language.xpath2.KindTest element = null] : (c0= parse_org_emftext_language_xpath2_AnyKindTest |c1= parse_org_emftext_language_xpath2_DocumentTest |c2= parse_org_emftext_language_xpath2_TextTest |c3= parse_org_emftext_language_xpath2_CommentTest |c4= parse_org_emftext_language_xpath2_PITest |c5= parse_org_emftext_language_xpath2_NCNamePITest |c6= parse_org_emftext_language_xpath2_StringLiteralPITest |c7= parse_org_emftext_language_xpath2_AttributeTest |c8= parse_org_emftext_language_xpath2_WildcardAttributeTest |c9= parse_org_emftext_language_xpath2_NameAttributeTest |c10= parse_org_emftext_language_xpath2_SchemaAttributeTest |c11= parse_org_emftext_language_xpath2_ElementTest |c12= parse_org_emftext_language_xpath2_WildcardElementTest |c13= parse_org_emftext_language_xpath2_NameElementTest |c14= parse_org_emftext_language_xpath2_SchemaElementTest );
    public final org.emftext.language.xpath2.KindTest parse_org_emftext_language_xpath2_KindTest() throws RecognitionException {
        org.emftext.language.xpath2.KindTest element =  null;

        int parse_org_emftext_language_xpath2_KindTest_StartIndex = input.index();

        org.emftext.language.xpath2.AnyKindTest c0 =null;

        org.emftext.language.xpath2.DocumentTest c1 =null;

        org.emftext.language.xpath2.TextTest c2 =null;

        org.emftext.language.xpath2.CommentTest c3 =null;

        org.emftext.language.xpath2.PITest c4 =null;

        org.emftext.language.xpath2.NCNamePITest c5 =null;

        org.emftext.language.xpath2.StringLiteralPITest c6 =null;

        org.emftext.language.xpath2.AttributeTest c7 =null;

        org.emftext.language.xpath2.WildcardAttributeTest c8 =null;

        org.emftext.language.xpath2.NameAttributeTest c9 =null;

        org.emftext.language.xpath2.SchemaAttributeTest c10 =null;

        org.emftext.language.xpath2.ElementTest c11 =null;

        org.emftext.language.xpath2.WildcardElementTest c12 =null;

        org.emftext.language.xpath2.NameElementTest c13 =null;

        org.emftext.language.xpath2.SchemaElementTest c14 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return element; }

            // Xpath2.g:9485:2: (c0= parse_org_emftext_language_xpath2_AnyKindTest |c1= parse_org_emftext_language_xpath2_DocumentTest |c2= parse_org_emftext_language_xpath2_TextTest |c3= parse_org_emftext_language_xpath2_CommentTest |c4= parse_org_emftext_language_xpath2_PITest |c5= parse_org_emftext_language_xpath2_NCNamePITest |c6= parse_org_emftext_language_xpath2_StringLiteralPITest |c7= parse_org_emftext_language_xpath2_AttributeTest |c8= parse_org_emftext_language_xpath2_WildcardAttributeTest |c9= parse_org_emftext_language_xpath2_NameAttributeTest |c10= parse_org_emftext_language_xpath2_SchemaAttributeTest |c11= parse_org_emftext_language_xpath2_ElementTest |c12= parse_org_emftext_language_xpath2_WildcardElementTest |c13= parse_org_emftext_language_xpath2_NameElementTest |c14= parse_org_emftext_language_xpath2_SchemaElementTest )
            int alt80=15;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt80=1;
                }
                break;
            case 48:
                {
                alt80=2;
                }
                break;
            case 85:
                {
                alt80=3;
                }
                break;
            case 44:
                {
                alt80=4;
                }
                break;
            case 78:
                {
                int LA80_5 = input.LA(2);

                if ( (LA80_5==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt80=5;
                        }
                        break;
                    case NCNAME:
                        {
                        int LA80_14 = input.LA(4);

                        if ( (LA80_14==14) ) {
                            int LA80_24 = input.LA(5);

                            if ( (synpred199_Xpath2()) ) {
                                alt80=5;
                            }
                            else if ( (synpred200_Xpath2()) ) {
                                alt80=6;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 24, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 14, input);

                            throw nvae;

                        }
                        }
                        break;
                    case STRING_LITERAL:
                        {
                        int LA80_15 = input.LA(4);

                        if ( (LA80_15==14) ) {
                            int LA80_25 = input.LA(5);

                            if ( (synpred199_Xpath2()) ) {
                                alt80=5;
                            }
                            else if ( (synpred201_Xpath2()) ) {
                                alt80=7;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 25, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 15, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 10, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 5, input);

                    throw nvae;

                }
                }
                break;
            case 40:
                {
                int LA80_6 = input.LA(2);

                if ( (LA80_6==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt80=8;
                        }
                        break;
                    case 15:
                        {
                        int LA80_17 = input.LA(4);

                        if ( (LA80_17==17) ) {
                            int LA80_26 = input.LA(5);

                            if ( (LA80_26==QNAME) ) {
                                int LA80_36 = input.LA(6);

                                if ( (LA80_36==14) ) {
                                    int LA80_27 = input.LA(7);

                                    if ( (synpred202_Xpath2()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred203_Xpath2()) ) {
                                        alt80=9;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 27, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 36, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_26==NCNAME) ) {
                                int LA80_37 = input.LA(6);

                                if ( (LA80_37==14) ) {
                                    int LA80_27 = input.LA(7);

                                    if ( (synpred202_Xpath2()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred203_Xpath2()) ) {
                                        alt80=9;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 27, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 37, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 26, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_17==14) ) {
                            int LA80_27 = input.LA(5);

                            if ( (synpred202_Xpath2()) ) {
                                alt80=8;
                            }
                            else if ( (synpred203_Xpath2()) ) {
                                alt80=9;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 27, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 17, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QNAME:
                        {
                        int LA80_18 = input.LA(4);

                        if ( (LA80_18==17) ) {
                            int LA80_28 = input.LA(5);

                            if ( (LA80_28==QNAME) ) {
                                int LA80_39 = input.LA(6);

                                if ( (LA80_39==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath2()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath2()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 39, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_28==NCNAME) ) {
                                int LA80_40 = input.LA(6);

                                if ( (LA80_40==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath2()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath2()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 40, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 28, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_18==14) ) {
                            int LA80_29 = input.LA(5);

                            if ( (synpred202_Xpath2()) ) {
                                alt80=8;
                            }
                            else if ( (synpred204_Xpath2()) ) {
                                alt80=10;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 29, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 18, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        int LA80_19 = input.LA(4);

                        if ( (LA80_19==17) ) {
                            int LA80_28 = input.LA(5);

                            if ( (LA80_28==QNAME) ) {
                                int LA80_39 = input.LA(6);

                                if ( (LA80_39==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath2()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath2()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 39, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_28==NCNAME) ) {
                                int LA80_40 = input.LA(6);

                                if ( (LA80_40==14) ) {
                                    int LA80_29 = input.LA(7);

                                    if ( (synpred202_Xpath2()) ) {
                                        alt80=8;
                                    }
                                    else if ( (synpred204_Xpath2()) ) {
                                        alt80=10;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 29, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 40, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 28, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_19==14) ) {
                            int LA80_29 = input.LA(5);

                            if ( (synpred202_Xpath2()) ) {
                                alt80=8;
                            }
                            else if ( (synpred204_Xpath2()) ) {
                                alt80=10;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 29, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 19, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 11, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 6, input);

                    throw nvae;

                }
                }
                break;
            case 81:
                {
                alt80=11;
                }
                break;
            case 49:
                {
                int LA80_8 = input.LA(2);

                if ( (LA80_8==13) ) {
                    switch ( input.LA(3) ) {
                    case 14:
                        {
                        alt80=12;
                        }
                        break;
                    case 15:
                        {
                        int LA80_21 = input.LA(4);

                        if ( (LA80_21==17) ) {
                            int LA80_30 = input.LA(5);

                            if ( (LA80_30==QNAME) ) {
                                int LA80_42 = input.LA(6);

                                if ( (LA80_42==32) ) {
                                    int LA80_48 = input.LA(7);

                                    if ( (LA80_48==14) ) {
                                        int LA80_31 = input.LA(8);

                                        if ( (synpred206_Xpath2()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred207_Xpath2()) ) {
                                            alt80=13;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 31, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 48, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_42==14) ) {
                                    int LA80_31 = input.LA(7);

                                    if ( (synpred206_Xpath2()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred207_Xpath2()) ) {
                                        alt80=13;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 31, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 42, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_30==NCNAME) ) {
                                int LA80_43 = input.LA(6);

                                if ( (LA80_43==32) ) {
                                    int LA80_48 = input.LA(7);

                                    if ( (LA80_48==14) ) {
                                        int LA80_31 = input.LA(8);

                                        if ( (synpred206_Xpath2()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred207_Xpath2()) ) {
                                            alt80=13;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 31, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 48, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_43==14) ) {
                                    int LA80_31 = input.LA(7);

                                    if ( (synpred206_Xpath2()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred207_Xpath2()) ) {
                                        alt80=13;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 31, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 43, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 30, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_21==14) ) {
                            int LA80_31 = input.LA(5);

                            if ( (synpred206_Xpath2()) ) {
                                alt80=12;
                            }
                            else if ( (synpred207_Xpath2()) ) {
                                alt80=13;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 31, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 21, input);

                            throw nvae;

                        }
                        }
                        break;
                    case QNAME:
                        {
                        int LA80_22 = input.LA(4);

                        if ( (LA80_22==17) ) {
                            int LA80_32 = input.LA(5);

                            if ( (LA80_32==QNAME) ) {
                                int LA80_45 = input.LA(6);

                                if ( (LA80_45==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath2()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath2()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_45==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath2()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath2()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 45, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_32==NCNAME) ) {
                                int LA80_46 = input.LA(6);

                                if ( (LA80_46==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath2()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath2()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_46==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath2()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath2()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 46, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 32, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_22==14) ) {
                            int LA80_33 = input.LA(5);

                            if ( (synpred206_Xpath2()) ) {
                                alt80=12;
                            }
                            else if ( (synpred208_Xpath2()) ) {
                                alt80=14;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 33, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 22, input);

                            throw nvae;

                        }
                        }
                        break;
                    case NCNAME:
                        {
                        int LA80_23 = input.LA(4);

                        if ( (LA80_23==17) ) {
                            int LA80_32 = input.LA(5);

                            if ( (LA80_32==QNAME) ) {
                                int LA80_45 = input.LA(6);

                                if ( (LA80_45==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath2()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath2()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_45==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath2()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath2()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 45, input);

                                    throw nvae;

                                }
                            }
                            else if ( (LA80_32==NCNAME) ) {
                                int LA80_46 = input.LA(6);

                                if ( (LA80_46==32) ) {
                                    int LA80_49 = input.LA(7);

                                    if ( (LA80_49==14) ) {
                                        int LA80_33 = input.LA(8);

                                        if ( (synpred206_Xpath2()) ) {
                                            alt80=12;
                                        }
                                        else if ( (synpred208_Xpath2()) ) {
                                            alt80=14;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return element;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 80, 33, input);

                                            throw nvae;

                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 49, input);

                                        throw nvae;

                                    }
                                }
                                else if ( (LA80_46==14) ) {
                                    int LA80_33 = input.LA(7);

                                    if ( (synpred206_Xpath2()) ) {
                                        alt80=12;
                                    }
                                    else if ( (synpred208_Xpath2()) ) {
                                        alt80=14;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return element;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 80, 33, input);

                                        throw nvae;

                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return element;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 80, 46, input);

                                    throw nvae;

                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 32, input);

                                throw nvae;

                            }
                        }
                        else if ( (LA80_23==14) ) {
                            int LA80_33 = input.LA(5);

                            if ( (synpred206_Xpath2()) ) {
                                alt80=12;
                            }
                            else if ( (synpred208_Xpath2()) ) {
                                alt80=14;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return element;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 33, input);

                                throw nvae;

                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 80, 23, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 12, input);

                        throw nvae;

                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 8, input);

                    throw nvae;

                }
                }
                break;
            case 82:
                {
                alt80=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;

            }

            switch (alt80) {
                case 1 :
                    // Xpath2.g:9486:2: c0= parse_org_emftext_language_xpath2_AnyKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyKindTest_in_parse_org_emftext_language_xpath2_KindTest8766);
                    c0=parse_org_emftext_language_xpath2_AnyKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9487:4: c1= parse_org_emftext_language_xpath2_DocumentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DocumentTest_in_parse_org_emftext_language_xpath2_KindTest8776);
                    c1=parse_org_emftext_language_xpath2_DocumentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9488:4: c2= parse_org_emftext_language_xpath2_TextTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TextTest_in_parse_org_emftext_language_xpath2_KindTest8786);
                    c2=parse_org_emftext_language_xpath2_TextTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Xpath2.g:9489:4: c3= parse_org_emftext_language_xpath2_CommentTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CommentTest_in_parse_org_emftext_language_xpath2_KindTest8796);
                    c3=parse_org_emftext_language_xpath2_CommentTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Xpath2.g:9490:4: c4= parse_org_emftext_language_xpath2_PITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PITest_in_parse_org_emftext_language_xpath2_KindTest8806);
                    c4=parse_org_emftext_language_xpath2_PITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Xpath2.g:9491:4: c5= parse_org_emftext_language_xpath2_NCNamePITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_KindTest8816);
                    c5=parse_org_emftext_language_xpath2_NCNamePITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Xpath2.g:9492:4: c6= parse_org_emftext_language_xpath2_StringLiteralPITest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_KindTest8826);
                    c6=parse_org_emftext_language_xpath2_StringLiteralPITest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Xpath2.g:9493:4: c7= parse_org_emftext_language_xpath2_AttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_parse_org_emftext_language_xpath2_KindTest8836);
                    c7=parse_org_emftext_language_xpath2_AttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Xpath2.g:9494:4: c8= parse_org_emftext_language_xpath2_WildcardAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_KindTest8846);
                    c8=parse_org_emftext_language_xpath2_WildcardAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Xpath2.g:9495:4: c9= parse_org_emftext_language_xpath2_NameAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_KindTest8856);
                    c9=parse_org_emftext_language_xpath2_NameAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Xpath2.g:9496:4: c10= parse_org_emftext_language_xpath2_SchemaAttributeTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaAttributeTest_in_parse_org_emftext_language_xpath2_KindTest8866);
                    c10=parse_org_emftext_language_xpath2_SchemaAttributeTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Xpath2.g:9497:4: c11= parse_org_emftext_language_xpath2_ElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_KindTest8876);
                    c11=parse_org_emftext_language_xpath2_ElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Xpath2.g:9498:4: c12= parse_org_emftext_language_xpath2_WildcardElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_KindTest8886);
                    c12=parse_org_emftext_language_xpath2_WildcardElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Xpath2.g:9499:4: c13= parse_org_emftext_language_xpath2_NameElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_KindTest8896);
                    c13=parse_org_emftext_language_xpath2_NameElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Xpath2.g:9500:4: c14= parse_org_emftext_language_xpath2_SchemaElementTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_KindTest8906);
                    c14=parse_org_emftext_language_xpath2_SchemaElementTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 79, parse_org_emftext_language_xpath2_KindTest_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_KindTest"



    // $ANTLR start "parse_org_emftext_language_xpath2_ItemType"
    // Xpath2.g:9504:1: parse_org_emftext_language_xpath2_ItemType returns [org.emftext.language.xpath2.ItemType element = null] : (c0= parse_org_emftext_language_xpath2_ItemKindTest |c1= parse_org_emftext_language_xpath2_AnyItemType |c2= parse_org_emftext_language_xpath2_AtomicItemType );
    public final org.emftext.language.xpath2.ItemType parse_org_emftext_language_xpath2_ItemType() throws RecognitionException {
        org.emftext.language.xpath2.ItemType element =  null;

        int parse_org_emftext_language_xpath2_ItemType_StartIndex = input.index();

        org.emftext.language.xpath2.ItemKindTest c0 =null;

        org.emftext.language.xpath2.AnyItemType c1 =null;

        org.emftext.language.xpath2.AtomicItemType c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return element; }

            // Xpath2.g:9505:2: (c0= parse_org_emftext_language_xpath2_ItemKindTest |c1= parse_org_emftext_language_xpath2_AnyItemType |c2= parse_org_emftext_language_xpath2_AtomicItemType )
            int alt81=3;
            switch ( input.LA(1) ) {
            case 40:
            case 44:
            case 48:
            case 49:
            case 72:
            case 78:
            case 81:
            case 82:
            case 85:
                {
                alt81=1;
                }
                break;
            case 66:
                {
                alt81=2;
                }
                break;
            case NCNAME:
            case QNAME:
                {
                alt81=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;

            }

            switch (alt81) {
                case 1 :
                    // Xpath2.g:9506:2: c0= parse_org_emftext_language_xpath2_ItemKindTest
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ItemKindTest_in_parse_org_emftext_language_xpath2_ItemType8927);
                    c0=parse_org_emftext_language_xpath2_ItemKindTest();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Xpath2.g:9507:4: c1= parse_org_emftext_language_xpath2_AnyItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AnyItemType_in_parse_org_emftext_language_xpath2_ItemType8937);
                    c1=parse_org_emftext_language_xpath2_AnyItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Xpath2.g:9508:4: c2= parse_org_emftext_language_xpath2_AtomicItemType
                    {
                    pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AtomicItemType_in_parse_org_emftext_language_xpath2_ItemType8947);
                    c2=parse_org_emftext_language_xpath2_AtomicItemType();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 80, parse_org_emftext_language_xpath2_ItemType_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_org_emftext_language_xpath2_ItemType"

    // $ANTLR start synpred18_Xpath2
    public final void synpred18_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.Expr a2_0 =null;


        // Xpath2.g:1632:3: (a2_0= parse_org_emftext_language_xpath2_Expr )
        // Xpath2.g:1632:3: a2_0= parse_org_emftext_language_xpath2_Expr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_Expr_in_synpred18_Xpath2949);
        a2_0=parse_org_emftext_language_xpath2_Expr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Xpath2

    // $ANTLR start synpred19_Xpath2
    public final void synpred19_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IfExpr a2_1 =null;


        // Xpath2.g:1651:6: (a2_1= parse_org_emftext_language_xpath2_IfExpr )
        // Xpath2.g:1651:6: a2_1= parse_org_emftext_language_xpath2_IfExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_synpred19_Xpath2963);
        a2_1=parse_org_emftext_language_xpath2_IfExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Xpath2

    // $ANTLR start synpred20_Xpath2
    public final void synpred20_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ForExpr a2_2 =null;


        // Xpath2.g:1670:6: (a2_2= parse_org_emftext_language_xpath2_ForExpr )
        // Xpath2.g:1670:6: a2_2= parse_org_emftext_language_xpath2_ForExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_synpred20_Xpath2977);
        a2_2=parse_org_emftext_language_xpath2_ForExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Xpath2

    // $ANTLR start synpred21_Xpath2
    public final void synpred21_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.QuantifiedExpr a2_3 =null;


        // Xpath2.g:1689:6: (a2_3= parse_org_emftext_language_xpath2_QuantifiedExpr )
        // Xpath2.g:1689:6: a2_3= parse_org_emftext_language_xpath2_QuantifiedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_synpred21_Xpath2991);
        a2_3=parse_org_emftext_language_xpath2_QuantifiedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Xpath2

    // $ANTLR start synpred93_Xpath2
    public final void synpred93_Xpath2_fragment() throws RecognitionException {
        Token a2=null;

        // Xpath2.g:6777:8: (a2= '*' )
        // Xpath2.g:6777:8: a2= '*'
        {
        a2=(Token)match(input,15,FOLLOW_15_in_synpred93_Xpath25365); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred93_Xpath2

    // $ANTLR start synpred94_Xpath2
    public final void synpred94_Xpath2_fragment() throws RecognitionException {
        Token a3=null;

        // Xpath2.g:6793:8: (a3= '+' )
        // Xpath2.g:6793:8: a3= '+'
        {
        a3=(Token)match(input,16,FOLLOW_16_in_synpred94_Xpath25380); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred94_Xpath2

    // $ANTLR start synpred119_Xpath2
    public final void synpred119_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.OrExpr c3 =null;


        // Xpath2.g:9356:4: (c3= parse_org_emftext_language_xpath2_OrExpr )
        // Xpath2.g:9356:4: c3= parse_org_emftext_language_xpath2_OrExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_synpred119_Xpath27817);
        c3=parse_org_emftext_language_xpath2_OrExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred119_Xpath2

    // $ANTLR start synpred120_Xpath2
    public final void synpred120_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AndExpr c4 =null;


        // Xpath2.g:9357:4: (c4= parse_org_emftext_language_xpath2_AndExpr )
        // Xpath2.g:9357:4: c4= parse_org_emftext_language_xpath2_AndExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred120_Xpath27827);
        c4=parse_org_emftext_language_xpath2_AndExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred120_Xpath2

    // $ANTLR start synpred121_Xpath2
    public final void synpred121_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ComparisonExpr c5 =null;


        // Xpath2.g:9358:4: (c5= parse_org_emftext_language_xpath2_ComparisonExpr )
        // Xpath2.g:9358:4: c5= parse_org_emftext_language_xpath2_ComparisonExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred121_Xpath27837);
        c5=parse_org_emftext_language_xpath2_ComparisonExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred121_Xpath2

    // $ANTLR start synpred122_Xpath2
    public final void synpred122_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RangeExpr c6 =null;


        // Xpath2.g:9359:4: (c6= parse_org_emftext_language_xpath2_RangeExpr )
        // Xpath2.g:9359:4: c6= parse_org_emftext_language_xpath2_RangeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred122_Xpath27847);
        c6=parse_org_emftext_language_xpath2_RangeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred122_Xpath2

    // $ANTLR start synpred123_Xpath2
    public final void synpred123_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AdditiveExpr c7 =null;


        // Xpath2.g:9360:4: (c7= parse_org_emftext_language_xpath2_AdditiveExpr )
        // Xpath2.g:9360:4: c7= parse_org_emftext_language_xpath2_AdditiveExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred123_Xpath27857);
        c7=parse_org_emftext_language_xpath2_AdditiveExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred123_Xpath2

    // $ANTLR start synpred124_Xpath2
    public final void synpred124_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.MultiplicativeExpr c8 =null;


        // Xpath2.g:9361:4: (c8= parse_org_emftext_language_xpath2_MultiplicativeExpr )
        // Xpath2.g:9361:4: c8= parse_org_emftext_language_xpath2_MultiplicativeExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_synpred124_Xpath27867);
        c8=parse_org_emftext_language_xpath2_MultiplicativeExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred124_Xpath2

    // $ANTLR start synpred125_Xpath2
    public final void synpred125_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.UnionExpr c9 =null;


        // Xpath2.g:9362:4: (c9= parse_org_emftext_language_xpath2_UnionExpr )
        // Xpath2.g:9362:4: c9= parse_org_emftext_language_xpath2_UnionExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_synpred125_Xpath27877);
        c9=parse_org_emftext_language_xpath2_UnionExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred125_Xpath2

    // $ANTLR start synpred126_Xpath2
    public final void synpred126_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IntersectExceptExpr c10 =null;


        // Xpath2.g:9363:4: (c10= parse_org_emftext_language_xpath2_IntersectExceptExpr )
        // Xpath2.g:9363:4: c10= parse_org_emftext_language_xpath2_IntersectExceptExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_synpred126_Xpath27887);
        c10=parse_org_emftext_language_xpath2_IntersectExceptExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred126_Xpath2

    // $ANTLR start synpred127_Xpath2
    public final void synpred127_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.InstanceofExpr c11 =null;


        // Xpath2.g:9364:4: (c11= parse_org_emftext_language_xpath2_InstanceofExpr )
        // Xpath2.g:9364:4: c11= parse_org_emftext_language_xpath2_InstanceofExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_synpred127_Xpath27897);
        c11=parse_org_emftext_language_xpath2_InstanceofExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred127_Xpath2

    // $ANTLR start synpred128_Xpath2
    public final void synpred128_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.TreatExpr c12 =null;


        // Xpath2.g:9365:4: (c12= parse_org_emftext_language_xpath2_TreatExpr )
        // Xpath2.g:9365:4: c12= parse_org_emftext_language_xpath2_TreatExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_synpred128_Xpath27907);
        c12=parse_org_emftext_language_xpath2_TreatExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred128_Xpath2

    // $ANTLR start synpred129_Xpath2
    public final void synpred129_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.CastableExpr c13 =null;


        // Xpath2.g:9366:4: (c13= parse_org_emftext_language_xpath2_CastableExpr )
        // Xpath2.g:9366:4: c13= parse_org_emftext_language_xpath2_CastableExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_synpred129_Xpath27917);
        c13=parse_org_emftext_language_xpath2_CastableExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred129_Xpath2

    // $ANTLR start synpred130_Xpath2
    public final void synpred130_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.CastExpr c14 =null;


        // Xpath2.g:9367:4: (c14= parse_org_emftext_language_xpath2_CastExpr )
        // Xpath2.g:9367:4: c14= parse_org_emftext_language_xpath2_CastExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_synpred130_Xpath27927);
        c14=parse_org_emftext_language_xpath2_CastExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred130_Xpath2

    // $ANTLR start synpred131_Xpath2
    public final void synpred131_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.UnaryExpr c15 =null;


        // Xpath2.g:9368:4: (c15= parse_org_emftext_language_xpath2_UnaryExpr )
        // Xpath2.g:9368:4: c15= parse_org_emftext_language_xpath2_UnaryExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_synpred131_Xpath27937);
        c15=parse_org_emftext_language_xpath2_UnaryExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred131_Xpath2

    // $ANTLR start synpred132_Xpath2
    public final void synpred132_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FilterExpr c16 =null;


        // Xpath2.g:9369:4: (c16= parse_org_emftext_language_xpath2_FilterExpr )
        // Xpath2.g:9369:4: c16= parse_org_emftext_language_xpath2_FilterExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_synpred132_Xpath27947);
        c16=parse_org_emftext_language_xpath2_FilterExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred132_Xpath2

    // $ANTLR start synpred133_Xpath2
    public final void synpred133_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall c17 =null;


        // Xpath2.g:9370:4: (c17= parse_org_emftext_language_xpath2_FunctionCall )
        // Xpath2.g:9370:4: c17= parse_org_emftext_language_xpath2_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred133_Xpath27957);
        c17=parse_org_emftext_language_xpath2_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred133_Xpath2

    // $ANTLR start synpred134_Xpath2
    public final void synpred134_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.PathExpr c18 =null;


        // Xpath2.g:9371:4: (c18= parse_org_emftext_language_xpath2_PathExpr )
        // Xpath2.g:9371:4: c18= parse_org_emftext_language_xpath2_PathExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_synpred134_Xpath27967);
        c18=parse_org_emftext_language_xpath2_PathExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred134_Xpath2

    // $ANTLR start synpred135_Xpath2
    public final void synpred135_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ChildStepExpr c19 =null;


        // Xpath2.g:9372:4: (c19= parse_org_emftext_language_xpath2_ChildStepExpr )
        // Xpath2.g:9372:4: c19= parse_org_emftext_language_xpath2_ChildStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_synpred135_Xpath27977);
        c19=parse_org_emftext_language_xpath2_ChildStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred135_Xpath2

    // $ANTLR start synpred136_Xpath2
    public final void synpred136_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DescOrSelfStepExpr c20 =null;


        // Xpath2.g:9373:4: (c20= parse_org_emftext_language_xpath2_DescOrSelfStepExpr )
        // Xpath2.g:9373:4: c20= parse_org_emftext_language_xpath2_DescOrSelfStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_synpred136_Xpath27987);
        c20=parse_org_emftext_language_xpath2_DescOrSelfStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred136_Xpath2

    // $ANTLR start synpred137_Xpath2
    public final void synpred137_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RootStepExpr c21 =null;


        // Xpath2.g:9374:4: (c21= parse_org_emftext_language_xpath2_RootStepExpr )
        // Xpath2.g:9374:4: c21= parse_org_emftext_language_xpath2_RootStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_synpred137_Xpath27997);
        c21=parse_org_emftext_language_xpath2_RootStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred137_Xpath2

    // $ANTLR start synpred138_Xpath2
    public final void synpred138_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SelfStepExpr c22 =null;


        // Xpath2.g:9375:4: (c22= parse_org_emftext_language_xpath2_SelfStepExpr )
        // Xpath2.g:9375:4: c22= parse_org_emftext_language_xpath2_SelfStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_synpred138_Xpath28007);
        c22=parse_org_emftext_language_xpath2_SelfStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred138_Xpath2

    // $ANTLR start synpred139_Xpath2
    public final void synpred139_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.GeneralForwardStep c23 =null;


        // Xpath2.g:9376:4: (c23= parse_org_emftext_language_xpath2_GeneralForwardStep )
        // Xpath2.g:9376:4: c23= parse_org_emftext_language_xpath2_GeneralForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_synpred139_Xpath28017);
        c23=parse_org_emftext_language_xpath2_GeneralForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred139_Xpath2

    // $ANTLR start synpred140_Xpath2
    public final void synpred140_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevForwardStep c24 =null;


        // Xpath2.g:9377:4: (c24= parse_org_emftext_language_xpath2_AbbrevForwardStep )
        // Xpath2.g:9377:4: c24= parse_org_emftext_language_xpath2_AbbrevForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_synpred140_Xpath28027);
        c24=parse_org_emftext_language_xpath2_AbbrevForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred140_Xpath2

    // $ANTLR start synpred141_Xpath2
    public final void synpred141_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.GeneralReverseStep c25 =null;


        // Xpath2.g:9378:4: (c25= parse_org_emftext_language_xpath2_GeneralReverseStep )
        // Xpath2.g:9378:4: c25= parse_org_emftext_language_xpath2_GeneralReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_synpred141_Xpath28037);
        c25=parse_org_emftext_language_xpath2_GeneralReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred141_Xpath2

    // $ANTLR start synpred142_Xpath2
    public final void synpred142_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevReverseStep c26 =null;


        // Xpath2.g:9379:4: (c26= parse_org_emftext_language_xpath2_AbbrevReverseStep )
        // Xpath2.g:9379:4: c26= parse_org_emftext_language_xpath2_AbbrevReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_synpred142_Xpath28047);
        c26=parse_org_emftext_language_xpath2_AbbrevReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred142_Xpath2

    // $ANTLR start synpred143_Xpath2
    public final void synpred143_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.VarRef c27 =null;


        // Xpath2.g:9380:4: (c27= parse_org_emftext_language_xpath2_VarRef )
        // Xpath2.g:9380:4: c27= parse_org_emftext_language_xpath2_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred143_Xpath28057);
        c27=parse_org_emftext_language_xpath2_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred143_Xpath2

    // $ANTLR start synpred144_Xpath2
    public final void synpred144_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr c28 =null;


        // Xpath2.g:9381:4: (c28= parse_org_emftext_language_xpath2_ParenthesizedExpr )
        // Xpath2.g:9381:4: c28= parse_org_emftext_language_xpath2_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred144_Xpath28067);
        c28=parse_org_emftext_language_xpath2_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred144_Xpath2

    // $ANTLR start synpred145_Xpath2
    public final void synpred145_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr c29 =null;


        // Xpath2.g:9382:4: (c29= parse_org_emftext_language_xpath2_ContextItemExpr )
        // Xpath2.g:9382:4: c29= parse_org_emftext_language_xpath2_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred145_Xpath28077);
        c29=parse_org_emftext_language_xpath2_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred145_Xpath2

    // $ANTLR start synpred146_Xpath2
    public final void synpred146_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral c30 =null;


        // Xpath2.g:9383:4: (c30= parse_org_emftext_language_xpath2_IntegerLiteral )
        // Xpath2.g:9383:4: c30= parse_org_emftext_language_xpath2_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred146_Xpath28087);
        c30=parse_org_emftext_language_xpath2_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred146_Xpath2

    // $ANTLR start synpred147_Xpath2
    public final void synpred147_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral c31 =null;


        // Xpath2.g:9384:4: (c31= parse_org_emftext_language_xpath2_DecimalLiteral )
        // Xpath2.g:9384:4: c31= parse_org_emftext_language_xpath2_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred147_Xpath28097);
        c31=parse_org_emftext_language_xpath2_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred147_Xpath2

    // $ANTLR start synpred148_Xpath2
    public final void synpred148_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral c32 =null;


        // Xpath2.g:9385:4: (c32= parse_org_emftext_language_xpath2_DoubleLiteral )
        // Xpath2.g:9385:4: c32= parse_org_emftext_language_xpath2_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred148_Xpath28107);
        c32=parse_org_emftext_language_xpath2_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred148_Xpath2

    // $ANTLR start synpred159_Xpath2
    public final void synpred159_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FilterExpr c0 =null;


        // Xpath2.g:9426:2: (c0= parse_org_emftext_language_xpath2_FilterExpr )
        // Xpath2.g:9426:2: c0= parse_org_emftext_language_xpath2_FilterExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_synpred159_Xpath28322);
        c0=parse_org_emftext_language_xpath2_FilterExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred159_Xpath2

    // $ANTLR start synpred160_Xpath2
    public final void synpred160_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall c1 =null;


        // Xpath2.g:9427:4: (c1= parse_org_emftext_language_xpath2_FunctionCall )
        // Xpath2.g:9427:4: c1= parse_org_emftext_language_xpath2_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred160_Xpath28332);
        c1=parse_org_emftext_language_xpath2_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred160_Xpath2

    // $ANTLR start synpred161_Xpath2
    public final void synpred161_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ChildStepExpr c2 =null;


        // Xpath2.g:9428:4: (c2= parse_org_emftext_language_xpath2_ChildStepExpr )
        // Xpath2.g:9428:4: c2= parse_org_emftext_language_xpath2_ChildStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_synpred161_Xpath28342);
        c2=parse_org_emftext_language_xpath2_ChildStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred161_Xpath2

    // $ANTLR start synpred163_Xpath2
    public final void synpred163_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.RootStepExpr c4 =null;


        // Xpath2.g:9430:4: (c4= parse_org_emftext_language_xpath2_RootStepExpr )
        // Xpath2.g:9430:4: c4= parse_org_emftext_language_xpath2_RootStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_synpred163_Xpath28362);
        c4=parse_org_emftext_language_xpath2_RootStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred163_Xpath2

    // $ANTLR start synpred164_Xpath2
    public final void synpred164_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.SelfStepExpr c5 =null;


        // Xpath2.g:9431:4: (c5= parse_org_emftext_language_xpath2_SelfStepExpr )
        // Xpath2.g:9431:4: c5= parse_org_emftext_language_xpath2_SelfStepExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_synpred164_Xpath28372);
        c5=parse_org_emftext_language_xpath2_SelfStepExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred164_Xpath2

    // $ANTLR start synpred165_Xpath2
    public final void synpred165_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.GeneralForwardStep c6 =null;


        // Xpath2.g:9432:4: (c6= parse_org_emftext_language_xpath2_GeneralForwardStep )
        // Xpath2.g:9432:4: c6= parse_org_emftext_language_xpath2_GeneralForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_synpred165_Xpath28382);
        c6=parse_org_emftext_language_xpath2_GeneralForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred165_Xpath2

    // $ANTLR start synpred166_Xpath2
    public final void synpred166_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevForwardStep c7 =null;


        // Xpath2.g:9433:4: (c7= parse_org_emftext_language_xpath2_AbbrevForwardStep )
        // Xpath2.g:9433:4: c7= parse_org_emftext_language_xpath2_AbbrevForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_synpred166_Xpath28392);
        c7=parse_org_emftext_language_xpath2_AbbrevForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred166_Xpath2

    // $ANTLR start synpred167_Xpath2
    public final void synpred167_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.GeneralReverseStep c8 =null;


        // Xpath2.g:9434:4: (c8= parse_org_emftext_language_xpath2_GeneralReverseStep )
        // Xpath2.g:9434:4: c8= parse_org_emftext_language_xpath2_GeneralReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_synpred167_Xpath28402);
        c8=parse_org_emftext_language_xpath2_GeneralReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred167_Xpath2

    // $ANTLR start synpred168_Xpath2
    public final void synpred168_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevReverseStep c9 =null;


        // Xpath2.g:9435:4: (c9= parse_org_emftext_language_xpath2_AbbrevReverseStep )
        // Xpath2.g:9435:4: c9= parse_org_emftext_language_xpath2_AbbrevReverseStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_synpred168_Xpath28412);
        c9=parse_org_emftext_language_xpath2_AbbrevReverseStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred168_Xpath2

    // $ANTLR start synpred169_Xpath2
    public final void synpred169_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.VarRef c10 =null;


        // Xpath2.g:9436:4: (c10= parse_org_emftext_language_xpath2_VarRef )
        // Xpath2.g:9436:4: c10= parse_org_emftext_language_xpath2_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred169_Xpath28422);
        c10=parse_org_emftext_language_xpath2_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred169_Xpath2

    // $ANTLR start synpred170_Xpath2
    public final void synpred170_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr c11 =null;


        // Xpath2.g:9437:4: (c11= parse_org_emftext_language_xpath2_ParenthesizedExpr )
        // Xpath2.g:9437:4: c11= parse_org_emftext_language_xpath2_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred170_Xpath28432);
        c11=parse_org_emftext_language_xpath2_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred170_Xpath2

    // $ANTLR start synpred171_Xpath2
    public final void synpred171_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr c12 =null;


        // Xpath2.g:9438:4: (c12= parse_org_emftext_language_xpath2_ContextItemExpr )
        // Xpath2.g:9438:4: c12= parse_org_emftext_language_xpath2_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred171_Xpath28442);
        c12=parse_org_emftext_language_xpath2_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred171_Xpath2

    // $ANTLR start synpred172_Xpath2
    public final void synpred172_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral c13 =null;


        // Xpath2.g:9439:4: (c13= parse_org_emftext_language_xpath2_IntegerLiteral )
        // Xpath2.g:9439:4: c13= parse_org_emftext_language_xpath2_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred172_Xpath28452);
        c13=parse_org_emftext_language_xpath2_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred172_Xpath2

    // $ANTLR start synpred173_Xpath2
    public final void synpred173_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral c14 =null;


        // Xpath2.g:9440:4: (c14= parse_org_emftext_language_xpath2_DecimalLiteral )
        // Xpath2.g:9440:4: c14= parse_org_emftext_language_xpath2_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred173_Xpath28462);
        c14=parse_org_emftext_language_xpath2_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred173_Xpath2

    // $ANTLR start synpred174_Xpath2
    public final void synpred174_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral c15 =null;


        // Xpath2.g:9441:4: (c15= parse_org_emftext_language_xpath2_DoubleLiteral )
        // Xpath2.g:9441:4: c15= parse_org_emftext_language_xpath2_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred174_Xpath28472);
        c15=parse_org_emftext_language_xpath2_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred174_Xpath2

    // $ANTLR start synpred179_Xpath2
    public final void synpred179_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FilterExpr c0 =null;


        // Xpath2.g:9458:2: (c0= parse_org_emftext_language_xpath2_FilterExpr )
        // Xpath2.g:9458:2: c0= parse_org_emftext_language_xpath2_FilterExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_synpred179_Xpath28564);
        c0=parse_org_emftext_language_xpath2_FilterExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred179_Xpath2

    // $ANTLR start synpred180_Xpath2
    public final void synpred180_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.FunctionCall c1 =null;


        // Xpath2.g:9459:4: (c1= parse_org_emftext_language_xpath2_FunctionCall )
        // Xpath2.g:9459:4: c1= parse_org_emftext_language_xpath2_FunctionCall
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred180_Xpath28574);
        c1=parse_org_emftext_language_xpath2_FunctionCall();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred180_Xpath2

    // $ANTLR start synpred181_Xpath2
    public final void synpred181_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.GeneralForwardStep c2 =null;


        // Xpath2.g:9460:4: (c2= parse_org_emftext_language_xpath2_GeneralForwardStep )
        // Xpath2.g:9460:4: c2= parse_org_emftext_language_xpath2_GeneralForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_synpred181_Xpath28584);
        c2=parse_org_emftext_language_xpath2_GeneralForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred181_Xpath2

    // $ANTLR start synpred182_Xpath2
    public final void synpred182_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AbbrevForwardStep c3 =null;


        // Xpath2.g:9461:4: (c3= parse_org_emftext_language_xpath2_AbbrevForwardStep )
        // Xpath2.g:9461:4: c3= parse_org_emftext_language_xpath2_AbbrevForwardStep
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_synpred182_Xpath28594);
        c3=parse_org_emftext_language_xpath2_AbbrevForwardStep();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred182_Xpath2

    // $ANTLR start synpred185_Xpath2
    public final void synpred185_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.VarRef c6 =null;


        // Xpath2.g:9464:4: (c6= parse_org_emftext_language_xpath2_VarRef )
        // Xpath2.g:9464:4: c6= parse_org_emftext_language_xpath2_VarRef
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred185_Xpath28624);
        c6=parse_org_emftext_language_xpath2_VarRef();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred185_Xpath2

    // $ANTLR start synpred186_Xpath2
    public final void synpred186_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ParenthesizedExpr c7 =null;


        // Xpath2.g:9465:4: (c7= parse_org_emftext_language_xpath2_ParenthesizedExpr )
        // Xpath2.g:9465:4: c7= parse_org_emftext_language_xpath2_ParenthesizedExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred186_Xpath28634);
        c7=parse_org_emftext_language_xpath2_ParenthesizedExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred186_Xpath2

    // $ANTLR start synpred187_Xpath2
    public final void synpred187_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ContextItemExpr c8 =null;


        // Xpath2.g:9466:4: (c8= parse_org_emftext_language_xpath2_ContextItemExpr )
        // Xpath2.g:9466:4: c8= parse_org_emftext_language_xpath2_ContextItemExpr
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred187_Xpath28644);
        c8=parse_org_emftext_language_xpath2_ContextItemExpr();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred187_Xpath2

    // $ANTLR start synpred188_Xpath2
    public final void synpred188_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.IntegerLiteral c9 =null;


        // Xpath2.g:9467:4: (c9= parse_org_emftext_language_xpath2_IntegerLiteral )
        // Xpath2.g:9467:4: c9= parse_org_emftext_language_xpath2_IntegerLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred188_Xpath28654);
        c9=parse_org_emftext_language_xpath2_IntegerLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred188_Xpath2

    // $ANTLR start synpred189_Xpath2
    public final void synpred189_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DecimalLiteral c10 =null;


        // Xpath2.g:9468:4: (c10= parse_org_emftext_language_xpath2_DecimalLiteral )
        // Xpath2.g:9468:4: c10= parse_org_emftext_language_xpath2_DecimalLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred189_Xpath28664);
        c10=parse_org_emftext_language_xpath2_DecimalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred189_Xpath2

    // $ANTLR start synpred190_Xpath2
    public final void synpred190_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.DoubleLiteral c11 =null;


        // Xpath2.g:9469:4: (c11= parse_org_emftext_language_xpath2_DoubleLiteral )
        // Xpath2.g:9469:4: c11= parse_org_emftext_language_xpath2_DoubleLiteral
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred190_Xpath28674);
        c11=parse_org_emftext_language_xpath2_DoubleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred190_Xpath2

    // $ANTLR start synpred199_Xpath2
    public final void synpred199_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.PITest c4 =null;


        // Xpath2.g:9490:4: (c4= parse_org_emftext_language_xpath2_PITest )
        // Xpath2.g:9490:4: c4= parse_org_emftext_language_xpath2_PITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_PITest_in_synpred199_Xpath28806);
        c4=parse_org_emftext_language_xpath2_PITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred199_Xpath2

    // $ANTLR start synpred200_Xpath2
    public final void synpred200_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NCNamePITest c5 =null;


        // Xpath2.g:9491:4: (c5= parse_org_emftext_language_xpath2_NCNamePITest )
        // Xpath2.g:9491:4: c5= parse_org_emftext_language_xpath2_NCNamePITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_synpred200_Xpath28816);
        c5=parse_org_emftext_language_xpath2_NCNamePITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred200_Xpath2

    // $ANTLR start synpred201_Xpath2
    public final void synpred201_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.StringLiteralPITest c6 =null;


        // Xpath2.g:9492:4: (c6= parse_org_emftext_language_xpath2_StringLiteralPITest )
        // Xpath2.g:9492:4: c6= parse_org_emftext_language_xpath2_StringLiteralPITest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_synpred201_Xpath28826);
        c6=parse_org_emftext_language_xpath2_StringLiteralPITest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred201_Xpath2

    // $ANTLR start synpred202_Xpath2
    public final void synpred202_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.AttributeTest c7 =null;


        // Xpath2.g:9493:4: (c7= parse_org_emftext_language_xpath2_AttributeTest )
        // Xpath2.g:9493:4: c7= parse_org_emftext_language_xpath2_AttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_synpred202_Xpath28836);
        c7=parse_org_emftext_language_xpath2_AttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred202_Xpath2

    // $ANTLR start synpred203_Xpath2
    public final void synpred203_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.WildcardAttributeTest c8 =null;


        // Xpath2.g:9494:4: (c8= parse_org_emftext_language_xpath2_WildcardAttributeTest )
        // Xpath2.g:9494:4: c8= parse_org_emftext_language_xpath2_WildcardAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_synpred203_Xpath28846);
        c8=parse_org_emftext_language_xpath2_WildcardAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred203_Xpath2

    // $ANTLR start synpred204_Xpath2
    public final void synpred204_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NameAttributeTest c9 =null;


        // Xpath2.g:9495:4: (c9= parse_org_emftext_language_xpath2_NameAttributeTest )
        // Xpath2.g:9495:4: c9= parse_org_emftext_language_xpath2_NameAttributeTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_synpred204_Xpath28856);
        c9=parse_org_emftext_language_xpath2_NameAttributeTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred204_Xpath2

    // $ANTLR start synpred206_Xpath2
    public final void synpred206_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.ElementTest c11 =null;


        // Xpath2.g:9497:4: (c11= parse_org_emftext_language_xpath2_ElementTest )
        // Xpath2.g:9497:4: c11= parse_org_emftext_language_xpath2_ElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_synpred206_Xpath28876);
        c11=parse_org_emftext_language_xpath2_ElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred206_Xpath2

    // $ANTLR start synpred207_Xpath2
    public final void synpred207_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.WildcardElementTest c12 =null;


        // Xpath2.g:9498:4: (c12= parse_org_emftext_language_xpath2_WildcardElementTest )
        // Xpath2.g:9498:4: c12= parse_org_emftext_language_xpath2_WildcardElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_synpred207_Xpath28886);
        c12=parse_org_emftext_language_xpath2_WildcardElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred207_Xpath2

    // $ANTLR start synpred208_Xpath2
    public final void synpred208_Xpath2_fragment() throws RecognitionException {
        org.emftext.language.xpath2.NameElementTest c13 =null;


        // Xpath2.g:9499:4: (c13= parse_org_emftext_language_xpath2_NameElementTest )
        // Xpath2.g:9499:4: c13= parse_org_emftext_language_xpath2_NameElementTest
        {
        pushFollow(FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_synpred208_Xpath28896);
        c13=parse_org_emftext_language_xpath2_NameElementTest();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred208_Xpath2

    // Delegated rules

    public final boolean synpred200_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred200_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred169_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred169_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_Xpath2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_Xpath2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA72 dfa72 = new DFA72(this);
    static final String DFA72_eotS =
        "\111\uffff";
    static final String DFA72_eofS =
        "\111\uffff";
    static final String DFA72_minS =
        "\1\4\4\uffff\45\0\37\uffff";
    static final String DFA72_maxS =
        "\1\125\4\uffff\45\0\37\uffff";
    static final String DFA72_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\3\45\uffff\1\4\1\5\1\6\1\7\1\10\1\11"+
        "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\27\1\31\1\34"+
        "\1\35\1\36\1\37\1\40\1\41\1\42\1\24\1\26\1\25\1\30\1\32\1\33";
    static final String DFA72_specialS =
        "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
        "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
        "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\37\uffff}>";
    static final String[] DFA72_transitionS = {
            "\1\15\1\16\1\14\1\10\1\7\1\17\2\uffff\1\11\1\12\1\uffff\1\43"+
            "\1\5\1\uffff\1\6\1\13\1\51\1\20\1\21\12\uffff\1\32\2\uffff\1"+
            "\45\1\50\2\uffff\1\24\2\uffff\1\22\1\36\1\23\1\26\1\uffff\1"+
            "\34\1\41\3\uffff\1\2\1\uffff\1\30\1\27\1\1\3\uffff\1\4\10\uffff"+
            "\1\31\1\uffff\1\33\2\uffff\1\44\1\47\1\46\1\37\2\uffff\1\40"+
            "\1\42\1\25\1\2\1\35",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "9351:1: parse_org_emftext_language_xpath2_ExprSingle returns [org.emftext.language.xpath2.ExprSingle element = null] : (c0= parse_org_emftext_language_xpath2_ForExpr |c1= parse_org_emftext_language_xpath2_QuantifiedExpr |c2= parse_org_emftext_language_xpath2_IfExpr |c3= parse_org_emftext_language_xpath2_OrExpr |c4= parse_org_emftext_language_xpath2_AndExpr |c5= parse_org_emftext_language_xpath2_ComparisonExpr |c6= parse_org_emftext_language_xpath2_RangeExpr |c7= parse_org_emftext_language_xpath2_AdditiveExpr |c8= parse_org_emftext_language_xpath2_MultiplicativeExpr |c9= parse_org_emftext_language_xpath2_UnionExpr |c10= parse_org_emftext_language_xpath2_IntersectExceptExpr |c11= parse_org_emftext_language_xpath2_InstanceofExpr |c12= parse_org_emftext_language_xpath2_TreatExpr |c13= parse_org_emftext_language_xpath2_CastableExpr |c14= parse_org_emftext_language_xpath2_CastExpr |c15= parse_org_emftext_language_xpath2_UnaryExpr |c16= parse_org_emftext_language_xpath2_FilterExpr |c17= parse_org_emftext_language_xpath2_FunctionCall |c18= parse_org_emftext_language_xpath2_PathExpr |c19= parse_org_emftext_language_xpath2_ChildStepExpr |c20= parse_org_emftext_language_xpath2_DescOrSelfStepExpr |c21= parse_org_emftext_language_xpath2_RootStepExpr |c22= parse_org_emftext_language_xpath2_SelfStepExpr |c23= parse_org_emftext_language_xpath2_GeneralForwardStep |c24= parse_org_emftext_language_xpath2_AbbrevForwardStep |c25= parse_org_emftext_language_xpath2_GeneralReverseStep |c26= parse_org_emftext_language_xpath2_AbbrevReverseStep |c27= parse_org_emftext_language_xpath2_VarRef |c28= parse_org_emftext_language_xpath2_ParenthesizedExpr |c29= parse_org_emftext_language_xpath2_ContextItemExpr |c30= parse_org_emftext_language_xpath2_IntegerLiteral |c31= parse_org_emftext_language_xpath2_DecimalLiteral |c32= parse_org_emftext_language_xpath2_DoubleLiteral |c33= parse_org_emftext_language_xpath2_StringLiteral );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_5 = input.LA(1);

                         
                        int index72_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                         
                        input.seek(index72_5);

                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA72_6 = input.LA(1);

                         
                        int index72_6 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                         
                        input.seek(index72_6);

                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA72_7 = input.LA(1);

                         
                        int index72_7 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred133_Xpath2()) ) {s = 56;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_7);

                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA72_8 = input.LA(1);

                         
                        int index72_8 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred133_Xpath2()) ) {s = 56;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_8);

                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA72_9 = input.LA(1);

                         
                        int index72_9 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred143_Xpath2()) ) {s = 60;}

                         
                        input.seek(index72_9);

                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA72_10 = input.LA(1);

                         
                        int index72_10 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred144_Xpath2()) ) {s = 61;}

                         
                        input.seek(index72_10);

                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA72_11 = input.LA(1);

                         
                        int index72_11 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred145_Xpath2()) ) {s = 62;}

                         
                        input.seek(index72_11);

                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA72_12 = input.LA(1);

                         
                        int index72_12 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred146_Xpath2()) ) {s = 63;}

                         
                        input.seek(index72_12);

                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA72_13 = input.LA(1);

                         
                        int index72_13 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred147_Xpath2()) ) {s = 64;}

                         
                        input.seek(index72_13);

                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA72_14 = input.LA(1);

                         
                        int index72_14 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred148_Xpath2()) ) {s = 65;}

                         
                        input.seek(index72_14);

                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA72_15 = input.LA(1);

                         
                        int index72_15 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred132_Xpath2()) ) {s = 55;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index72_15);

                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA72_16 = input.LA(1);

                         
                        int index72_16 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred135_Xpath2()) ) {s = 67;}

                        else if ( (synpred137_Xpath2()) ) {s = 68;}

                         
                        input.seek(index72_16);

                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA72_17 = input.LA(1);

                         
                        int index72_17 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred136_Xpath2()) ) {s = 69;}

                         
                        input.seek(index72_17);

                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA72_18 = input.LA(1);

                         
                        int index72_18 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                         
                        input.seek(index72_18);

                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA72_19 = input.LA(1);

                         
                        int index72_19 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                         
                        input.seek(index72_19);

                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA72_20 = input.LA(1);

                         
                        int index72_20 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_20);

                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA72_21 = input.LA(1);

                         
                        int index72_21 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                         
                        input.seek(index72_21);

                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA72_22 = input.LA(1);

                         
                        int index72_22 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                         
                        input.seek(index72_22);

                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA72_23 = input.LA(1);

                         
                        int index72_23 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                         
                        input.seek(index72_23);

                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA72_24 = input.LA(1);

                         
                        int index72_24 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                         
                        input.seek(index72_24);

                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA72_25 = input.LA(1);

                         
                        int index72_25 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred139_Xpath2()) ) {s = 70;}

                         
                        input.seek(index72_25);

                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA72_26 = input.LA(1);

                         
                        int index72_26 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_26);

                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA72_27 = input.LA(1);

                         
                        int index72_27 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_27);

                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA72_28 = input.LA(1);

                         
                        int index72_28 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_28);

                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA72_29 = input.LA(1);

                         
                        int index72_29 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_29);

                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA72_30 = input.LA(1);

                         
                        int index72_30 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_30);

                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA72_31 = input.LA(1);

                         
                        int index72_31 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_31);

                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA72_32 = input.LA(1);

                         
                        int index72_32 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_32);

                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA72_33 = input.LA(1);

                         
                        int index72_33 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_33);

                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA72_34 = input.LA(1);

                         
                        int index72_34 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_34);

                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA72_35 = input.LA(1);

                         
                        int index72_35 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred140_Xpath2()) ) {s = 59;}

                         
                        input.seek(index72_35);

                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA72_36 = input.LA(1);

                         
                        int index72_36 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred141_Xpath2()) ) {s = 71;}

                         
                        input.seek(index72_36);

                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA72_37 = input.LA(1);

                         
                        int index72_37 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred141_Xpath2()) ) {s = 71;}

                         
                        input.seek(index72_37);

                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA72_38 = input.LA(1);

                         
                        int index72_38 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred141_Xpath2()) ) {s = 71;}

                         
                        input.seek(index72_38);

                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA72_39 = input.LA(1);

                         
                        int index72_39 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred141_Xpath2()) ) {s = 71;}

                         
                        input.seek(index72_39);

                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA72_40 = input.LA(1);

                         
                        int index72_40 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred141_Xpath2()) ) {s = 71;}

                         
                        input.seek(index72_40);

                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA72_41 = input.LA(1);

                         
                        int index72_41 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred119_Xpath2()) ) {s = 42;}

                        else if ( (synpred120_Xpath2()) ) {s = 43;}

                        else if ( (synpred121_Xpath2()) ) {s = 44;}

                        else if ( (synpred122_Xpath2()) ) {s = 45;}

                        else if ( (synpred123_Xpath2()) ) {s = 46;}

                        else if ( (synpred124_Xpath2()) ) {s = 47;}

                        else if ( (synpred125_Xpath2()) ) {s = 48;}

                        else if ( (synpred126_Xpath2()) ) {s = 49;}

                        else if ( (synpred127_Xpath2()) ) {s = 50;}

                        else if ( (synpred128_Xpath2()) ) {s = 51;}

                        else if ( (synpred129_Xpath2()) ) {s = 52;}

                        else if ( (synpred130_Xpath2()) ) {s = 53;}

                        else if ( (synpred131_Xpath2()) ) {s = 54;}

                        else if ( (synpred134_Xpath2()) ) {s = 57;}

                        else if ( (synpred138_Xpath2()) ) {s = 58;}

                        else if ( (synpred142_Xpath2()) ) {s = 72;}

                         
                        input.seek(index72_41);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_Expr119 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_Expr133 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_Expr147 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_Expr161 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_Expr188 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_Expr214 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_Expr234 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_Expr254 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_Expr274 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_57_in_parse_org_emftext_language_xpath2_ForExpr330 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr348 = new BitSet(new long[]{0x0000000000020000L,0x0000000000008000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_ForExpr375 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_ForExpr401 = new BitSet(new long[]{0x0000000000020000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_parse_org_emftext_language_xpath2_ForExpr442 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ExprSingle_in_parse_org_emftext_language_xpath2_ForExpr460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_parse_org_emftext_language_xpath2_QuantifiedExpr502 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_53_in_parse_org_emftext_language_xpath2_QuantifiedExpr517 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr542 = new BitSet(new long[]{0x0000000000020000L,0x0000000000010000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_QuantifiedExpr569 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Iterator_in_parse_org_emftext_language_xpath2_QuantifiedExpr595 = new BitSet(new long[]{0x0000000000020000L,0x0000000000010000L});
    public static final BitSet FOLLOW_80_in_parse_org_emftext_language_xpath2_QuantifiedExpr636 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_QuantifiedExpr696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_parse_org_emftext_language_xpath2_Iterator729 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_Iterator752 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_Iterator790 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_62_in_parse_org_emftext_language_xpath2_Iterator824 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_Iterator842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_Iterator856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_Iterator870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_Iterator884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_org_emftext_language_xpath2_IfExpr917 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_IfExpr931 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_IfExpr949 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_IfExpr963 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_IfExpr977 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_IfExpr991 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_IfExpr1005 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_IfExpr1023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_parse_org_emftext_language_xpath2_IfExpr1037 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_IfExpr1055 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_IfExpr1069 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_IfExpr1083 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_IfExpr1097 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_parse_org_emftext_language_xpath2_IfExpr1115 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_IfExpr1133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_IfExpr1147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_IfExpr1161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_IfExpr1175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr1212 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_parse_org_emftext_language_xpath2_OrExpr1239 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_OrExpr1265 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr1325 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_38_in_parse_org_emftext_language_xpath2_AndExpr1352 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_AndExpr1378 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1438 = new BitSet(new long[]{0x0C100000FE000802L,0x000000000000009AL});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Comp_in_parse_org_emftext_language_xpath2_ComparisonExpr1471 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ComparisonExpr1505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1565 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_parse_org_emftext_language_xpath2_RangeExpr1592 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_RangeExpr1618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_org_emftext_language_xpath2_GeneralComp1683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_11_in_parse_org_emftext_language_xpath2_GeneralComp1698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_parse_org_emftext_language_xpath2_GeneralComp1713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_parse_org_emftext_language_xpath2_GeneralComp1728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_parse_org_emftext_language_xpath2_GeneralComp1743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_parse_org_emftext_language_xpath2_GeneralComp1758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_parse_org_emftext_language_xpath2_ValueComp1803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_org_emftext_language_xpath2_ValueComp1818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_parse_org_emftext_language_xpath2_ValueComp1833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_org_emftext_language_xpath2_ValueComp1848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_org_emftext_language_xpath2_ValueComp1863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_parse_org_emftext_language_xpath2_ValueComp1878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_org_emftext_language_xpath2_NodeComp1923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_parse_org_emftext_language_xpath2_NodeComp1938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_parse_org_emftext_language_xpath2_NodeComp1953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr1993 = new BitSet(new long[]{0x0000000000050002L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_AdditiveExpr2033 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath2_AdditiveExpr2052 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_AdditiveExpr2089 = new BitSet(new long[]{0x0000000000050002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2149 = new BitSet(new long[]{0x1000800000008002L,0x0000000000000020L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2189 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_47_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2208 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_60_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2227 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_69_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2246 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_MultiplicativeExpr2283 = new BitSet(new long[]{0x1000800000008002L,0x0000000000000020L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr2343 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_89_in_parse_org_emftext_language_xpath2_UnionExpr2383 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_90_in_parse_org_emftext_language_xpath2_UnionExpr2402 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_UnionExpr2439 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2499 = new BitSet(new long[]{0x0040000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2539 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_54_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2558 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_IntersectExceptExpr2595 = new BitSet(new long[]{0x0040000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_InstanceofExpr2655 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_63_in_parse_org_emftext_language_xpath2_InstanceofExpr2682 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parse_org_emftext_language_xpath2_InstanceofExpr2702 = new BitSet(new long[]{0x000B110000000180L,0x0000000000264104L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_InstanceofExpr2728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_TreatExpr2788 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_parse_org_emftext_language_xpath2_TreatExpr2815 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath2_TreatExpr2835 = new BitSet(new long[]{0x000B110000000180L,0x0000000000264104L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SequenceType_in_parse_org_emftext_language_xpath2_TreatExpr2861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_CastableExpr2921 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_42_in_parse_org_emftext_language_xpath2_CastableExpr2948 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath2_CastableExpr2968 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastableExpr2994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_CastExpr3054 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_41_in_parse_org_emftext_language_xpath2_CastExpr3081 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_parse_org_emftext_language_xpath2_CastExpr3101 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SingleType_in_parse_org_emftext_language_xpath2_CastExpr3127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_UnaryExpr3198 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_18_in_parse_org_emftext_language_xpath2_UnaryExpr3215 = new BitSet(new long[]{0x01837932007DB3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ValueExpr_in_parse_org_emftext_language_xpath2_UnaryExpr3248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PrimaryExpr_in_parse_org_emftext_language_xpath2_FilterExpr3285 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_FilterExpr3312 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_FunctionCall3362 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_FunctionCall3400 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_FunctionCall3434 = new BitSet(new long[]{0x23A37932007DF3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_FunctionCall3463 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_FunctionCall3483 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_FunctionCall3503 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_FunctionCall3523 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_FunctionCall3564 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_FunctionCall3598 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_FunctionCall3624 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_FunctionCall3650 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_FunctionCall3676 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_FunctionCall3750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PathExprChild_in_parse_org_emftext_language_xpath2_PathExpr3783 = new BitSet(new long[]{0x0000000000600002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExpr3810 = new BitSet(new long[]{0x0000000000600002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExpr3827 = new BitSet(new long[]{0x0000000000600002L});
    public static final BitSet FOLLOW_21_in_parse_org_emftext_language_xpath2_ChildStepExpr3868 = new BitSet(new long[]{0x018379320018B3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_ChildStepExpr3886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr3919 = new BitSet(new long[]{0x018379320018B3F0L,0x00000000002E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StepExpr_in_parse_org_emftext_language_xpath2_DescOrSelfStepExpr3937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_org_emftext_language_xpath2_RootStepExpr3970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExprChild_in_parse_org_emftext_language_xpath2_SelfStepExpr4003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_org_emftext_language_xpath2_GeneralForwardStep4045 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_45_in_parse_org_emftext_language_xpath2_GeneralForwardStep4060 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath2_GeneralForwardStep4075 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_83_in_parse_org_emftext_language_xpath2_GeneralForwardStep4090 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_46_in_parse_org_emftext_language_xpath2_GeneralForwardStep4105 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_56_in_parse_org_emftext_language_xpath2_GeneralForwardStep4120 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_55_in_parse_org_emftext_language_xpath2_GeneralForwardStep4135 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_70_in_parse_org_emftext_language_xpath2_GeneralForwardStep4150 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_org_emftext_language_xpath2_GeneralForwardStep4171 = new BitSet(new long[]{0x0003110000008180L,0x0000000000264100L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralForwardStep4189 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_GeneralForwardStep4216 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_33_in_parse_org_emftext_language_xpath2_AbbrevForwardStep4266 = new BitSet(new long[]{0x0003110000008180L,0x0000000000264100L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_AbbrevForwardStep4291 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AbbrevForwardStep4318 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_75_in_parse_org_emftext_language_xpath2_GeneralReverseStep4368 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_36_in_parse_org_emftext_language_xpath2_GeneralReverseStep4383 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_77_in_parse_org_emftext_language_xpath2_GeneralReverseStep4398 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_76_in_parse_org_emftext_language_xpath2_GeneralReverseStep4413 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_37_in_parse_org_emftext_language_xpath2_GeneralReverseStep4428 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_24_in_parse_org_emftext_language_xpath2_GeneralReverseStep4449 = new BitSet(new long[]{0x0003110000008180L,0x0000000000264100L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeTest_in_parse_org_emftext_language_xpath2_GeneralReverseStep4467 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_GeneralReverseStep4494 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_20_in_parse_org_emftext_language_xpath2_AbbrevReverseStep4544 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Predicate_in_parse_org_emftext_language_xpath2_AbbrevReverseStep4574 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_NodeKindTest4619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_QNameTest4661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_QNameTest4699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_AnyWildcard4748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_LocalNameWildcard4781 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath2_LocalNameWildcard4802 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_LocalNameWildcard4816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_NamespaceWildcard4845 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_23_in_parse_org_emftext_language_xpath2_NamespaceWildcard4859 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NamespaceWildcard4877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_parse_org_emftext_language_xpath2_Predicate4913 = new BitSet(new long[]{0x23A37932007DB3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_Predicate4931 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_parse_org_emftext_language_xpath2_Predicate4949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_parse_org_emftext_language_xpath2_VarRef4978 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_VarRef5001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_VarRef5039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_ParenthesizedExpr5088 = new BitSet(new long[]{0x23A37932007DF3F0L,0x00000000003E7940L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_parse_org_emftext_language_xpath2_ParenthesizedExpr5111 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_ParenthesizedExpr5137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_parse_org_emftext_language_xpath2_ContextItemExpr5166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_SingleType5199 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath2_SingleType5226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_org_emftext_language_xpath2_EmptySequenceType5262 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_EmptySequenceType5276 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_EmptySequenceType5290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemType_in_parse_org_emftext_language_xpath2_ItemSequenceType5323 = new BitSet(new long[]{0x0000000100018002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath2_ItemSequenceType5350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_ItemSequenceType5365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_parse_org_emftext_language_xpath2_ItemSequenceType5380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_KindTest_in_parse_org_emftext_language_xpath2_ItemKindTest5420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_org_emftext_language_xpath2_AnyItemType5453 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_AnyItemType5467 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_AnyItemType5481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicType_in_parse_org_emftext_language_xpath2_AtomicItemType5514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_AtomicType5556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_AtomicType5594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_OptionalAtomicType5652 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_OptionalAtomicType5690 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_org_emftext_language_xpath2_OptionalAtomicType5733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_parse_org_emftext_language_xpath2_AnyKindTest5769 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_AnyKindTest5783 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_AnyKindTest5797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_parse_org_emftext_language_xpath2_DocumentTest5826 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_DocumentTest5840 = new BitSet(new long[]{0x0002000000004000L,0x0000000000040000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_DocumentTest5863 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_DocumentTest5880 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_DocumentTest5906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_parse_org_emftext_language_xpath2_TextTest5935 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_TextTest5949 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_TextTest5963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_org_emftext_language_xpath2_CommentTest5992 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_CommentTest6006 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_CommentTest6020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath2_PITest6049 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_PITest6063 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_PITest6077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_PITest6096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_PITest6106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath2_NCNamePITest6131 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_NCNamePITest6145 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NCNamePITest6163 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_NCNamePITest6184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_org_emftext_language_xpath2_StringLiteralPITest6213 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_StringLiteralPITest6227 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteralPITest6245 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_StringLiteralPITest6266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath2_AttributeTest6295 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_AttributeTest6309 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_AttributeTest6323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest6342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_AttributeTest6352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6377 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6391 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6405 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6428 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6461 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6517 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_WildcardAttributeTest6582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_org_emftext_language_xpath2_NameAttributeTest6611 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_NameAttributeTest6625 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6648 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6686 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_NameAttributeTest6729 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6762 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NameAttributeTest6818 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_NameAttributeTest6883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6912 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6926 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6949 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_SchemaAttributeTest6987 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_SchemaAttributeTest7021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath2_ElementTest7050 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_ElementTest7064 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_ElementTest7078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_ElementTest7097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_ElementTest7107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath2_WildcardElementTest7132 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_WildcardElementTest7146 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_parse_org_emftext_language_xpath2_WildcardElementTest7160 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_WildcardElementTest7183 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OptionalAtomicType_in_parse_org_emftext_language_xpath2_WildcardElementTest7209 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_WildcardElementTest7250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_org_emftext_language_xpath2_NameElementTest7279 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_NameElementTest7293 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_NameElementTest7316 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_NameElementTest7354 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_17_in_parse_org_emftext_language_xpath2_NameElementTest7397 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OptionalAtomicType_in_parse_org_emftext_language_xpath2_NameElementTest7423 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_NameElementTest7464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_parse_org_emftext_language_xpath2_SchemaElementTest7493 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_13_in_parse_org_emftext_language_xpath2_SchemaElementTest7507 = new BitSet(new long[]{0x0000000000000180L});
    public static final BitSet FOLLOW_QNAME_in_parse_org_emftext_language_xpath2_SchemaElementTest7530 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_NCNAME_in_parse_org_emftext_language_xpath2_SchemaElementTest7568 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_org_emftext_language_xpath2_SchemaElementTest7602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_parse_org_emftext_language_xpath2_IntegerLiteral7635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECIMAL_LITERAL_in_parse_org_emftext_language_xpath2_DecimalLiteral7675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOUBLE_LITERAL_in_parse_org_emftext_language_xpath2_DoubleLiteral7715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_parse_org_emftext_language_xpath2_StringLiteral7755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_parse_org_emftext_language_xpath2_ExprSingle7787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_parse_org_emftext_language_xpath2_ExprSingle7797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_parse_org_emftext_language_xpath2_ExprSingle7807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_parse_org_emftext_language_xpath2_ExprSingle7817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_parse_org_emftext_language_xpath2_ExprSingle7827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_parse_org_emftext_language_xpath2_ExprSingle7837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_parse_org_emftext_language_xpath2_ExprSingle7847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_parse_org_emftext_language_xpath2_ExprSingle7857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_parse_org_emftext_language_xpath2_ExprSingle7867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_parse_org_emftext_language_xpath2_ExprSingle7877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_parse_org_emftext_language_xpath2_ExprSingle7887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_parse_org_emftext_language_xpath2_ExprSingle7897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_parse_org_emftext_language_xpath2_ExprSingle7907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_parse_org_emftext_language_xpath2_ExprSingle7917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_parse_org_emftext_language_xpath2_ExprSingle7927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_parse_org_emftext_language_xpath2_ExprSingle7937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_ExprSingle7947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_ExprSingle7957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ExprSingle7967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle7977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle7987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle7997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_parse_org_emftext_language_xpath2_ExprSingle8007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_ExprSingle8017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_ExprSingle8027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_ExprSingle8037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_ExprSingle8047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_ExprSingle8057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_ExprSingle8067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_ExprSingle8077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_ExprSingle8117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralComp_in_parse_org_emftext_language_xpath2_Comp8138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ValueComp_in_parse_org_emftext_language_xpath2_Comp8148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeComp_in_parse_org_emftext_language_xpath2_Comp8158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_EmptySequenceType_in_parse_org_emftext_language_xpath2_SequenceType8179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemSequenceType_in_parse_org_emftext_language_xpath2_SequenceType8189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_parse_org_emftext_language_xpath2_ValueExpr8210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PrimaryExpr8231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PrimaryExpr8241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr8251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PrimaryExpr8261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PrimaryExpr8301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_PathExprChild8322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_PathExprChild8332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_parse_org_emftext_language_xpath2_PathExprChild8372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_PathExprChild8382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_PathExprChild8392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_PathExprChild8402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_PathExprChild8412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_PathExprChild8422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_PathExprChild8432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_PathExprChild8442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_PathExprChild8482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_StepExpr8503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_StepExpr8513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_StepExpr8523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_StepExpr8533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_StepExpr8543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild8564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_parse_org_emftext_language_xpath2_SelfStepExprChild8574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_parse_org_emftext_language_xpath2_SelfStepExprChild8614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_parse_org_emftext_language_xpath2_SelfStepExprChild8624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild8634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_parse_org_emftext_language_xpath2_SelfStepExprChild8644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteral_in_parse_org_emftext_language_xpath2_SelfStepExprChild8684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NodeKindTest_in_parse_org_emftext_language_xpath2_NodeTest8705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QNameTest_in_parse_org_emftext_language_xpath2_NodeTest8715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyWildcard_in_parse_org_emftext_language_xpath2_NodeTest8725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_LocalNameWildcard_in_parse_org_emftext_language_xpath2_NodeTest8735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NamespaceWildcard_in_parse_org_emftext_language_xpath2_NodeTest8745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyKindTest_in_parse_org_emftext_language_xpath2_KindTest8766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DocumentTest_in_parse_org_emftext_language_xpath2_KindTest8776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TextTest_in_parse_org_emftext_language_xpath2_KindTest8786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CommentTest_in_parse_org_emftext_language_xpath2_KindTest8796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PITest_in_parse_org_emftext_language_xpath2_KindTest8806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_parse_org_emftext_language_xpath2_KindTest8816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_parse_org_emftext_language_xpath2_KindTest8826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_parse_org_emftext_language_xpath2_KindTest8836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_parse_org_emftext_language_xpath2_KindTest8846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_parse_org_emftext_language_xpath2_KindTest8856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaAttributeTest_in_parse_org_emftext_language_xpath2_KindTest8866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_parse_org_emftext_language_xpath2_KindTest8876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_parse_org_emftext_language_xpath2_KindTest8886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_parse_org_emftext_language_xpath2_KindTest8896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SchemaElementTest_in_parse_org_emftext_language_xpath2_KindTest8906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ItemKindTest_in_parse_org_emftext_language_xpath2_ItemType8927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AnyItemType_in_parse_org_emftext_language_xpath2_ItemType8937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AtomicItemType_in_parse_org_emftext_language_xpath2_ItemType8947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_Expr_in_synpred18_Xpath2949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IfExpr_in_synpred19_Xpath2963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ForExpr_in_synpred20_Xpath2977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_QuantifiedExpr_in_synpred21_Xpath2991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_synpred93_Xpath25365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_synpred94_Xpath25380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_OrExpr_in_synpred119_Xpath27817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AndExpr_in_synpred120_Xpath27827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ComparisonExpr_in_synpred121_Xpath27837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RangeExpr_in_synpred122_Xpath27847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AdditiveExpr_in_synpred123_Xpath27857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_MultiplicativeExpr_in_synpred124_Xpath27867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnionExpr_in_synpred125_Xpath27877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntersectExceptExpr_in_synpred126_Xpath27887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_InstanceofExpr_in_synpred127_Xpath27897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_TreatExpr_in_synpred128_Xpath27907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastableExpr_in_synpred129_Xpath27917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_CastExpr_in_synpred130_Xpath27927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_UnaryExpr_in_synpred131_Xpath27937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_synpred132_Xpath27947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred133_Xpath27957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PathExpr_in_synpred134_Xpath27967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_synpred135_Xpath27977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DescOrSelfStepExpr_in_synpred136_Xpath27987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_synpred137_Xpath27997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_synpred138_Xpath28007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_synpred139_Xpath28017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_synpred140_Xpath28027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_synpred141_Xpath28037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_synpred142_Xpath28047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred143_Xpath28057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred144_Xpath28067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred145_Xpath28077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred146_Xpath28087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred147_Xpath28097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred148_Xpath28107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_synpred159_Xpath28322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred160_Xpath28332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ChildStepExpr_in_synpred161_Xpath28342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_RootStepExpr_in_synpred163_Xpath28362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_SelfStepExpr_in_synpred164_Xpath28372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_synpred165_Xpath28382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_synpred166_Xpath28392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralReverseStep_in_synpred167_Xpath28402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevReverseStep_in_synpred168_Xpath28412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred169_Xpath28422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred170_Xpath28432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred171_Xpath28442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred172_Xpath28452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred173_Xpath28462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred174_Xpath28472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FilterExpr_in_synpred179_Xpath28564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_FunctionCall_in_synpred180_Xpath28574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_GeneralForwardStep_in_synpred181_Xpath28584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AbbrevForwardStep_in_synpred182_Xpath28594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_VarRef_in_synpred185_Xpath28624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ParenthesizedExpr_in_synpred186_Xpath28634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ContextItemExpr_in_synpred187_Xpath28644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_IntegerLiteral_in_synpred188_Xpath28654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DecimalLiteral_in_synpred189_Xpath28664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_DoubleLiteral_in_synpred190_Xpath28674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_PITest_in_synpred199_Xpath28806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NCNamePITest_in_synpred200_Xpath28816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_StringLiteralPITest_in_synpred201_Xpath28826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_AttributeTest_in_synpred202_Xpath28836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardAttributeTest_in_synpred203_Xpath28846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameAttributeTest_in_synpred204_Xpath28856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_ElementTest_in_synpred206_Xpath28876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_WildcardElementTest_in_synpred207_Xpath28886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_org_emftext_language_xpath2_NameElementTest_in_synpred208_Xpath28896 = new BitSet(new long[]{0x0000000000000002L});

}